{"ast":null,"code":"import axios from 'axios';\n\n// üåê Configuraci√≥n base de la API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// üì° Instancia de Axios configurada\nexport const apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  // 30 segundos para archivos grandes\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// üîß Interceptores para manejo de errores y logging\napiClient.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`[API] üì§ ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('[API] ‚ùå Error en request:', error);\n  return Promise.reject(error);\n});\napiClient.interceptors.response.use(response => {\n  console.log(`[API] ‚úÖ ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('[API] ‚ùå Error en response:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Manejo espec√≠fico de errores\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 429) {\n    console.warn('[API] ‚ö†Ô∏è Rate limit excedido');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500) {\n    console.error('[API] üî• Error del servidor');\n  }\n  return Promise.reject(error);\n});\n\n// üè• Tipos de datos para TypeScript\n\n// üîÑ Funciones de utilidad para manejo de errores\nexport const handleApiError = error => {\n  var _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n  if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.message) {\n    return error.response.data.message;\n  }\n  if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.error) {\n    return error.response.data.error;\n  }\n  if (error.message) {\n    return error.message;\n  }\n  return 'Error desconocido en la API';\n};\nexport const isApiError = error => {\n  return error.response && error.response.status >= 400;\n};\n\n// üìä Funci√≥n para formatear n√∫meros\nexport const formatNumber = num => {\n  return new Intl.NumberFormat('es-CO').format(num);\n};\n\n// üìÖ Funci√≥n para formatear fechas\nexport const formatDate = date => {\n  const d = new Date(date);\n  return d.toLocaleDateString('es-CO', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  });\n};\nexport const formatDateTime = date => {\n  const d = new Date(date);\n  return d.toLocaleString('es-CO', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// üé® Funci√≥n para obtener color seg√∫n el estado\nexport const getStatusColor = (hasAlerts, hasWarnings) => {\n  if (hasAlerts) return '#d32f2f'; // Rojo\n  if (hasWarnings) return '#ed6c02'; // Naranja\n  return '#2e7d32'; // Verde\n};\n\n// üìà Funci√≥n para calcular porcentajes\nexport const calculatePercentage = (value, total) => {\n  if (total === 0) return 0;\n  return Math.round(value / total * 100 * 100) / 100;\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","data","message","warn","handleApiError","_error$response4","_error$response4$data","_error$response5","_error$response5$data","isApiError","formatNumber","num","Intl","NumberFormat","format","formatDate","date","d","Date","toLocaleDateString","year","month","day","formatDateTime","toLocaleString","hour","minute","getStatusColor","hasAlerts","hasWarnings","calculatePercentage","value","total","Math","round"],"sources":["C:/Users/juan/Desktop/exelfinal/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// üåê Configuraci√≥n base de la API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// üì° Instancia de Axios configurada\r\nexport const apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000, // 30 segundos para archivos grandes\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// üîß Interceptores para manejo de errores y logging\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`[API] üì§ ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('[API] ‚ùå Error en request:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`[API] ‚úÖ ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('[API] ‚ùå Error en response:', error.response?.data || error.message);\r\n    \r\n    // Manejo espec√≠fico de errores\r\n    if (error.response?.status === 429) {\r\n      console.warn('[API] ‚ö†Ô∏è Rate limit excedido');\r\n    } else if (error.response?.status >= 500) {\r\n      console.error('[API] üî• Error del servidor');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// üè• Tipos de datos para TypeScript\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n  timestamp?: string;\r\n}\r\n\r\nexport interface InspeccionData {\r\n  id: string;\r\n  fecha: string;\r\n  conductor_nombre: string;\r\n  conductor_cedula: string;\r\n  placa_vehiculo: string;\r\n  contrato: string;\r\n  campo: string;\r\n  turno: string;\r\n  puntaje_total: number;\r\n  tiene_alerta_roja: boolean;\r\n  tiene_advertencias: boolean;\r\n  // Fatiga\r\n  consumo_medicamentos: boolean;\r\n  horas_sueno_suficientes: boolean;\r\n  libre_sintomas_fatiga: boolean;\r\n  condiciones_aptas: boolean;\r\n  observaciones?: string;\r\n}\r\n\r\nexport interface DashboardStats {\r\n  totalInspecciones: number;\r\n  alertasRojas: number;\r\n  advertencias: number;\r\n  conductoresActivos: number;\r\n  vehiculosInspeccionados: number;\r\n  eficienciaPromedio: number;\r\n  indiceFatiga: number;\r\n}\r\n\r\nexport interface SearchFilters {\r\n  fechaInicio?: string;\r\n  fechaFin?: string;\r\n  contrato?: string;\r\n  campo?: string;\r\n  conductor?: string;\r\n  placa?: string;\r\n  tieneAlertas?: boolean;\r\n  tieneAdvertencias?: boolean;\r\n  soloFatiga?: boolean;\r\n  page?: number;\r\n  limit?: number;\r\n}\r\n\r\nexport interface TrendData {\r\n  fecha: string;\r\n  totalInspecciones: number;\r\n  alertasRojas: number;\r\n  advertencias: number;\r\n  medicamentos: number;\r\n  suenoInsuficiente: number;\r\n  sintomasFatiga: number;\r\n  noAptos: number;\r\n  puntajePromedio: number;\r\n}\r\n\r\n// üîÑ Funciones de utilidad para manejo de errores\r\nexport const handleApiError = (error: any): string => {\r\n  if (error.response?.data?.message) {\r\n    return error.response.data.message;\r\n  }\r\n  if (error.response?.data?.error) {\r\n    return error.response.data.error;\r\n  }\r\n  if (error.message) {\r\n    return error.message;\r\n  }\r\n  return 'Error desconocido en la API';\r\n};\r\n\r\nexport const isApiError = (error: any): boolean => {\r\n  return error.response && error.response.status >= 400;\r\n};\r\n\r\n// üìä Funci√≥n para formatear n√∫meros\r\nexport const formatNumber = (num: number): string => {\r\n  return new Intl.NumberFormat('es-CO').format(num);\r\n};\r\n\r\n// üìÖ Funci√≥n para formatear fechas\r\nexport const formatDate = (date: string | Date): string => {\r\n  const d = new Date(date);\r\n  return d.toLocaleDateString('es-CO', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit'\r\n  });\r\n};\r\n\r\nexport const formatDateTime = (date: string | Date): string => {\r\n  const d = new Date(date);\r\n  return d.toLocaleString('es-CO', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n\r\n// üé® Funci√≥n para obtener color seg√∫n el estado\r\nexport const getStatusColor = (hasAlerts: boolean, hasWarnings: boolean): string => {\r\n  if (hasAlerts) return '#d32f2f'; // Rojo\r\n  if (hasWarnings) return '#ed6c02'; // Naranja\r\n  return '#2e7d32'; // Verde\r\n};\r\n\r\n// üìà Funci√≥n para calcular porcentajes\r\nexport const calculatePercentage = (value: number, total: number): number => {\r\n  if (total === 0) return 0;\r\n  return Math.round((value / total) * 100 * 100) / 100;\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}