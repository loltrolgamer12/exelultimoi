
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Inspeccion
 * 
 */
export type Inspeccion = $Result.DefaultSelection<Prisma.$InspeccionPayload>
/**
 * Model HistorialConductor
 * 
 */
export type HistorialConductor = $Result.DefaultSelection<Prisma.$HistorialConductorPayload>
/**
 * Model MetricasReporte
 * 
 */
export type MetricasReporte = $Result.DefaultSelection<Prisma.$MetricasReportePayload>
/**
 * Model ArchivosProcesados
 * 
 */
export type ArchivosProcesados = $Result.DefaultSelection<Prisma.$ArchivosProcesadosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Inspeccions
 * const inspeccions = await prisma.inspeccion.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Inspeccions
   * const inspeccions = await prisma.inspeccion.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.inspeccion`: Exposes CRUD operations for the **Inspeccion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inspeccions
    * const inspeccions = await prisma.inspeccion.findMany()
    * ```
    */
  get inspeccion(): Prisma.InspeccionDelegate<ExtArgs>;

  /**
   * `prisma.historialConductor`: Exposes CRUD operations for the **HistorialConductor** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HistorialConductors
    * const historialConductors = await prisma.historialConductor.findMany()
    * ```
    */
  get historialConductor(): Prisma.HistorialConductorDelegate<ExtArgs>;

  /**
   * `prisma.metricasReporte`: Exposes CRUD operations for the **MetricasReporte** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MetricasReportes
    * const metricasReportes = await prisma.metricasReporte.findMany()
    * ```
    */
  get metricasReporte(): Prisma.MetricasReporteDelegate<ExtArgs>;

  /**
   * `prisma.archivosProcesados`: Exposes CRUD operations for the **ArchivosProcesados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ArchivosProcesados
    * const archivosProcesados = await prisma.archivosProcesados.findMany()
    * ```
    */
  get archivosProcesados(): Prisma.ArchivosProcesadosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Inspeccion: 'Inspeccion',
    HistorialConductor: 'HistorialConductor',
    MetricasReporte: 'MetricasReporte',
    ArchivosProcesados: 'ArchivosProcesados'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "inspeccion" | "historialConductor" | "metricasReporte" | "archivosProcesados"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Inspeccion: {
        payload: Prisma.$InspeccionPayload<ExtArgs>
        fields: Prisma.InspeccionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InspeccionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InspeccionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          findFirst: {
            args: Prisma.InspeccionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InspeccionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          findMany: {
            args: Prisma.InspeccionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>[]
          }
          create: {
            args: Prisma.InspeccionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          createMany: {
            args: Prisma.InspeccionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InspeccionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>[]
          }
          delete: {
            args: Prisma.InspeccionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          update: {
            args: Prisma.InspeccionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          deleteMany: {
            args: Prisma.InspeccionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InspeccionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.InspeccionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InspeccionPayload>
          }
          aggregate: {
            args: Prisma.InspeccionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInspeccion>
          }
          groupBy: {
            args: Prisma.InspeccionGroupByArgs<ExtArgs>
            result: $Utils.Optional<InspeccionGroupByOutputType>[]
          }
          count: {
            args: Prisma.InspeccionCountArgs<ExtArgs>
            result: $Utils.Optional<InspeccionCountAggregateOutputType> | number
          }
        }
      }
      HistorialConductor: {
        payload: Prisma.$HistorialConductorPayload<ExtArgs>
        fields: Prisma.HistorialConductorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HistorialConductorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HistorialConductorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          findFirst: {
            args: Prisma.HistorialConductorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HistorialConductorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          findMany: {
            args: Prisma.HistorialConductorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>[]
          }
          create: {
            args: Prisma.HistorialConductorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          createMany: {
            args: Prisma.HistorialConductorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HistorialConductorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>[]
          }
          delete: {
            args: Prisma.HistorialConductorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          update: {
            args: Prisma.HistorialConductorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          deleteMany: {
            args: Prisma.HistorialConductorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HistorialConductorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HistorialConductorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HistorialConductorPayload>
          }
          aggregate: {
            args: Prisma.HistorialConductorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorialConductor>
          }
          groupBy: {
            args: Prisma.HistorialConductorGroupByArgs<ExtArgs>
            result: $Utils.Optional<HistorialConductorGroupByOutputType>[]
          }
          count: {
            args: Prisma.HistorialConductorCountArgs<ExtArgs>
            result: $Utils.Optional<HistorialConductorCountAggregateOutputType> | number
          }
        }
      }
      MetricasReporte: {
        payload: Prisma.$MetricasReportePayload<ExtArgs>
        fields: Prisma.MetricasReporteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MetricasReporteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MetricasReporteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          findFirst: {
            args: Prisma.MetricasReporteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MetricasReporteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          findMany: {
            args: Prisma.MetricasReporteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>[]
          }
          create: {
            args: Prisma.MetricasReporteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          createMany: {
            args: Prisma.MetricasReporteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MetricasReporteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>[]
          }
          delete: {
            args: Prisma.MetricasReporteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          update: {
            args: Prisma.MetricasReporteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          deleteMany: {
            args: Prisma.MetricasReporteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MetricasReporteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MetricasReporteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MetricasReportePayload>
          }
          aggregate: {
            args: Prisma.MetricasReporteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMetricasReporte>
          }
          groupBy: {
            args: Prisma.MetricasReporteGroupByArgs<ExtArgs>
            result: $Utils.Optional<MetricasReporteGroupByOutputType>[]
          }
          count: {
            args: Prisma.MetricasReporteCountArgs<ExtArgs>
            result: $Utils.Optional<MetricasReporteCountAggregateOutputType> | number
          }
        }
      }
      ArchivosProcesados: {
        payload: Prisma.$ArchivosProcesadosPayload<ExtArgs>
        fields: Prisma.ArchivosProcesadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ArchivosProcesadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ArchivosProcesadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          findFirst: {
            args: Prisma.ArchivosProcesadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ArchivosProcesadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          findMany: {
            args: Prisma.ArchivosProcesadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>[]
          }
          create: {
            args: Prisma.ArchivosProcesadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          createMany: {
            args: Prisma.ArchivosProcesadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ArchivosProcesadosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>[]
          }
          delete: {
            args: Prisma.ArchivosProcesadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          update: {
            args: Prisma.ArchivosProcesadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          deleteMany: {
            args: Prisma.ArchivosProcesadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ArchivosProcesadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ArchivosProcesadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ArchivosProcesadosPayload>
          }
          aggregate: {
            args: Prisma.ArchivosProcesadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArchivosProcesados>
          }
          groupBy: {
            args: Prisma.ArchivosProcesadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArchivosProcesadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.ArchivosProcesadosCountArgs<ExtArgs>
            result: $Utils.Optional<ArchivosProcesadosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type InspeccionCountOutputType
   */

  export type InspeccionCountOutputType = {
    historial: number
  }

  export type InspeccionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historial?: boolean | InspeccionCountOutputTypeCountHistorialArgs
  }

  // Custom InputTypes
  /**
   * InspeccionCountOutputType without action
   */
  export type InspeccionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspeccionCountOutputType
     */
    select?: InspeccionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InspeccionCountOutputType without action
   */
  export type InspeccionCountOutputTypeCountHistorialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialConductorWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Inspeccion
   */

  export type AggregateInspeccion = {
    _count: InspeccionCountAggregateOutputType | null
    _avg: InspeccionAvgAggregateOutputType | null
    _sum: InspeccionSumAggregateOutputType | null
    _min: InspeccionMinAggregateOutputType | null
    _max: InspeccionMaxAggregateOutputType | null
  }

  export type InspeccionAvgAggregateOutputType = {
    marca_temporal: number | null
    kilometraje: number | null
  }

  export type InspeccionSumAggregateOutputType = {
    marca_temporal: number | null
    kilometraje: number | null
  }

  export type InspeccionMinAggregateOutputType = {
    id: string | null
    fecha: Date | null
    marca_temporal: number | null
    nombre_inspector: string | null
    contrato: string | null
    campo_coordinacion: string | null
    placa_vehiculo: string | null
    kilometraje: number | null
    turno: string | null
    altas_bajas: boolean | null
    direccionales: boolean | null
    parqueo: boolean | null
    freno: boolean | null
    reversa_alarma: boolean | null
    espejos: boolean | null
    vidrio_frontal: boolean | null
    orden_aseo: boolean | null
    pito: boolean | null
    gps: boolean | null
    frenos: boolean | null
    freno_emergencia: boolean | null
    cinturones: boolean | null
    puertas: boolean | null
    vidrios: boolean | null
    limpia_brisas: boolean | null
    extintor_vigente: boolean | null
    botiquin: boolean | null
    tapiceria: boolean | null
    indicadores: boolean | null
    objetos_sueltos: boolean | null
    aceite_motor: boolean | null
    fluido_frenos: boolean | null
    fluido_direccion: boolean | null
    fluido_refrigerante: boolean | null
    fluido_limpia_parabrisas: boolean | null
    correas: boolean | null
    baterias: boolean | null
    llantas_labrado: boolean | null
    llantas_sin_cortes: boolean | null
    llanta_repuesto: boolean | null
    copas_pernos_llantas: boolean | null
    suspension: boolean | null
    direccion_terminales: boolean | null
    tapa_tanque: boolean | null
    equipo_carretera: boolean | null
    kit_ambiental: boolean | null
    documentacion: boolean | null
    observaciones: string | null
    horas_sueno: boolean | null
    libre_fatiga: boolean | null
    condiciones_aptas: boolean | null
    consumo_medicamentos: boolean | null
    placa_vehiculo_extra: string | null
    tiene_alerta_roja: boolean | null
    tiene_advertencias: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InspeccionMaxAggregateOutputType = {
    id: string | null
    fecha: Date | null
    marca_temporal: number | null
    nombre_inspector: string | null
    contrato: string | null
    campo_coordinacion: string | null
    placa_vehiculo: string | null
    kilometraje: number | null
    turno: string | null
    altas_bajas: boolean | null
    direccionales: boolean | null
    parqueo: boolean | null
    freno: boolean | null
    reversa_alarma: boolean | null
    espejos: boolean | null
    vidrio_frontal: boolean | null
    orden_aseo: boolean | null
    pito: boolean | null
    gps: boolean | null
    frenos: boolean | null
    freno_emergencia: boolean | null
    cinturones: boolean | null
    puertas: boolean | null
    vidrios: boolean | null
    limpia_brisas: boolean | null
    extintor_vigente: boolean | null
    botiquin: boolean | null
    tapiceria: boolean | null
    indicadores: boolean | null
    objetos_sueltos: boolean | null
    aceite_motor: boolean | null
    fluido_frenos: boolean | null
    fluido_direccion: boolean | null
    fluido_refrigerante: boolean | null
    fluido_limpia_parabrisas: boolean | null
    correas: boolean | null
    baterias: boolean | null
    llantas_labrado: boolean | null
    llantas_sin_cortes: boolean | null
    llanta_repuesto: boolean | null
    copas_pernos_llantas: boolean | null
    suspension: boolean | null
    direccion_terminales: boolean | null
    tapa_tanque: boolean | null
    equipo_carretera: boolean | null
    kit_ambiental: boolean | null
    documentacion: boolean | null
    observaciones: string | null
    horas_sueno: boolean | null
    libre_fatiga: boolean | null
    condiciones_aptas: boolean | null
    consumo_medicamentos: boolean | null
    placa_vehiculo_extra: string | null
    tiene_alerta_roja: boolean | null
    tiene_advertencias: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InspeccionCountAggregateOutputType = {
    id: number
    fecha: number
    marca_temporal: number
    nombre_inspector: number
    contrato: number
    campo_coordinacion: number
    placa_vehiculo: number
    kilometraje: number
    turno: number
    altas_bajas: number
    direccionales: number
    parqueo: number
    freno: number
    reversa_alarma: number
    espejos: number
    vidrio_frontal: number
    orden_aseo: number
    pito: number
    gps: number
    frenos: number
    freno_emergencia: number
    cinturones: number
    puertas: number
    vidrios: number
    limpia_brisas: number
    extintor_vigente: number
    botiquin: number
    tapiceria: number
    indicadores: number
    objetos_sueltos: number
    aceite_motor: number
    fluido_frenos: number
    fluido_direccion: number
    fluido_refrigerante: number
    fluido_limpia_parabrisas: number
    correas: number
    baterias: number
    llantas_labrado: number
    llantas_sin_cortes: number
    llanta_repuesto: number
    copas_pernos_llantas: number
    suspension: number
    direccion_terminales: number
    tapa_tanque: number
    equipo_carretera: number
    kit_ambiental: number
    documentacion: number
    observaciones: number
    horas_sueno: number
    libre_fatiga: number
    condiciones_aptas: number
    consumo_medicamentos: number
    placa_vehiculo_extra: number
    tiene_alerta_roja: number
    tiene_advertencias: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InspeccionAvgAggregateInputType = {
    marca_temporal?: true
    kilometraje?: true
  }

  export type InspeccionSumAggregateInputType = {
    marca_temporal?: true
    kilometraje?: true
  }

  export type InspeccionMinAggregateInputType = {
    id?: true
    fecha?: true
    marca_temporal?: true
    nombre_inspector?: true
    contrato?: true
    campo_coordinacion?: true
    placa_vehiculo?: true
    kilometraje?: true
    turno?: true
    altas_bajas?: true
    direccionales?: true
    parqueo?: true
    freno?: true
    reversa_alarma?: true
    espejos?: true
    vidrio_frontal?: true
    orden_aseo?: true
    pito?: true
    gps?: true
    frenos?: true
    freno_emergencia?: true
    cinturones?: true
    puertas?: true
    vidrios?: true
    limpia_brisas?: true
    extintor_vigente?: true
    botiquin?: true
    tapiceria?: true
    indicadores?: true
    objetos_sueltos?: true
    aceite_motor?: true
    fluido_frenos?: true
    fluido_direccion?: true
    fluido_refrigerante?: true
    fluido_limpia_parabrisas?: true
    correas?: true
    baterias?: true
    llantas_labrado?: true
    llantas_sin_cortes?: true
    llanta_repuesto?: true
    copas_pernos_llantas?: true
    suspension?: true
    direccion_terminales?: true
    tapa_tanque?: true
    equipo_carretera?: true
    kit_ambiental?: true
    documentacion?: true
    observaciones?: true
    horas_sueno?: true
    libre_fatiga?: true
    condiciones_aptas?: true
    consumo_medicamentos?: true
    placa_vehiculo_extra?: true
    tiene_alerta_roja?: true
    tiene_advertencias?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InspeccionMaxAggregateInputType = {
    id?: true
    fecha?: true
    marca_temporal?: true
    nombre_inspector?: true
    contrato?: true
    campo_coordinacion?: true
    placa_vehiculo?: true
    kilometraje?: true
    turno?: true
    altas_bajas?: true
    direccionales?: true
    parqueo?: true
    freno?: true
    reversa_alarma?: true
    espejos?: true
    vidrio_frontal?: true
    orden_aseo?: true
    pito?: true
    gps?: true
    frenos?: true
    freno_emergencia?: true
    cinturones?: true
    puertas?: true
    vidrios?: true
    limpia_brisas?: true
    extintor_vigente?: true
    botiquin?: true
    tapiceria?: true
    indicadores?: true
    objetos_sueltos?: true
    aceite_motor?: true
    fluido_frenos?: true
    fluido_direccion?: true
    fluido_refrigerante?: true
    fluido_limpia_parabrisas?: true
    correas?: true
    baterias?: true
    llantas_labrado?: true
    llantas_sin_cortes?: true
    llanta_repuesto?: true
    copas_pernos_llantas?: true
    suspension?: true
    direccion_terminales?: true
    tapa_tanque?: true
    equipo_carretera?: true
    kit_ambiental?: true
    documentacion?: true
    observaciones?: true
    horas_sueno?: true
    libre_fatiga?: true
    condiciones_aptas?: true
    consumo_medicamentos?: true
    placa_vehiculo_extra?: true
    tiene_alerta_roja?: true
    tiene_advertencias?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InspeccionCountAggregateInputType = {
    id?: true
    fecha?: true
    marca_temporal?: true
    nombre_inspector?: true
    contrato?: true
    campo_coordinacion?: true
    placa_vehiculo?: true
    kilometraje?: true
    turno?: true
    altas_bajas?: true
    direccionales?: true
    parqueo?: true
    freno?: true
    reversa_alarma?: true
    espejos?: true
    vidrio_frontal?: true
    orden_aseo?: true
    pito?: true
    gps?: true
    frenos?: true
    freno_emergencia?: true
    cinturones?: true
    puertas?: true
    vidrios?: true
    limpia_brisas?: true
    extintor_vigente?: true
    botiquin?: true
    tapiceria?: true
    indicadores?: true
    objetos_sueltos?: true
    aceite_motor?: true
    fluido_frenos?: true
    fluido_direccion?: true
    fluido_refrigerante?: true
    fluido_limpia_parabrisas?: true
    correas?: true
    baterias?: true
    llantas_labrado?: true
    llantas_sin_cortes?: true
    llanta_repuesto?: true
    copas_pernos_llantas?: true
    suspension?: true
    direccion_terminales?: true
    tapa_tanque?: true
    equipo_carretera?: true
    kit_ambiental?: true
    documentacion?: true
    observaciones?: true
    horas_sueno?: true
    libre_fatiga?: true
    condiciones_aptas?: true
    consumo_medicamentos?: true
    placa_vehiculo_extra?: true
    tiene_alerta_roja?: true
    tiene_advertencias?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InspeccionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inspeccion to aggregate.
     */
    where?: InspeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inspeccions to fetch.
     */
    orderBy?: InspeccionOrderByWithRelationInput | InspeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InspeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inspeccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inspeccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Inspeccions
    **/
    _count?: true | InspeccionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InspeccionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InspeccionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InspeccionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InspeccionMaxAggregateInputType
  }

  export type GetInspeccionAggregateType<T extends InspeccionAggregateArgs> = {
        [P in keyof T & keyof AggregateInspeccion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInspeccion[P]>
      : GetScalarType<T[P], AggregateInspeccion[P]>
  }




  export type InspeccionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InspeccionWhereInput
    orderBy?: InspeccionOrderByWithAggregationInput | InspeccionOrderByWithAggregationInput[]
    by: InspeccionScalarFieldEnum[] | InspeccionScalarFieldEnum
    having?: InspeccionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InspeccionCountAggregateInputType | true
    _avg?: InspeccionAvgAggregateInputType
    _sum?: InspeccionSumAggregateInputType
    _min?: InspeccionMinAggregateInputType
    _max?: InspeccionMaxAggregateInputType
  }

  export type InspeccionGroupByOutputType = {
    id: string
    fecha: Date
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra: string | null
    tiene_alerta_roja: boolean
    tiene_advertencias: boolean
    createdAt: Date
    updatedAt: Date
    _count: InspeccionCountAggregateOutputType | null
    _avg: InspeccionAvgAggregateOutputType | null
    _sum: InspeccionSumAggregateOutputType | null
    _min: InspeccionMinAggregateOutputType | null
    _max: InspeccionMaxAggregateOutputType | null
  }

  type GetInspeccionGroupByPayload<T extends InspeccionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InspeccionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InspeccionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InspeccionGroupByOutputType[P]>
            : GetScalarType<T[P], InspeccionGroupByOutputType[P]>
        }
      >
    >


  export type InspeccionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    marca_temporal?: boolean
    nombre_inspector?: boolean
    contrato?: boolean
    campo_coordinacion?: boolean
    placa_vehiculo?: boolean
    kilometraje?: boolean
    turno?: boolean
    altas_bajas?: boolean
    direccionales?: boolean
    parqueo?: boolean
    freno?: boolean
    reversa_alarma?: boolean
    espejos?: boolean
    vidrio_frontal?: boolean
    orden_aseo?: boolean
    pito?: boolean
    gps?: boolean
    frenos?: boolean
    freno_emergencia?: boolean
    cinturones?: boolean
    puertas?: boolean
    vidrios?: boolean
    limpia_brisas?: boolean
    extintor_vigente?: boolean
    botiquin?: boolean
    tapiceria?: boolean
    indicadores?: boolean
    objetos_sueltos?: boolean
    aceite_motor?: boolean
    fluido_frenos?: boolean
    fluido_direccion?: boolean
    fluido_refrigerante?: boolean
    fluido_limpia_parabrisas?: boolean
    correas?: boolean
    baterias?: boolean
    llantas_labrado?: boolean
    llantas_sin_cortes?: boolean
    llanta_repuesto?: boolean
    copas_pernos_llantas?: boolean
    suspension?: boolean
    direccion_terminales?: boolean
    tapa_tanque?: boolean
    equipo_carretera?: boolean
    kit_ambiental?: boolean
    documentacion?: boolean
    observaciones?: boolean
    horas_sueno?: boolean
    libre_fatiga?: boolean
    condiciones_aptas?: boolean
    consumo_medicamentos?: boolean
    placa_vehiculo_extra?: boolean
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    historial?: boolean | Inspeccion$historialArgs<ExtArgs>
    _count?: boolean | InspeccionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inspeccion"]>

  export type InspeccionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha?: boolean
    marca_temporal?: boolean
    nombre_inspector?: boolean
    contrato?: boolean
    campo_coordinacion?: boolean
    placa_vehiculo?: boolean
    kilometraje?: boolean
    turno?: boolean
    altas_bajas?: boolean
    direccionales?: boolean
    parqueo?: boolean
    freno?: boolean
    reversa_alarma?: boolean
    espejos?: boolean
    vidrio_frontal?: boolean
    orden_aseo?: boolean
    pito?: boolean
    gps?: boolean
    frenos?: boolean
    freno_emergencia?: boolean
    cinturones?: boolean
    puertas?: boolean
    vidrios?: boolean
    limpia_brisas?: boolean
    extintor_vigente?: boolean
    botiquin?: boolean
    tapiceria?: boolean
    indicadores?: boolean
    objetos_sueltos?: boolean
    aceite_motor?: boolean
    fluido_frenos?: boolean
    fluido_direccion?: boolean
    fluido_refrigerante?: boolean
    fluido_limpia_parabrisas?: boolean
    correas?: boolean
    baterias?: boolean
    llantas_labrado?: boolean
    llantas_sin_cortes?: boolean
    llanta_repuesto?: boolean
    copas_pernos_llantas?: boolean
    suspension?: boolean
    direccion_terminales?: boolean
    tapa_tanque?: boolean
    equipo_carretera?: boolean
    kit_ambiental?: boolean
    documentacion?: boolean
    observaciones?: boolean
    horas_sueno?: boolean
    libre_fatiga?: boolean
    condiciones_aptas?: boolean
    consumo_medicamentos?: boolean
    placa_vehiculo_extra?: boolean
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["inspeccion"]>

  export type InspeccionSelectScalar = {
    id?: boolean
    fecha?: boolean
    marca_temporal?: boolean
    nombre_inspector?: boolean
    contrato?: boolean
    campo_coordinacion?: boolean
    placa_vehiculo?: boolean
    kilometraje?: boolean
    turno?: boolean
    altas_bajas?: boolean
    direccionales?: boolean
    parqueo?: boolean
    freno?: boolean
    reversa_alarma?: boolean
    espejos?: boolean
    vidrio_frontal?: boolean
    orden_aseo?: boolean
    pito?: boolean
    gps?: boolean
    frenos?: boolean
    freno_emergencia?: boolean
    cinturones?: boolean
    puertas?: boolean
    vidrios?: boolean
    limpia_brisas?: boolean
    extintor_vigente?: boolean
    botiquin?: boolean
    tapiceria?: boolean
    indicadores?: boolean
    objetos_sueltos?: boolean
    aceite_motor?: boolean
    fluido_frenos?: boolean
    fluido_direccion?: boolean
    fluido_refrigerante?: boolean
    fluido_limpia_parabrisas?: boolean
    correas?: boolean
    baterias?: boolean
    llantas_labrado?: boolean
    llantas_sin_cortes?: boolean
    llanta_repuesto?: boolean
    copas_pernos_llantas?: boolean
    suspension?: boolean
    direccion_terminales?: boolean
    tapa_tanque?: boolean
    equipo_carretera?: boolean
    kit_ambiental?: boolean
    documentacion?: boolean
    observaciones?: boolean
    horas_sueno?: boolean
    libre_fatiga?: boolean
    condiciones_aptas?: boolean
    consumo_medicamentos?: boolean
    placa_vehiculo_extra?: boolean
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type InspeccionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historial?: boolean | Inspeccion$historialArgs<ExtArgs>
    _count?: boolean | InspeccionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type InspeccionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $InspeccionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Inspeccion"
    objects: {
      historial: Prisma.$HistorialConductorPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fecha: Date
      marca_temporal: number
      nombre_inspector: string
      contrato: string
      campo_coordinacion: string
      placa_vehiculo: string
      kilometraje: number
      turno: string
      altas_bajas: boolean
      direccionales: boolean
      parqueo: boolean
      freno: boolean
      reversa_alarma: boolean
      espejos: boolean
      vidrio_frontal: boolean
      orden_aseo: boolean
      pito: boolean
      gps: boolean
      frenos: boolean
      freno_emergencia: boolean
      cinturones: boolean
      puertas: boolean
      vidrios: boolean
      limpia_brisas: boolean
      extintor_vigente: boolean
      botiquin: boolean
      tapiceria: boolean
      indicadores: boolean
      objetos_sueltos: boolean
      aceite_motor: boolean
      fluido_frenos: boolean
      fluido_direccion: boolean
      fluido_refrigerante: boolean
      fluido_limpia_parabrisas: boolean
      correas: boolean
      baterias: boolean
      llantas_labrado: boolean
      llantas_sin_cortes: boolean
      llanta_repuesto: boolean
      copas_pernos_llantas: boolean
      suspension: boolean
      direccion_terminales: boolean
      tapa_tanque: boolean
      equipo_carretera: boolean
      kit_ambiental: boolean
      documentacion: boolean
      observaciones: string | null
      horas_sueno: boolean
      libre_fatiga: boolean
      condiciones_aptas: boolean
      consumo_medicamentos: boolean
      placa_vehiculo_extra: string | null
      tiene_alerta_roja: boolean
      tiene_advertencias: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inspeccion"]>
    composites: {}
  }

  type InspeccionGetPayload<S extends boolean | null | undefined | InspeccionDefaultArgs> = $Result.GetResult<Prisma.$InspeccionPayload, S>

  type InspeccionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<InspeccionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InspeccionCountAggregateInputType | true
    }

  export interface InspeccionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Inspeccion'], meta: { name: 'Inspeccion' } }
    /**
     * Find zero or one Inspeccion that matches the filter.
     * @param {InspeccionFindUniqueArgs} args - Arguments to find a Inspeccion
     * @example
     * // Get one Inspeccion
     * const inspeccion = await prisma.inspeccion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InspeccionFindUniqueArgs>(args: SelectSubset<T, InspeccionFindUniqueArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Inspeccion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {InspeccionFindUniqueOrThrowArgs} args - Arguments to find a Inspeccion
     * @example
     * // Get one Inspeccion
     * const inspeccion = await prisma.inspeccion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InspeccionFindUniqueOrThrowArgs>(args: SelectSubset<T, InspeccionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Inspeccion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionFindFirstArgs} args - Arguments to find a Inspeccion
     * @example
     * // Get one Inspeccion
     * const inspeccion = await prisma.inspeccion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InspeccionFindFirstArgs>(args?: SelectSubset<T, InspeccionFindFirstArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Inspeccion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionFindFirstOrThrowArgs} args - Arguments to find a Inspeccion
     * @example
     * // Get one Inspeccion
     * const inspeccion = await prisma.inspeccion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InspeccionFindFirstOrThrowArgs>(args?: SelectSubset<T, InspeccionFindFirstOrThrowArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Inspeccions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inspeccions
     * const inspeccions = await prisma.inspeccion.findMany()
     * 
     * // Get first 10 Inspeccions
     * const inspeccions = await prisma.inspeccion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inspeccionWithIdOnly = await prisma.inspeccion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InspeccionFindManyArgs>(args?: SelectSubset<T, InspeccionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Inspeccion.
     * @param {InspeccionCreateArgs} args - Arguments to create a Inspeccion.
     * @example
     * // Create one Inspeccion
     * const Inspeccion = await prisma.inspeccion.create({
     *   data: {
     *     // ... data to create a Inspeccion
     *   }
     * })
     * 
     */
    create<T extends InspeccionCreateArgs>(args: SelectSubset<T, InspeccionCreateArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Inspeccions.
     * @param {InspeccionCreateManyArgs} args - Arguments to create many Inspeccions.
     * @example
     * // Create many Inspeccions
     * const inspeccion = await prisma.inspeccion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InspeccionCreateManyArgs>(args?: SelectSubset<T, InspeccionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inspeccions and returns the data saved in the database.
     * @param {InspeccionCreateManyAndReturnArgs} args - Arguments to create many Inspeccions.
     * @example
     * // Create many Inspeccions
     * const inspeccion = await prisma.inspeccion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inspeccions and only return the `id`
     * const inspeccionWithIdOnly = await prisma.inspeccion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InspeccionCreateManyAndReturnArgs>(args?: SelectSubset<T, InspeccionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Inspeccion.
     * @param {InspeccionDeleteArgs} args - Arguments to delete one Inspeccion.
     * @example
     * // Delete one Inspeccion
     * const Inspeccion = await prisma.inspeccion.delete({
     *   where: {
     *     // ... filter to delete one Inspeccion
     *   }
     * })
     * 
     */
    delete<T extends InspeccionDeleteArgs>(args: SelectSubset<T, InspeccionDeleteArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Inspeccion.
     * @param {InspeccionUpdateArgs} args - Arguments to update one Inspeccion.
     * @example
     * // Update one Inspeccion
     * const inspeccion = await prisma.inspeccion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InspeccionUpdateArgs>(args: SelectSubset<T, InspeccionUpdateArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Inspeccions.
     * @param {InspeccionDeleteManyArgs} args - Arguments to filter Inspeccions to delete.
     * @example
     * // Delete a few Inspeccions
     * const { count } = await prisma.inspeccion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InspeccionDeleteManyArgs>(args?: SelectSubset<T, InspeccionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inspeccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inspeccions
     * const inspeccion = await prisma.inspeccion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InspeccionUpdateManyArgs>(args: SelectSubset<T, InspeccionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Inspeccion.
     * @param {InspeccionUpsertArgs} args - Arguments to update or create a Inspeccion.
     * @example
     * // Update or create a Inspeccion
     * const inspeccion = await prisma.inspeccion.upsert({
     *   create: {
     *     // ... data to create a Inspeccion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inspeccion we want to update
     *   }
     * })
     */
    upsert<T extends InspeccionUpsertArgs>(args: SelectSubset<T, InspeccionUpsertArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Inspeccions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionCountArgs} args - Arguments to filter Inspeccions to count.
     * @example
     * // Count the number of Inspeccions
     * const count = await prisma.inspeccion.count({
     *   where: {
     *     // ... the filter for the Inspeccions we want to count
     *   }
     * })
    **/
    count<T extends InspeccionCountArgs>(
      args?: Subset<T, InspeccionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InspeccionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inspeccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InspeccionAggregateArgs>(args: Subset<T, InspeccionAggregateArgs>): Prisma.PrismaPromise<GetInspeccionAggregateType<T>>

    /**
     * Group by Inspeccion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InspeccionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InspeccionGroupByArgs['orderBy'] }
        : { orderBy?: InspeccionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InspeccionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInspeccionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Inspeccion model
   */
  readonly fields: InspeccionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Inspeccion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InspeccionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    historial<T extends Inspeccion$historialArgs<ExtArgs> = {}>(args?: Subset<T, Inspeccion$historialArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Inspeccion model
   */ 
  interface InspeccionFieldRefs {
    readonly id: FieldRef<"Inspeccion", 'String'>
    readonly fecha: FieldRef<"Inspeccion", 'DateTime'>
    readonly marca_temporal: FieldRef<"Inspeccion", 'Float'>
    readonly nombre_inspector: FieldRef<"Inspeccion", 'String'>
    readonly contrato: FieldRef<"Inspeccion", 'String'>
    readonly campo_coordinacion: FieldRef<"Inspeccion", 'String'>
    readonly placa_vehiculo: FieldRef<"Inspeccion", 'String'>
    readonly kilometraje: FieldRef<"Inspeccion", 'Int'>
    readonly turno: FieldRef<"Inspeccion", 'String'>
    readonly altas_bajas: FieldRef<"Inspeccion", 'Boolean'>
    readonly direccionales: FieldRef<"Inspeccion", 'Boolean'>
    readonly parqueo: FieldRef<"Inspeccion", 'Boolean'>
    readonly freno: FieldRef<"Inspeccion", 'Boolean'>
    readonly reversa_alarma: FieldRef<"Inspeccion", 'Boolean'>
    readonly espejos: FieldRef<"Inspeccion", 'Boolean'>
    readonly vidrio_frontal: FieldRef<"Inspeccion", 'Boolean'>
    readonly orden_aseo: FieldRef<"Inspeccion", 'Boolean'>
    readonly pito: FieldRef<"Inspeccion", 'Boolean'>
    readonly gps: FieldRef<"Inspeccion", 'Boolean'>
    readonly frenos: FieldRef<"Inspeccion", 'Boolean'>
    readonly freno_emergencia: FieldRef<"Inspeccion", 'Boolean'>
    readonly cinturones: FieldRef<"Inspeccion", 'Boolean'>
    readonly puertas: FieldRef<"Inspeccion", 'Boolean'>
    readonly vidrios: FieldRef<"Inspeccion", 'Boolean'>
    readonly limpia_brisas: FieldRef<"Inspeccion", 'Boolean'>
    readonly extintor_vigente: FieldRef<"Inspeccion", 'Boolean'>
    readonly botiquin: FieldRef<"Inspeccion", 'Boolean'>
    readonly tapiceria: FieldRef<"Inspeccion", 'Boolean'>
    readonly indicadores: FieldRef<"Inspeccion", 'Boolean'>
    readonly objetos_sueltos: FieldRef<"Inspeccion", 'Boolean'>
    readonly aceite_motor: FieldRef<"Inspeccion", 'Boolean'>
    readonly fluido_frenos: FieldRef<"Inspeccion", 'Boolean'>
    readonly fluido_direccion: FieldRef<"Inspeccion", 'Boolean'>
    readonly fluido_refrigerante: FieldRef<"Inspeccion", 'Boolean'>
    readonly fluido_limpia_parabrisas: FieldRef<"Inspeccion", 'Boolean'>
    readonly correas: FieldRef<"Inspeccion", 'Boolean'>
    readonly baterias: FieldRef<"Inspeccion", 'Boolean'>
    readonly llantas_labrado: FieldRef<"Inspeccion", 'Boolean'>
    readonly llantas_sin_cortes: FieldRef<"Inspeccion", 'Boolean'>
    readonly llanta_repuesto: FieldRef<"Inspeccion", 'Boolean'>
    readonly copas_pernos_llantas: FieldRef<"Inspeccion", 'Boolean'>
    readonly suspension: FieldRef<"Inspeccion", 'Boolean'>
    readonly direccion_terminales: FieldRef<"Inspeccion", 'Boolean'>
    readonly tapa_tanque: FieldRef<"Inspeccion", 'Boolean'>
    readonly equipo_carretera: FieldRef<"Inspeccion", 'Boolean'>
    readonly kit_ambiental: FieldRef<"Inspeccion", 'Boolean'>
    readonly documentacion: FieldRef<"Inspeccion", 'Boolean'>
    readonly observaciones: FieldRef<"Inspeccion", 'String'>
    readonly horas_sueno: FieldRef<"Inspeccion", 'Boolean'>
    readonly libre_fatiga: FieldRef<"Inspeccion", 'Boolean'>
    readonly condiciones_aptas: FieldRef<"Inspeccion", 'Boolean'>
    readonly consumo_medicamentos: FieldRef<"Inspeccion", 'Boolean'>
    readonly placa_vehiculo_extra: FieldRef<"Inspeccion", 'String'>
    readonly tiene_alerta_roja: FieldRef<"Inspeccion", 'Boolean'>
    readonly tiene_advertencias: FieldRef<"Inspeccion", 'Boolean'>
    readonly createdAt: FieldRef<"Inspeccion", 'DateTime'>
    readonly updatedAt: FieldRef<"Inspeccion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Inspeccion findUnique
   */
  export type InspeccionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter, which Inspeccion to fetch.
     */
    where: InspeccionWhereUniqueInput
  }

  /**
   * Inspeccion findUniqueOrThrow
   */
  export type InspeccionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter, which Inspeccion to fetch.
     */
    where: InspeccionWhereUniqueInput
  }

  /**
   * Inspeccion findFirst
   */
  export type InspeccionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter, which Inspeccion to fetch.
     */
    where?: InspeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inspeccions to fetch.
     */
    orderBy?: InspeccionOrderByWithRelationInput | InspeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inspeccions.
     */
    cursor?: InspeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inspeccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inspeccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inspeccions.
     */
    distinct?: InspeccionScalarFieldEnum | InspeccionScalarFieldEnum[]
  }

  /**
   * Inspeccion findFirstOrThrow
   */
  export type InspeccionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter, which Inspeccion to fetch.
     */
    where?: InspeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inspeccions to fetch.
     */
    orderBy?: InspeccionOrderByWithRelationInput | InspeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Inspeccions.
     */
    cursor?: InspeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inspeccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inspeccions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Inspeccions.
     */
    distinct?: InspeccionScalarFieldEnum | InspeccionScalarFieldEnum[]
  }

  /**
   * Inspeccion findMany
   */
  export type InspeccionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter, which Inspeccions to fetch.
     */
    where?: InspeccionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Inspeccions to fetch.
     */
    orderBy?: InspeccionOrderByWithRelationInput | InspeccionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Inspeccions.
     */
    cursor?: InspeccionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Inspeccions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Inspeccions.
     */
    skip?: number
    distinct?: InspeccionScalarFieldEnum | InspeccionScalarFieldEnum[]
  }

  /**
   * Inspeccion create
   */
  export type InspeccionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * The data needed to create a Inspeccion.
     */
    data: XOR<InspeccionCreateInput, InspeccionUncheckedCreateInput>
  }

  /**
   * Inspeccion createMany
   */
  export type InspeccionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Inspeccions.
     */
    data: InspeccionCreateManyInput | InspeccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inspeccion createManyAndReturn
   */
  export type InspeccionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Inspeccions.
     */
    data: InspeccionCreateManyInput | InspeccionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Inspeccion update
   */
  export type InspeccionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * The data needed to update a Inspeccion.
     */
    data: XOR<InspeccionUpdateInput, InspeccionUncheckedUpdateInput>
    /**
     * Choose, which Inspeccion to update.
     */
    where: InspeccionWhereUniqueInput
  }

  /**
   * Inspeccion updateMany
   */
  export type InspeccionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Inspeccions.
     */
    data: XOR<InspeccionUpdateManyMutationInput, InspeccionUncheckedUpdateManyInput>
    /**
     * Filter which Inspeccions to update
     */
    where?: InspeccionWhereInput
  }

  /**
   * Inspeccion upsert
   */
  export type InspeccionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * The filter to search for the Inspeccion to update in case it exists.
     */
    where: InspeccionWhereUniqueInput
    /**
     * In case the Inspeccion found by the `where` argument doesn't exist, create a new Inspeccion with this data.
     */
    create: XOR<InspeccionCreateInput, InspeccionUncheckedCreateInput>
    /**
     * In case the Inspeccion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InspeccionUpdateInput, InspeccionUncheckedUpdateInput>
  }

  /**
   * Inspeccion delete
   */
  export type InspeccionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
    /**
     * Filter which Inspeccion to delete.
     */
    where: InspeccionWhereUniqueInput
  }

  /**
   * Inspeccion deleteMany
   */
  export type InspeccionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Inspeccions to delete
     */
    where?: InspeccionWhereInput
  }

  /**
   * Inspeccion.historial
   */
  export type Inspeccion$historialArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    where?: HistorialConductorWhereInput
    orderBy?: HistorialConductorOrderByWithRelationInput | HistorialConductorOrderByWithRelationInput[]
    cursor?: HistorialConductorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HistorialConductorScalarFieldEnum | HistorialConductorScalarFieldEnum[]
  }

  /**
   * Inspeccion without action
   */
  export type InspeccionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Inspeccion
     */
    select?: InspeccionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InspeccionInclude<ExtArgs> | null
  }


  /**
   * Model HistorialConductor
   */

  export type AggregateHistorialConductor = {
    _count: HistorialConductorCountAggregateOutputType | null
    _avg: HistorialConductorAvgAggregateOutputType | null
    _sum: HistorialConductorSumAggregateOutputType | null
    _min: HistorialConductorMinAggregateOutputType | null
    _max: HistorialConductorMaxAggregateOutputType | null
  }

  export type HistorialConductorAvgAggregateOutputType = {
    total_inspecciones: number | null
    alertas_rojas_total: number | null
    advertencias_total: number | null
    promedio_riesgo: number | null
    dias_sin_incidentes: number | null
  }

  export type HistorialConductorSumAggregateOutputType = {
    total_inspecciones: number | null
    alertas_rojas_total: number | null
    advertencias_total: number | null
    promedio_riesgo: number | null
    dias_sin_incidentes: number | null
  }

  export type HistorialConductorMinAggregateOutputType = {
    id: string | null
    conductor_nombre: string | null
    total_inspecciones: number | null
    alertas_rojas_total: number | null
    advertencias_total: number | null
    ultima_inspeccion: Date | null
    promedio_riesgo: number | null
    dias_sin_incidentes: number | null
    inspeccionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HistorialConductorMaxAggregateOutputType = {
    id: string | null
    conductor_nombre: string | null
    total_inspecciones: number | null
    alertas_rojas_total: number | null
    advertencias_total: number | null
    ultima_inspeccion: Date | null
    promedio_riesgo: number | null
    dias_sin_incidentes: number | null
    inspeccionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HistorialConductorCountAggregateOutputType = {
    id: number
    conductor_nombre: number
    total_inspecciones: number
    alertas_rojas_total: number
    advertencias_total: number
    ultima_inspeccion: number
    promedio_riesgo: number
    dias_sin_incidentes: number
    inspeccionId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HistorialConductorAvgAggregateInputType = {
    total_inspecciones?: true
    alertas_rojas_total?: true
    advertencias_total?: true
    promedio_riesgo?: true
    dias_sin_incidentes?: true
  }

  export type HistorialConductorSumAggregateInputType = {
    total_inspecciones?: true
    alertas_rojas_total?: true
    advertencias_total?: true
    promedio_riesgo?: true
    dias_sin_incidentes?: true
  }

  export type HistorialConductorMinAggregateInputType = {
    id?: true
    conductor_nombre?: true
    total_inspecciones?: true
    alertas_rojas_total?: true
    advertencias_total?: true
    ultima_inspeccion?: true
    promedio_riesgo?: true
    dias_sin_incidentes?: true
    inspeccionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HistorialConductorMaxAggregateInputType = {
    id?: true
    conductor_nombre?: true
    total_inspecciones?: true
    alertas_rojas_total?: true
    advertencias_total?: true
    ultima_inspeccion?: true
    promedio_riesgo?: true
    dias_sin_incidentes?: true
    inspeccionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HistorialConductorCountAggregateInputType = {
    id?: true
    conductor_nombre?: true
    total_inspecciones?: true
    alertas_rojas_total?: true
    advertencias_total?: true
    ultima_inspeccion?: true
    promedio_riesgo?: true
    dias_sin_incidentes?: true
    inspeccionId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HistorialConductorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialConductor to aggregate.
     */
    where?: HistorialConductorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialConductors to fetch.
     */
    orderBy?: HistorialConductorOrderByWithRelationInput | HistorialConductorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HistorialConductorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialConductors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialConductors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HistorialConductors
    **/
    _count?: true | HistorialConductorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HistorialConductorAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HistorialConductorSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HistorialConductorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HistorialConductorMaxAggregateInputType
  }

  export type GetHistorialConductorAggregateType<T extends HistorialConductorAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorialConductor]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorialConductor[P]>
      : GetScalarType<T[P], AggregateHistorialConductor[P]>
  }




  export type HistorialConductorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HistorialConductorWhereInput
    orderBy?: HistorialConductorOrderByWithAggregationInput | HistorialConductorOrderByWithAggregationInput[]
    by: HistorialConductorScalarFieldEnum[] | HistorialConductorScalarFieldEnum
    having?: HistorialConductorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HistorialConductorCountAggregateInputType | true
    _avg?: HistorialConductorAvgAggregateInputType
    _sum?: HistorialConductorSumAggregateInputType
    _min?: HistorialConductorMinAggregateInputType
    _max?: HistorialConductorMaxAggregateInputType
  }

  export type HistorialConductorGroupByOutputType = {
    id: string
    conductor_nombre: string
    total_inspecciones: number
    alertas_rojas_total: number
    advertencias_total: number
    ultima_inspeccion: Date | null
    promedio_riesgo: number
    dias_sin_incidentes: number
    inspeccionId: string
    createdAt: Date
    updatedAt: Date
    _count: HistorialConductorCountAggregateOutputType | null
    _avg: HistorialConductorAvgAggregateOutputType | null
    _sum: HistorialConductorSumAggregateOutputType | null
    _min: HistorialConductorMinAggregateOutputType | null
    _max: HistorialConductorMaxAggregateOutputType | null
  }

  type GetHistorialConductorGroupByPayload<T extends HistorialConductorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HistorialConductorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HistorialConductorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HistorialConductorGroupByOutputType[P]>
            : GetScalarType<T[P], HistorialConductorGroupByOutputType[P]>
        }
      >
    >


  export type HistorialConductorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conductor_nombre?: boolean
    total_inspecciones?: boolean
    alertas_rojas_total?: boolean
    advertencias_total?: boolean
    ultima_inspeccion?: boolean
    promedio_riesgo?: boolean
    dias_sin_incidentes?: boolean
    inspeccionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inspeccion?: boolean | InspeccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialConductor"]>

  export type HistorialConductorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    conductor_nombre?: boolean
    total_inspecciones?: boolean
    alertas_rojas_total?: boolean
    advertencias_total?: boolean
    ultima_inspeccion?: boolean
    promedio_riesgo?: boolean
    dias_sin_incidentes?: boolean
    inspeccionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    inspeccion?: boolean | InspeccionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historialConductor"]>

  export type HistorialConductorSelectScalar = {
    id?: boolean
    conductor_nombre?: boolean
    total_inspecciones?: boolean
    alertas_rojas_total?: boolean
    advertencias_total?: boolean
    ultima_inspeccion?: boolean
    promedio_riesgo?: boolean
    dias_sin_incidentes?: boolean
    inspeccionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HistorialConductorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inspeccion?: boolean | InspeccionDefaultArgs<ExtArgs>
  }
  export type HistorialConductorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inspeccion?: boolean | InspeccionDefaultArgs<ExtArgs>
  }

  export type $HistorialConductorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HistorialConductor"
    objects: {
      inspeccion: Prisma.$InspeccionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      conductor_nombre: string
      total_inspecciones: number
      alertas_rojas_total: number
      advertencias_total: number
      ultima_inspeccion: Date | null
      promedio_riesgo: number
      dias_sin_incidentes: number
      inspeccionId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["historialConductor"]>
    composites: {}
  }

  type HistorialConductorGetPayload<S extends boolean | null | undefined | HistorialConductorDefaultArgs> = $Result.GetResult<Prisma.$HistorialConductorPayload, S>

  type HistorialConductorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HistorialConductorFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HistorialConductorCountAggregateInputType | true
    }

  export interface HistorialConductorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HistorialConductor'], meta: { name: 'HistorialConductor' } }
    /**
     * Find zero or one HistorialConductor that matches the filter.
     * @param {HistorialConductorFindUniqueArgs} args - Arguments to find a HistorialConductor
     * @example
     * // Get one HistorialConductor
     * const historialConductor = await prisma.historialConductor.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HistorialConductorFindUniqueArgs>(args: SelectSubset<T, HistorialConductorFindUniqueArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one HistorialConductor that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HistorialConductorFindUniqueOrThrowArgs} args - Arguments to find a HistorialConductor
     * @example
     * // Get one HistorialConductor
     * const historialConductor = await prisma.historialConductor.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HistorialConductorFindUniqueOrThrowArgs>(args: SelectSubset<T, HistorialConductorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first HistorialConductor that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorFindFirstArgs} args - Arguments to find a HistorialConductor
     * @example
     * // Get one HistorialConductor
     * const historialConductor = await prisma.historialConductor.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HistorialConductorFindFirstArgs>(args?: SelectSubset<T, HistorialConductorFindFirstArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first HistorialConductor that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorFindFirstOrThrowArgs} args - Arguments to find a HistorialConductor
     * @example
     * // Get one HistorialConductor
     * const historialConductor = await prisma.historialConductor.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HistorialConductorFindFirstOrThrowArgs>(args?: SelectSubset<T, HistorialConductorFindFirstOrThrowArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more HistorialConductors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HistorialConductors
     * const historialConductors = await prisma.historialConductor.findMany()
     * 
     * // Get first 10 HistorialConductors
     * const historialConductors = await prisma.historialConductor.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historialConductorWithIdOnly = await prisma.historialConductor.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HistorialConductorFindManyArgs>(args?: SelectSubset<T, HistorialConductorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a HistorialConductor.
     * @param {HistorialConductorCreateArgs} args - Arguments to create a HistorialConductor.
     * @example
     * // Create one HistorialConductor
     * const HistorialConductor = await prisma.historialConductor.create({
     *   data: {
     *     // ... data to create a HistorialConductor
     *   }
     * })
     * 
     */
    create<T extends HistorialConductorCreateArgs>(args: SelectSubset<T, HistorialConductorCreateArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many HistorialConductors.
     * @param {HistorialConductorCreateManyArgs} args - Arguments to create many HistorialConductors.
     * @example
     * // Create many HistorialConductors
     * const historialConductor = await prisma.historialConductor.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HistorialConductorCreateManyArgs>(args?: SelectSubset<T, HistorialConductorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HistorialConductors and returns the data saved in the database.
     * @param {HistorialConductorCreateManyAndReturnArgs} args - Arguments to create many HistorialConductors.
     * @example
     * // Create many HistorialConductors
     * const historialConductor = await prisma.historialConductor.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HistorialConductors and only return the `id`
     * const historialConductorWithIdOnly = await prisma.historialConductor.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HistorialConductorCreateManyAndReturnArgs>(args?: SelectSubset<T, HistorialConductorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a HistorialConductor.
     * @param {HistorialConductorDeleteArgs} args - Arguments to delete one HistorialConductor.
     * @example
     * // Delete one HistorialConductor
     * const HistorialConductor = await prisma.historialConductor.delete({
     *   where: {
     *     // ... filter to delete one HistorialConductor
     *   }
     * })
     * 
     */
    delete<T extends HistorialConductorDeleteArgs>(args: SelectSubset<T, HistorialConductorDeleteArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one HistorialConductor.
     * @param {HistorialConductorUpdateArgs} args - Arguments to update one HistorialConductor.
     * @example
     * // Update one HistorialConductor
     * const historialConductor = await prisma.historialConductor.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HistorialConductorUpdateArgs>(args: SelectSubset<T, HistorialConductorUpdateArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more HistorialConductors.
     * @param {HistorialConductorDeleteManyArgs} args - Arguments to filter HistorialConductors to delete.
     * @example
     * // Delete a few HistorialConductors
     * const { count } = await prisma.historialConductor.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HistorialConductorDeleteManyArgs>(args?: SelectSubset<T, HistorialConductorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HistorialConductors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HistorialConductors
     * const historialConductor = await prisma.historialConductor.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HistorialConductorUpdateManyArgs>(args: SelectSubset<T, HistorialConductorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one HistorialConductor.
     * @param {HistorialConductorUpsertArgs} args - Arguments to update or create a HistorialConductor.
     * @example
     * // Update or create a HistorialConductor
     * const historialConductor = await prisma.historialConductor.upsert({
     *   create: {
     *     // ... data to create a HistorialConductor
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HistorialConductor we want to update
     *   }
     * })
     */
    upsert<T extends HistorialConductorUpsertArgs>(args: SelectSubset<T, HistorialConductorUpsertArgs<ExtArgs>>): Prisma__HistorialConductorClient<$Result.GetResult<Prisma.$HistorialConductorPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of HistorialConductors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorCountArgs} args - Arguments to filter HistorialConductors to count.
     * @example
     * // Count the number of HistorialConductors
     * const count = await prisma.historialConductor.count({
     *   where: {
     *     // ... the filter for the HistorialConductors we want to count
     *   }
     * })
    **/
    count<T extends HistorialConductorCountArgs>(
      args?: Subset<T, HistorialConductorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HistorialConductorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HistorialConductor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HistorialConductorAggregateArgs>(args: Subset<T, HistorialConductorAggregateArgs>): Prisma.PrismaPromise<GetHistorialConductorAggregateType<T>>

    /**
     * Group by HistorialConductor.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HistorialConductorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HistorialConductorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HistorialConductorGroupByArgs['orderBy'] }
        : { orderBy?: HistorialConductorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HistorialConductorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorialConductorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HistorialConductor model
   */
  readonly fields: HistorialConductorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HistorialConductor.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HistorialConductorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inspeccion<T extends InspeccionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, InspeccionDefaultArgs<ExtArgs>>): Prisma__InspeccionClient<$Result.GetResult<Prisma.$InspeccionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HistorialConductor model
   */ 
  interface HistorialConductorFieldRefs {
    readonly id: FieldRef<"HistorialConductor", 'String'>
    readonly conductor_nombre: FieldRef<"HistorialConductor", 'String'>
    readonly total_inspecciones: FieldRef<"HistorialConductor", 'Int'>
    readonly alertas_rojas_total: FieldRef<"HistorialConductor", 'Int'>
    readonly advertencias_total: FieldRef<"HistorialConductor", 'Int'>
    readonly ultima_inspeccion: FieldRef<"HistorialConductor", 'DateTime'>
    readonly promedio_riesgo: FieldRef<"HistorialConductor", 'Float'>
    readonly dias_sin_incidentes: FieldRef<"HistorialConductor", 'Int'>
    readonly inspeccionId: FieldRef<"HistorialConductor", 'String'>
    readonly createdAt: FieldRef<"HistorialConductor", 'DateTime'>
    readonly updatedAt: FieldRef<"HistorialConductor", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HistorialConductor findUnique
   */
  export type HistorialConductorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter, which HistorialConductor to fetch.
     */
    where: HistorialConductorWhereUniqueInput
  }

  /**
   * HistorialConductor findUniqueOrThrow
   */
  export type HistorialConductorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter, which HistorialConductor to fetch.
     */
    where: HistorialConductorWhereUniqueInput
  }

  /**
   * HistorialConductor findFirst
   */
  export type HistorialConductorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter, which HistorialConductor to fetch.
     */
    where?: HistorialConductorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialConductors to fetch.
     */
    orderBy?: HistorialConductorOrderByWithRelationInput | HistorialConductorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialConductors.
     */
    cursor?: HistorialConductorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialConductors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialConductors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialConductors.
     */
    distinct?: HistorialConductorScalarFieldEnum | HistorialConductorScalarFieldEnum[]
  }

  /**
   * HistorialConductor findFirstOrThrow
   */
  export type HistorialConductorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter, which HistorialConductor to fetch.
     */
    where?: HistorialConductorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialConductors to fetch.
     */
    orderBy?: HistorialConductorOrderByWithRelationInput | HistorialConductorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HistorialConductors.
     */
    cursor?: HistorialConductorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialConductors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialConductors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HistorialConductors.
     */
    distinct?: HistorialConductorScalarFieldEnum | HistorialConductorScalarFieldEnum[]
  }

  /**
   * HistorialConductor findMany
   */
  export type HistorialConductorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter, which HistorialConductors to fetch.
     */
    where?: HistorialConductorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HistorialConductors to fetch.
     */
    orderBy?: HistorialConductorOrderByWithRelationInput | HistorialConductorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HistorialConductors.
     */
    cursor?: HistorialConductorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HistorialConductors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HistorialConductors.
     */
    skip?: number
    distinct?: HistorialConductorScalarFieldEnum | HistorialConductorScalarFieldEnum[]
  }

  /**
   * HistorialConductor create
   */
  export type HistorialConductorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * The data needed to create a HistorialConductor.
     */
    data: XOR<HistorialConductorCreateInput, HistorialConductorUncheckedCreateInput>
  }

  /**
   * HistorialConductor createMany
   */
  export type HistorialConductorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HistorialConductors.
     */
    data: HistorialConductorCreateManyInput | HistorialConductorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HistorialConductor createManyAndReturn
   */
  export type HistorialConductorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many HistorialConductors.
     */
    data: HistorialConductorCreateManyInput | HistorialConductorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HistorialConductor update
   */
  export type HistorialConductorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * The data needed to update a HistorialConductor.
     */
    data: XOR<HistorialConductorUpdateInput, HistorialConductorUncheckedUpdateInput>
    /**
     * Choose, which HistorialConductor to update.
     */
    where: HistorialConductorWhereUniqueInput
  }

  /**
   * HistorialConductor updateMany
   */
  export type HistorialConductorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HistorialConductors.
     */
    data: XOR<HistorialConductorUpdateManyMutationInput, HistorialConductorUncheckedUpdateManyInput>
    /**
     * Filter which HistorialConductors to update
     */
    where?: HistorialConductorWhereInput
  }

  /**
   * HistorialConductor upsert
   */
  export type HistorialConductorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * The filter to search for the HistorialConductor to update in case it exists.
     */
    where: HistorialConductorWhereUniqueInput
    /**
     * In case the HistorialConductor found by the `where` argument doesn't exist, create a new HistorialConductor with this data.
     */
    create: XOR<HistorialConductorCreateInput, HistorialConductorUncheckedCreateInput>
    /**
     * In case the HistorialConductor was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HistorialConductorUpdateInput, HistorialConductorUncheckedUpdateInput>
  }

  /**
   * HistorialConductor delete
   */
  export type HistorialConductorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
    /**
     * Filter which HistorialConductor to delete.
     */
    where: HistorialConductorWhereUniqueInput
  }

  /**
   * HistorialConductor deleteMany
   */
  export type HistorialConductorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HistorialConductors to delete
     */
    where?: HistorialConductorWhereInput
  }

  /**
   * HistorialConductor without action
   */
  export type HistorialConductorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HistorialConductor
     */
    select?: HistorialConductorSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HistorialConductorInclude<ExtArgs> | null
  }


  /**
   * Model MetricasReporte
   */

  export type AggregateMetricasReporte = {
    _count: MetricasReporteCountAggregateOutputType | null
    _avg: MetricasReporteAvgAggregateOutputType | null
    _sum: MetricasReporteSumAggregateOutputType | null
    _min: MetricasReporteMinAggregateOutputType | null
    _max: MetricasReporteMaxAggregateOutputType | null
  }

  export type MetricasReporteAvgAggregateOutputType = {
    ano: number | null
    mes: number | null
    total_inspecciones: number | null
    total_conductores: number | null
    total_vehiculos: number | null
    alertas_rojas: number | null
    advertencias: number | null
    inspecciones_exitosas: number | null
    conductores_medicamentos: number | null
    conductores_poco_sueno: number | null
    conductores_con_sintomas: number | null
    conductores_no_aptos: number | null
  }

  export type MetricasReporteSumAggregateOutputType = {
    ano: number | null
    mes: number | null
    total_inspecciones: number | null
    total_conductores: number | null
    total_vehiculos: number | null
    alertas_rojas: number | null
    advertencias: number | null
    inspecciones_exitosas: number | null
    conductores_medicamentos: number | null
    conductores_poco_sueno: number | null
    conductores_con_sintomas: number | null
    conductores_no_aptos: number | null
  }

  export type MetricasReporteMinAggregateOutputType = {
    id: string | null
    fecha_reporte: Date | null
    ano: number | null
    mes: number | null
    total_inspecciones: number | null
    total_conductores: number | null
    total_vehiculos: number | null
    alertas_rojas: number | null
    advertencias: number | null
    inspecciones_exitosas: number | null
    conductores_medicamentos: number | null
    conductores_poco_sueno: number | null
    conductores_con_sintomas: number | null
    conductores_no_aptos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MetricasReporteMaxAggregateOutputType = {
    id: string | null
    fecha_reporte: Date | null
    ano: number | null
    mes: number | null
    total_inspecciones: number | null
    total_conductores: number | null
    total_vehiculos: number | null
    alertas_rojas: number | null
    advertencias: number | null
    inspecciones_exitosas: number | null
    conductores_medicamentos: number | null
    conductores_poco_sueno: number | null
    conductores_con_sintomas: number | null
    conductores_no_aptos: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MetricasReporteCountAggregateOutputType = {
    id: number
    fecha_reporte: number
    ano: number
    mes: number
    total_inspecciones: number
    total_conductores: number
    total_vehiculos: number
    alertas_rojas: number
    advertencias: number
    inspecciones_exitosas: number
    conductores_medicamentos: number
    conductores_poco_sueno: number
    conductores_con_sintomas: number
    conductores_no_aptos: number
    metricas_por_contrato: number
    metricas_por_campo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MetricasReporteAvgAggregateInputType = {
    ano?: true
    mes?: true
    total_inspecciones?: true
    total_conductores?: true
    total_vehiculos?: true
    alertas_rojas?: true
    advertencias?: true
    inspecciones_exitosas?: true
    conductores_medicamentos?: true
    conductores_poco_sueno?: true
    conductores_con_sintomas?: true
    conductores_no_aptos?: true
  }

  export type MetricasReporteSumAggregateInputType = {
    ano?: true
    mes?: true
    total_inspecciones?: true
    total_conductores?: true
    total_vehiculos?: true
    alertas_rojas?: true
    advertencias?: true
    inspecciones_exitosas?: true
    conductores_medicamentos?: true
    conductores_poco_sueno?: true
    conductores_con_sintomas?: true
    conductores_no_aptos?: true
  }

  export type MetricasReporteMinAggregateInputType = {
    id?: true
    fecha_reporte?: true
    ano?: true
    mes?: true
    total_inspecciones?: true
    total_conductores?: true
    total_vehiculos?: true
    alertas_rojas?: true
    advertencias?: true
    inspecciones_exitosas?: true
    conductores_medicamentos?: true
    conductores_poco_sueno?: true
    conductores_con_sintomas?: true
    conductores_no_aptos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MetricasReporteMaxAggregateInputType = {
    id?: true
    fecha_reporte?: true
    ano?: true
    mes?: true
    total_inspecciones?: true
    total_conductores?: true
    total_vehiculos?: true
    alertas_rojas?: true
    advertencias?: true
    inspecciones_exitosas?: true
    conductores_medicamentos?: true
    conductores_poco_sueno?: true
    conductores_con_sintomas?: true
    conductores_no_aptos?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MetricasReporteCountAggregateInputType = {
    id?: true
    fecha_reporte?: true
    ano?: true
    mes?: true
    total_inspecciones?: true
    total_conductores?: true
    total_vehiculos?: true
    alertas_rojas?: true
    advertencias?: true
    inspecciones_exitosas?: true
    conductores_medicamentos?: true
    conductores_poco_sueno?: true
    conductores_con_sintomas?: true
    conductores_no_aptos?: true
    metricas_por_contrato?: true
    metricas_por_campo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MetricasReporteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetricasReporte to aggregate.
     */
    where?: MetricasReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasReportes to fetch.
     */
    orderBy?: MetricasReporteOrderByWithRelationInput | MetricasReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MetricasReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MetricasReportes
    **/
    _count?: true | MetricasReporteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MetricasReporteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MetricasReporteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MetricasReporteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MetricasReporteMaxAggregateInputType
  }

  export type GetMetricasReporteAggregateType<T extends MetricasReporteAggregateArgs> = {
        [P in keyof T & keyof AggregateMetricasReporte]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMetricasReporte[P]>
      : GetScalarType<T[P], AggregateMetricasReporte[P]>
  }




  export type MetricasReporteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MetricasReporteWhereInput
    orderBy?: MetricasReporteOrderByWithAggregationInput | MetricasReporteOrderByWithAggregationInput[]
    by: MetricasReporteScalarFieldEnum[] | MetricasReporteScalarFieldEnum
    having?: MetricasReporteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MetricasReporteCountAggregateInputType | true
    _avg?: MetricasReporteAvgAggregateInputType
    _sum?: MetricasReporteSumAggregateInputType
    _min?: MetricasReporteMinAggregateInputType
    _max?: MetricasReporteMaxAggregateInputType
  }

  export type MetricasReporteGroupByOutputType = {
    id: string
    fecha_reporte: Date
    ano: number
    mes: number
    total_inspecciones: number
    total_conductores: number
    total_vehiculos: number
    alertas_rojas: number
    advertencias: number
    inspecciones_exitosas: number
    conductores_medicamentos: number
    conductores_poco_sueno: number
    conductores_con_sintomas: number
    conductores_no_aptos: number
    metricas_por_contrato: JsonValue | null
    metricas_por_campo: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: MetricasReporteCountAggregateOutputType | null
    _avg: MetricasReporteAvgAggregateOutputType | null
    _sum: MetricasReporteSumAggregateOutputType | null
    _min: MetricasReporteMinAggregateOutputType | null
    _max: MetricasReporteMaxAggregateOutputType | null
  }

  type GetMetricasReporteGroupByPayload<T extends MetricasReporteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MetricasReporteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MetricasReporteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MetricasReporteGroupByOutputType[P]>
            : GetScalarType<T[P], MetricasReporteGroupByOutputType[P]>
        }
      >
    >


  export type MetricasReporteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha_reporte?: boolean
    ano?: boolean
    mes?: boolean
    total_inspecciones?: boolean
    total_conductores?: boolean
    total_vehiculos?: boolean
    alertas_rojas?: boolean
    advertencias?: boolean
    inspecciones_exitosas?: boolean
    conductores_medicamentos?: boolean
    conductores_poco_sueno?: boolean
    conductores_con_sintomas?: boolean
    conductores_no_aptos?: boolean
    metricas_por_contrato?: boolean
    metricas_por_campo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["metricasReporte"]>

  export type MetricasReporteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fecha_reporte?: boolean
    ano?: boolean
    mes?: boolean
    total_inspecciones?: boolean
    total_conductores?: boolean
    total_vehiculos?: boolean
    alertas_rojas?: boolean
    advertencias?: boolean
    inspecciones_exitosas?: boolean
    conductores_medicamentos?: boolean
    conductores_poco_sueno?: boolean
    conductores_con_sintomas?: boolean
    conductores_no_aptos?: boolean
    metricas_por_contrato?: boolean
    metricas_por_campo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["metricasReporte"]>

  export type MetricasReporteSelectScalar = {
    id?: boolean
    fecha_reporte?: boolean
    ano?: boolean
    mes?: boolean
    total_inspecciones?: boolean
    total_conductores?: boolean
    total_vehiculos?: boolean
    alertas_rojas?: boolean
    advertencias?: boolean
    inspecciones_exitosas?: boolean
    conductores_medicamentos?: boolean
    conductores_poco_sueno?: boolean
    conductores_con_sintomas?: boolean
    conductores_no_aptos?: boolean
    metricas_por_contrato?: boolean
    metricas_por_campo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $MetricasReportePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MetricasReporte"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fecha_reporte: Date
      ano: number
      mes: number
      total_inspecciones: number
      total_conductores: number
      total_vehiculos: number
      alertas_rojas: number
      advertencias: number
      inspecciones_exitosas: number
      conductores_medicamentos: number
      conductores_poco_sueno: number
      conductores_con_sintomas: number
      conductores_no_aptos: number
      metricas_por_contrato: Prisma.JsonValue | null
      metricas_por_campo: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["metricasReporte"]>
    composites: {}
  }

  type MetricasReporteGetPayload<S extends boolean | null | undefined | MetricasReporteDefaultArgs> = $Result.GetResult<Prisma.$MetricasReportePayload, S>

  type MetricasReporteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MetricasReporteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MetricasReporteCountAggregateInputType | true
    }

  export interface MetricasReporteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MetricasReporte'], meta: { name: 'MetricasReporte' } }
    /**
     * Find zero or one MetricasReporte that matches the filter.
     * @param {MetricasReporteFindUniqueArgs} args - Arguments to find a MetricasReporte
     * @example
     * // Get one MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MetricasReporteFindUniqueArgs>(args: SelectSubset<T, MetricasReporteFindUniqueArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MetricasReporte that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MetricasReporteFindUniqueOrThrowArgs} args - Arguments to find a MetricasReporte
     * @example
     * // Get one MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MetricasReporteFindUniqueOrThrowArgs>(args: SelectSubset<T, MetricasReporteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MetricasReporte that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteFindFirstArgs} args - Arguments to find a MetricasReporte
     * @example
     * // Get one MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MetricasReporteFindFirstArgs>(args?: SelectSubset<T, MetricasReporteFindFirstArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MetricasReporte that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteFindFirstOrThrowArgs} args - Arguments to find a MetricasReporte
     * @example
     * // Get one MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MetricasReporteFindFirstOrThrowArgs>(args?: SelectSubset<T, MetricasReporteFindFirstOrThrowArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MetricasReportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MetricasReportes
     * const metricasReportes = await prisma.metricasReporte.findMany()
     * 
     * // Get first 10 MetricasReportes
     * const metricasReportes = await prisma.metricasReporte.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const metricasReporteWithIdOnly = await prisma.metricasReporte.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MetricasReporteFindManyArgs>(args?: SelectSubset<T, MetricasReporteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MetricasReporte.
     * @param {MetricasReporteCreateArgs} args - Arguments to create a MetricasReporte.
     * @example
     * // Create one MetricasReporte
     * const MetricasReporte = await prisma.metricasReporte.create({
     *   data: {
     *     // ... data to create a MetricasReporte
     *   }
     * })
     * 
     */
    create<T extends MetricasReporteCreateArgs>(args: SelectSubset<T, MetricasReporteCreateArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MetricasReportes.
     * @param {MetricasReporteCreateManyArgs} args - Arguments to create many MetricasReportes.
     * @example
     * // Create many MetricasReportes
     * const metricasReporte = await prisma.metricasReporte.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MetricasReporteCreateManyArgs>(args?: SelectSubset<T, MetricasReporteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MetricasReportes and returns the data saved in the database.
     * @param {MetricasReporteCreateManyAndReturnArgs} args - Arguments to create many MetricasReportes.
     * @example
     * // Create many MetricasReportes
     * const metricasReporte = await prisma.metricasReporte.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MetricasReportes and only return the `id`
     * const metricasReporteWithIdOnly = await prisma.metricasReporte.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MetricasReporteCreateManyAndReturnArgs>(args?: SelectSubset<T, MetricasReporteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MetricasReporte.
     * @param {MetricasReporteDeleteArgs} args - Arguments to delete one MetricasReporte.
     * @example
     * // Delete one MetricasReporte
     * const MetricasReporte = await prisma.metricasReporte.delete({
     *   where: {
     *     // ... filter to delete one MetricasReporte
     *   }
     * })
     * 
     */
    delete<T extends MetricasReporteDeleteArgs>(args: SelectSubset<T, MetricasReporteDeleteArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MetricasReporte.
     * @param {MetricasReporteUpdateArgs} args - Arguments to update one MetricasReporte.
     * @example
     * // Update one MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MetricasReporteUpdateArgs>(args: SelectSubset<T, MetricasReporteUpdateArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MetricasReportes.
     * @param {MetricasReporteDeleteManyArgs} args - Arguments to filter MetricasReportes to delete.
     * @example
     * // Delete a few MetricasReportes
     * const { count } = await prisma.metricasReporte.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MetricasReporteDeleteManyArgs>(args?: SelectSubset<T, MetricasReporteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MetricasReportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MetricasReportes
     * const metricasReporte = await prisma.metricasReporte.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MetricasReporteUpdateManyArgs>(args: SelectSubset<T, MetricasReporteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MetricasReporte.
     * @param {MetricasReporteUpsertArgs} args - Arguments to update or create a MetricasReporte.
     * @example
     * // Update or create a MetricasReporte
     * const metricasReporte = await prisma.metricasReporte.upsert({
     *   create: {
     *     // ... data to create a MetricasReporte
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MetricasReporte we want to update
     *   }
     * })
     */
    upsert<T extends MetricasReporteUpsertArgs>(args: SelectSubset<T, MetricasReporteUpsertArgs<ExtArgs>>): Prisma__MetricasReporteClient<$Result.GetResult<Prisma.$MetricasReportePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MetricasReportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteCountArgs} args - Arguments to filter MetricasReportes to count.
     * @example
     * // Count the number of MetricasReportes
     * const count = await prisma.metricasReporte.count({
     *   where: {
     *     // ... the filter for the MetricasReportes we want to count
     *   }
     * })
    **/
    count<T extends MetricasReporteCountArgs>(
      args?: Subset<T, MetricasReporteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MetricasReporteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MetricasReporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MetricasReporteAggregateArgs>(args: Subset<T, MetricasReporteAggregateArgs>): Prisma.PrismaPromise<GetMetricasReporteAggregateType<T>>

    /**
     * Group by MetricasReporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MetricasReporteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MetricasReporteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MetricasReporteGroupByArgs['orderBy'] }
        : { orderBy?: MetricasReporteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MetricasReporteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMetricasReporteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MetricasReporte model
   */
  readonly fields: MetricasReporteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MetricasReporte.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MetricasReporteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MetricasReporte model
   */ 
  interface MetricasReporteFieldRefs {
    readonly id: FieldRef<"MetricasReporte", 'String'>
    readonly fecha_reporte: FieldRef<"MetricasReporte", 'DateTime'>
    readonly ano: FieldRef<"MetricasReporte", 'Int'>
    readonly mes: FieldRef<"MetricasReporte", 'Int'>
    readonly total_inspecciones: FieldRef<"MetricasReporte", 'Int'>
    readonly total_conductores: FieldRef<"MetricasReporte", 'Int'>
    readonly total_vehiculos: FieldRef<"MetricasReporte", 'Int'>
    readonly alertas_rojas: FieldRef<"MetricasReporte", 'Int'>
    readonly advertencias: FieldRef<"MetricasReporte", 'Int'>
    readonly inspecciones_exitosas: FieldRef<"MetricasReporte", 'Int'>
    readonly conductores_medicamentos: FieldRef<"MetricasReporte", 'Int'>
    readonly conductores_poco_sueno: FieldRef<"MetricasReporte", 'Int'>
    readonly conductores_con_sintomas: FieldRef<"MetricasReporte", 'Int'>
    readonly conductores_no_aptos: FieldRef<"MetricasReporte", 'Int'>
    readonly metricas_por_contrato: FieldRef<"MetricasReporte", 'Json'>
    readonly metricas_por_campo: FieldRef<"MetricasReporte", 'Json'>
    readonly createdAt: FieldRef<"MetricasReporte", 'DateTime'>
    readonly updatedAt: FieldRef<"MetricasReporte", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MetricasReporte findUnique
   */
  export type MetricasReporteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter, which MetricasReporte to fetch.
     */
    where: MetricasReporteWhereUniqueInput
  }

  /**
   * MetricasReporte findUniqueOrThrow
   */
  export type MetricasReporteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter, which MetricasReporte to fetch.
     */
    where: MetricasReporteWhereUniqueInput
  }

  /**
   * MetricasReporte findFirst
   */
  export type MetricasReporteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter, which MetricasReporte to fetch.
     */
    where?: MetricasReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasReportes to fetch.
     */
    orderBy?: MetricasReporteOrderByWithRelationInput | MetricasReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetricasReportes.
     */
    cursor?: MetricasReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetricasReportes.
     */
    distinct?: MetricasReporteScalarFieldEnum | MetricasReporteScalarFieldEnum[]
  }

  /**
   * MetricasReporte findFirstOrThrow
   */
  export type MetricasReporteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter, which MetricasReporte to fetch.
     */
    where?: MetricasReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasReportes to fetch.
     */
    orderBy?: MetricasReporteOrderByWithRelationInput | MetricasReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MetricasReportes.
     */
    cursor?: MetricasReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasReportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MetricasReportes.
     */
    distinct?: MetricasReporteScalarFieldEnum | MetricasReporteScalarFieldEnum[]
  }

  /**
   * MetricasReporte findMany
   */
  export type MetricasReporteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter, which MetricasReportes to fetch.
     */
    where?: MetricasReporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MetricasReportes to fetch.
     */
    orderBy?: MetricasReporteOrderByWithRelationInput | MetricasReporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MetricasReportes.
     */
    cursor?: MetricasReporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MetricasReportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MetricasReportes.
     */
    skip?: number
    distinct?: MetricasReporteScalarFieldEnum | MetricasReporteScalarFieldEnum[]
  }

  /**
   * MetricasReporte create
   */
  export type MetricasReporteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * The data needed to create a MetricasReporte.
     */
    data: XOR<MetricasReporteCreateInput, MetricasReporteUncheckedCreateInput>
  }

  /**
   * MetricasReporte createMany
   */
  export type MetricasReporteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MetricasReportes.
     */
    data: MetricasReporteCreateManyInput | MetricasReporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetricasReporte createManyAndReturn
   */
  export type MetricasReporteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MetricasReportes.
     */
    data: MetricasReporteCreateManyInput | MetricasReporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MetricasReporte update
   */
  export type MetricasReporteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * The data needed to update a MetricasReporte.
     */
    data: XOR<MetricasReporteUpdateInput, MetricasReporteUncheckedUpdateInput>
    /**
     * Choose, which MetricasReporte to update.
     */
    where: MetricasReporteWhereUniqueInput
  }

  /**
   * MetricasReporte updateMany
   */
  export type MetricasReporteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MetricasReportes.
     */
    data: XOR<MetricasReporteUpdateManyMutationInput, MetricasReporteUncheckedUpdateManyInput>
    /**
     * Filter which MetricasReportes to update
     */
    where?: MetricasReporteWhereInput
  }

  /**
   * MetricasReporte upsert
   */
  export type MetricasReporteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * The filter to search for the MetricasReporte to update in case it exists.
     */
    where: MetricasReporteWhereUniqueInput
    /**
     * In case the MetricasReporte found by the `where` argument doesn't exist, create a new MetricasReporte with this data.
     */
    create: XOR<MetricasReporteCreateInput, MetricasReporteUncheckedCreateInput>
    /**
     * In case the MetricasReporte was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MetricasReporteUpdateInput, MetricasReporteUncheckedUpdateInput>
  }

  /**
   * MetricasReporte delete
   */
  export type MetricasReporteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
    /**
     * Filter which MetricasReporte to delete.
     */
    where: MetricasReporteWhereUniqueInput
  }

  /**
   * MetricasReporte deleteMany
   */
  export type MetricasReporteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MetricasReportes to delete
     */
    where?: MetricasReporteWhereInput
  }

  /**
   * MetricasReporte without action
   */
  export type MetricasReporteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MetricasReporte
     */
    select?: MetricasReporteSelect<ExtArgs> | null
  }


  /**
   * Model ArchivosProcesados
   */

  export type AggregateArchivosProcesados = {
    _count: ArchivosProcesadosCountAggregateOutputType | null
    _avg: ArchivosProcesadosAvgAggregateOutputType | null
    _sum: ArchivosProcesadosSumAggregateOutputType | null
    _min: ArchivosProcesadosMinAggregateOutputType | null
    _max: ArchivosProcesadosMaxAggregateOutputType | null
  }

  export type ArchivosProcesadosAvgAggregateOutputType = {
    ano_detectado: number | null
    meses_detectados: number | null
    total_registros: number | null
    registros_nuevos: number | null
    registros_duplicados: number | null
    tiempo_procesamiento: number | null
  }

  export type ArchivosProcesadosSumAggregateOutputType = {
    ano_detectado: number | null
    meses_detectados: number[]
    total_registros: number | null
    registros_nuevos: number | null
    registros_duplicados: number | null
    tiempo_procesamiento: number | null
  }

  export type ArchivosProcesadosMinAggregateOutputType = {
    id: string | null
    nombre_archivo: string | null
    hash_archivo: string | null
    ano_detectado: number | null
    total_registros: number | null
    registros_nuevos: number | null
    registros_duplicados: number | null
    estado_procesamiento: string | null
    tiempo_procesamiento: number | null
    fecha_procesamiento: Date | null
    usuario_carga: string | null
  }

  export type ArchivosProcesadosMaxAggregateOutputType = {
    id: string | null
    nombre_archivo: string | null
    hash_archivo: string | null
    ano_detectado: number | null
    total_registros: number | null
    registros_nuevos: number | null
    registros_duplicados: number | null
    estado_procesamiento: string | null
    tiempo_procesamiento: number | null
    fecha_procesamiento: Date | null
    usuario_carga: string | null
  }

  export type ArchivosProcesadosCountAggregateOutputType = {
    id: number
    nombre_archivo: number
    hash_archivo: number
    ano_detectado: number
    meses_detectados: number
    total_registros: number
    registros_nuevos: number
    registros_duplicados: number
    estado_procesamiento: number
    tiempo_procesamiento: number
    errores_validacion: number
    advertencias: number
    fecha_procesamiento: number
    usuario_carga: number
    _all: number
  }


  export type ArchivosProcesadosAvgAggregateInputType = {
    ano_detectado?: true
    meses_detectados?: true
    total_registros?: true
    registros_nuevos?: true
    registros_duplicados?: true
    tiempo_procesamiento?: true
  }

  export type ArchivosProcesadosSumAggregateInputType = {
    ano_detectado?: true
    meses_detectados?: true
    total_registros?: true
    registros_nuevos?: true
    registros_duplicados?: true
    tiempo_procesamiento?: true
  }

  export type ArchivosProcesadosMinAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    ano_detectado?: true
    total_registros?: true
    registros_nuevos?: true
    registros_duplicados?: true
    estado_procesamiento?: true
    tiempo_procesamiento?: true
    fecha_procesamiento?: true
    usuario_carga?: true
  }

  export type ArchivosProcesadosMaxAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    ano_detectado?: true
    total_registros?: true
    registros_nuevos?: true
    registros_duplicados?: true
    estado_procesamiento?: true
    tiempo_procesamiento?: true
    fecha_procesamiento?: true
    usuario_carga?: true
  }

  export type ArchivosProcesadosCountAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    ano_detectado?: true
    meses_detectados?: true
    total_registros?: true
    registros_nuevos?: true
    registros_duplicados?: true
    estado_procesamiento?: true
    tiempo_procesamiento?: true
    errores_validacion?: true
    advertencias?: true
    fecha_procesamiento?: true
    usuario_carga?: true
    _all?: true
  }

  export type ArchivosProcesadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArchivosProcesados to aggregate.
     */
    where?: ArchivosProcesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivosProcesados to fetch.
     */
    orderBy?: ArchivosProcesadosOrderByWithRelationInput | ArchivosProcesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ArchivosProcesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivosProcesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivosProcesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ArchivosProcesados
    **/
    _count?: true | ArchivosProcesadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArchivosProcesadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArchivosProcesadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArchivosProcesadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArchivosProcesadosMaxAggregateInputType
  }

  export type GetArchivosProcesadosAggregateType<T extends ArchivosProcesadosAggregateArgs> = {
        [P in keyof T & keyof AggregateArchivosProcesados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArchivosProcesados[P]>
      : GetScalarType<T[P], AggregateArchivosProcesados[P]>
  }




  export type ArchivosProcesadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ArchivosProcesadosWhereInput
    orderBy?: ArchivosProcesadosOrderByWithAggregationInput | ArchivosProcesadosOrderByWithAggregationInput[]
    by: ArchivosProcesadosScalarFieldEnum[] | ArchivosProcesadosScalarFieldEnum
    having?: ArchivosProcesadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArchivosProcesadosCountAggregateInputType | true
    _avg?: ArchivosProcesadosAvgAggregateInputType
    _sum?: ArchivosProcesadosSumAggregateInputType
    _min?: ArchivosProcesadosMinAggregateInputType
    _max?: ArchivosProcesadosMaxAggregateInputType
  }

  export type ArchivosProcesadosGroupByOutputType = {
    id: string
    nombre_archivo: string
    hash_archivo: string
    ano_detectado: number
    meses_detectados: number[]
    total_registros: number
    registros_nuevos: number
    registros_duplicados: number
    estado_procesamiento: string
    tiempo_procesamiento: number | null
    errores_validacion: JsonValue | null
    advertencias: JsonValue | null
    fecha_procesamiento: Date
    usuario_carga: string | null
    _count: ArchivosProcesadosCountAggregateOutputType | null
    _avg: ArchivosProcesadosAvgAggregateOutputType | null
    _sum: ArchivosProcesadosSumAggregateOutputType | null
    _min: ArchivosProcesadosMinAggregateOutputType | null
    _max: ArchivosProcesadosMaxAggregateOutputType | null
  }

  type GetArchivosProcesadosGroupByPayload<T extends ArchivosProcesadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArchivosProcesadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArchivosProcesadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArchivosProcesadosGroupByOutputType[P]>
            : GetScalarType<T[P], ArchivosProcesadosGroupByOutputType[P]>
        }
      >
    >


  export type ArchivosProcesadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    ano_detectado?: boolean
    meses_detectados?: boolean
    total_registros?: boolean
    registros_nuevos?: boolean
    registros_duplicados?: boolean
    estado_procesamiento?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
  }, ExtArgs["result"]["archivosProcesados"]>

  export type ArchivosProcesadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    ano_detectado?: boolean
    meses_detectados?: boolean
    total_registros?: boolean
    registros_nuevos?: boolean
    registros_duplicados?: boolean
    estado_procesamiento?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
  }, ExtArgs["result"]["archivosProcesados"]>

  export type ArchivosProcesadosSelectScalar = {
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    ano_detectado?: boolean
    meses_detectados?: boolean
    total_registros?: boolean
    registros_nuevos?: boolean
    registros_duplicados?: boolean
    estado_procesamiento?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
  }


  export type $ArchivosProcesadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ArchivosProcesados"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre_archivo: string
      hash_archivo: string
      ano_detectado: number
      meses_detectados: number[]
      total_registros: number
      registros_nuevos: number
      registros_duplicados: number
      estado_procesamiento: string
      tiempo_procesamiento: number | null
      errores_validacion: Prisma.JsonValue | null
      advertencias: Prisma.JsonValue | null
      fecha_procesamiento: Date
      usuario_carga: string | null
    }, ExtArgs["result"]["archivosProcesados"]>
    composites: {}
  }

  type ArchivosProcesadosGetPayload<S extends boolean | null | undefined | ArchivosProcesadosDefaultArgs> = $Result.GetResult<Prisma.$ArchivosProcesadosPayload, S>

  type ArchivosProcesadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ArchivosProcesadosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ArchivosProcesadosCountAggregateInputType | true
    }

  export interface ArchivosProcesadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArchivosProcesados'], meta: { name: 'ArchivosProcesados' } }
    /**
     * Find zero or one ArchivosProcesados that matches the filter.
     * @param {ArchivosProcesadosFindUniqueArgs} args - Arguments to find a ArchivosProcesados
     * @example
     * // Get one ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ArchivosProcesadosFindUniqueArgs>(args: SelectSubset<T, ArchivosProcesadosFindUniqueArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ArchivosProcesados that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ArchivosProcesadosFindUniqueOrThrowArgs} args - Arguments to find a ArchivosProcesados
     * @example
     * // Get one ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ArchivosProcesadosFindUniqueOrThrowArgs>(args: SelectSubset<T, ArchivosProcesadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ArchivosProcesados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosFindFirstArgs} args - Arguments to find a ArchivosProcesados
     * @example
     * // Get one ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ArchivosProcesadosFindFirstArgs>(args?: SelectSubset<T, ArchivosProcesadosFindFirstArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ArchivosProcesados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosFindFirstOrThrowArgs} args - Arguments to find a ArchivosProcesados
     * @example
     * // Get one ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ArchivosProcesadosFindFirstOrThrowArgs>(args?: SelectSubset<T, ArchivosProcesadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ArchivosProcesados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findMany()
     * 
     * // Get first 10 ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const archivosProcesadosWithIdOnly = await prisma.archivosProcesados.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ArchivosProcesadosFindManyArgs>(args?: SelectSubset<T, ArchivosProcesadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ArchivosProcesados.
     * @param {ArchivosProcesadosCreateArgs} args - Arguments to create a ArchivosProcesados.
     * @example
     * // Create one ArchivosProcesados
     * const ArchivosProcesados = await prisma.archivosProcesados.create({
     *   data: {
     *     // ... data to create a ArchivosProcesados
     *   }
     * })
     * 
     */
    create<T extends ArchivosProcesadosCreateArgs>(args: SelectSubset<T, ArchivosProcesadosCreateArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ArchivosProcesados.
     * @param {ArchivosProcesadosCreateManyArgs} args - Arguments to create many ArchivosProcesados.
     * @example
     * // Create many ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ArchivosProcesadosCreateManyArgs>(args?: SelectSubset<T, ArchivosProcesadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ArchivosProcesados and returns the data saved in the database.
     * @param {ArchivosProcesadosCreateManyAndReturnArgs} args - Arguments to create many ArchivosProcesados.
     * @example
     * // Create many ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ArchivosProcesados and only return the `id`
     * const archivosProcesadosWithIdOnly = await prisma.archivosProcesados.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ArchivosProcesadosCreateManyAndReturnArgs>(args?: SelectSubset<T, ArchivosProcesadosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ArchivosProcesados.
     * @param {ArchivosProcesadosDeleteArgs} args - Arguments to delete one ArchivosProcesados.
     * @example
     * // Delete one ArchivosProcesados
     * const ArchivosProcesados = await prisma.archivosProcesados.delete({
     *   where: {
     *     // ... filter to delete one ArchivosProcesados
     *   }
     * })
     * 
     */
    delete<T extends ArchivosProcesadosDeleteArgs>(args: SelectSubset<T, ArchivosProcesadosDeleteArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ArchivosProcesados.
     * @param {ArchivosProcesadosUpdateArgs} args - Arguments to update one ArchivosProcesados.
     * @example
     * // Update one ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ArchivosProcesadosUpdateArgs>(args: SelectSubset<T, ArchivosProcesadosUpdateArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ArchivosProcesados.
     * @param {ArchivosProcesadosDeleteManyArgs} args - Arguments to filter ArchivosProcesados to delete.
     * @example
     * // Delete a few ArchivosProcesados
     * const { count } = await prisma.archivosProcesados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ArchivosProcesadosDeleteManyArgs>(args?: SelectSubset<T, ArchivosProcesadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ArchivosProcesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ArchivosProcesadosUpdateManyArgs>(args: SelectSubset<T, ArchivosProcesadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ArchivosProcesados.
     * @param {ArchivosProcesadosUpsertArgs} args - Arguments to update or create a ArchivosProcesados.
     * @example
     * // Update or create a ArchivosProcesados
     * const archivosProcesados = await prisma.archivosProcesados.upsert({
     *   create: {
     *     // ... data to create a ArchivosProcesados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ArchivosProcesados we want to update
     *   }
     * })
     */
    upsert<T extends ArchivosProcesadosUpsertArgs>(args: SelectSubset<T, ArchivosProcesadosUpsertArgs<ExtArgs>>): Prisma__ArchivosProcesadosClient<$Result.GetResult<Prisma.$ArchivosProcesadosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ArchivosProcesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosCountArgs} args - Arguments to filter ArchivosProcesados to count.
     * @example
     * // Count the number of ArchivosProcesados
     * const count = await prisma.archivosProcesados.count({
     *   where: {
     *     // ... the filter for the ArchivosProcesados we want to count
     *   }
     * })
    **/
    count<T extends ArchivosProcesadosCountArgs>(
      args?: Subset<T, ArchivosProcesadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArchivosProcesadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ArchivosProcesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArchivosProcesadosAggregateArgs>(args: Subset<T, ArchivosProcesadosAggregateArgs>): Prisma.PrismaPromise<GetArchivosProcesadosAggregateType<T>>

    /**
     * Group by ArchivosProcesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArchivosProcesadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ArchivosProcesadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ArchivosProcesadosGroupByArgs['orderBy'] }
        : { orderBy?: ArchivosProcesadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ArchivosProcesadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArchivosProcesadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ArchivosProcesados model
   */
  readonly fields: ArchivosProcesadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ArchivosProcesados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ArchivosProcesadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ArchivosProcesados model
   */ 
  interface ArchivosProcesadosFieldRefs {
    readonly id: FieldRef<"ArchivosProcesados", 'String'>
    readonly nombre_archivo: FieldRef<"ArchivosProcesados", 'String'>
    readonly hash_archivo: FieldRef<"ArchivosProcesados", 'String'>
    readonly ano_detectado: FieldRef<"ArchivosProcesados", 'Int'>
    readonly meses_detectados: FieldRef<"ArchivosProcesados", 'Int[]'>
    readonly total_registros: FieldRef<"ArchivosProcesados", 'Int'>
    readonly registros_nuevos: FieldRef<"ArchivosProcesados", 'Int'>
    readonly registros_duplicados: FieldRef<"ArchivosProcesados", 'Int'>
    readonly estado_procesamiento: FieldRef<"ArchivosProcesados", 'String'>
    readonly tiempo_procesamiento: FieldRef<"ArchivosProcesados", 'Float'>
    readonly errores_validacion: FieldRef<"ArchivosProcesados", 'Json'>
    readonly advertencias: FieldRef<"ArchivosProcesados", 'Json'>
    readonly fecha_procesamiento: FieldRef<"ArchivosProcesados", 'DateTime'>
    readonly usuario_carga: FieldRef<"ArchivosProcesados", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ArchivosProcesados findUnique
   */
  export type ArchivosProcesadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter, which ArchivosProcesados to fetch.
     */
    where: ArchivosProcesadosWhereUniqueInput
  }

  /**
   * ArchivosProcesados findUniqueOrThrow
   */
  export type ArchivosProcesadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter, which ArchivosProcesados to fetch.
     */
    where: ArchivosProcesadosWhereUniqueInput
  }

  /**
   * ArchivosProcesados findFirst
   */
  export type ArchivosProcesadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter, which ArchivosProcesados to fetch.
     */
    where?: ArchivosProcesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivosProcesados to fetch.
     */
    orderBy?: ArchivosProcesadosOrderByWithRelationInput | ArchivosProcesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArchivosProcesados.
     */
    cursor?: ArchivosProcesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivosProcesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivosProcesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArchivosProcesados.
     */
    distinct?: ArchivosProcesadosScalarFieldEnum | ArchivosProcesadosScalarFieldEnum[]
  }

  /**
   * ArchivosProcesados findFirstOrThrow
   */
  export type ArchivosProcesadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter, which ArchivosProcesados to fetch.
     */
    where?: ArchivosProcesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivosProcesados to fetch.
     */
    orderBy?: ArchivosProcesadosOrderByWithRelationInput | ArchivosProcesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ArchivosProcesados.
     */
    cursor?: ArchivosProcesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivosProcesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivosProcesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ArchivosProcesados.
     */
    distinct?: ArchivosProcesadosScalarFieldEnum | ArchivosProcesadosScalarFieldEnum[]
  }

  /**
   * ArchivosProcesados findMany
   */
  export type ArchivosProcesadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter, which ArchivosProcesados to fetch.
     */
    where?: ArchivosProcesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ArchivosProcesados to fetch.
     */
    orderBy?: ArchivosProcesadosOrderByWithRelationInput | ArchivosProcesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ArchivosProcesados.
     */
    cursor?: ArchivosProcesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ArchivosProcesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ArchivosProcesados.
     */
    skip?: number
    distinct?: ArchivosProcesadosScalarFieldEnum | ArchivosProcesadosScalarFieldEnum[]
  }

  /**
   * ArchivosProcesados create
   */
  export type ArchivosProcesadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * The data needed to create a ArchivosProcesados.
     */
    data: XOR<ArchivosProcesadosCreateInput, ArchivosProcesadosUncheckedCreateInput>
  }

  /**
   * ArchivosProcesados createMany
   */
  export type ArchivosProcesadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ArchivosProcesados.
     */
    data: ArchivosProcesadosCreateManyInput | ArchivosProcesadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArchivosProcesados createManyAndReturn
   */
  export type ArchivosProcesadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ArchivosProcesados.
     */
    data: ArchivosProcesadosCreateManyInput | ArchivosProcesadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ArchivosProcesados update
   */
  export type ArchivosProcesadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * The data needed to update a ArchivosProcesados.
     */
    data: XOR<ArchivosProcesadosUpdateInput, ArchivosProcesadosUncheckedUpdateInput>
    /**
     * Choose, which ArchivosProcesados to update.
     */
    where: ArchivosProcesadosWhereUniqueInput
  }

  /**
   * ArchivosProcesados updateMany
   */
  export type ArchivosProcesadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ArchivosProcesados.
     */
    data: XOR<ArchivosProcesadosUpdateManyMutationInput, ArchivosProcesadosUncheckedUpdateManyInput>
    /**
     * Filter which ArchivosProcesados to update
     */
    where?: ArchivosProcesadosWhereInput
  }

  /**
   * ArchivosProcesados upsert
   */
  export type ArchivosProcesadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * The filter to search for the ArchivosProcesados to update in case it exists.
     */
    where: ArchivosProcesadosWhereUniqueInput
    /**
     * In case the ArchivosProcesados found by the `where` argument doesn't exist, create a new ArchivosProcesados with this data.
     */
    create: XOR<ArchivosProcesadosCreateInput, ArchivosProcesadosUncheckedCreateInput>
    /**
     * In case the ArchivosProcesados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ArchivosProcesadosUpdateInput, ArchivosProcesadosUncheckedUpdateInput>
  }

  /**
   * ArchivosProcesados delete
   */
  export type ArchivosProcesadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
    /**
     * Filter which ArchivosProcesados to delete.
     */
    where: ArchivosProcesadosWhereUniqueInput
  }

  /**
   * ArchivosProcesados deleteMany
   */
  export type ArchivosProcesadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ArchivosProcesados to delete
     */
    where?: ArchivosProcesadosWhereInput
  }

  /**
   * ArchivosProcesados without action
   */
  export type ArchivosProcesadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArchivosProcesados
     */
    select?: ArchivosProcesadosSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const InspeccionScalarFieldEnum: {
    id: 'id',
    fecha: 'fecha',
    marca_temporal: 'marca_temporal',
    nombre_inspector: 'nombre_inspector',
    contrato: 'contrato',
    campo_coordinacion: 'campo_coordinacion',
    placa_vehiculo: 'placa_vehiculo',
    kilometraje: 'kilometraje',
    turno: 'turno',
    altas_bajas: 'altas_bajas',
    direccionales: 'direccionales',
    parqueo: 'parqueo',
    freno: 'freno',
    reversa_alarma: 'reversa_alarma',
    espejos: 'espejos',
    vidrio_frontal: 'vidrio_frontal',
    orden_aseo: 'orden_aseo',
    pito: 'pito',
    gps: 'gps',
    frenos: 'frenos',
    freno_emergencia: 'freno_emergencia',
    cinturones: 'cinturones',
    puertas: 'puertas',
    vidrios: 'vidrios',
    limpia_brisas: 'limpia_brisas',
    extintor_vigente: 'extintor_vigente',
    botiquin: 'botiquin',
    tapiceria: 'tapiceria',
    indicadores: 'indicadores',
    objetos_sueltos: 'objetos_sueltos',
    aceite_motor: 'aceite_motor',
    fluido_frenos: 'fluido_frenos',
    fluido_direccion: 'fluido_direccion',
    fluido_refrigerante: 'fluido_refrigerante',
    fluido_limpia_parabrisas: 'fluido_limpia_parabrisas',
    correas: 'correas',
    baterias: 'baterias',
    llantas_labrado: 'llantas_labrado',
    llantas_sin_cortes: 'llantas_sin_cortes',
    llanta_repuesto: 'llanta_repuesto',
    copas_pernos_llantas: 'copas_pernos_llantas',
    suspension: 'suspension',
    direccion_terminales: 'direccion_terminales',
    tapa_tanque: 'tapa_tanque',
    equipo_carretera: 'equipo_carretera',
    kit_ambiental: 'kit_ambiental',
    documentacion: 'documentacion',
    observaciones: 'observaciones',
    horas_sueno: 'horas_sueno',
    libre_fatiga: 'libre_fatiga',
    condiciones_aptas: 'condiciones_aptas',
    consumo_medicamentos: 'consumo_medicamentos',
    placa_vehiculo_extra: 'placa_vehiculo_extra',
    tiene_alerta_roja: 'tiene_alerta_roja',
    tiene_advertencias: 'tiene_advertencias',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InspeccionScalarFieldEnum = (typeof InspeccionScalarFieldEnum)[keyof typeof InspeccionScalarFieldEnum]


  export const HistorialConductorScalarFieldEnum: {
    id: 'id',
    conductor_nombre: 'conductor_nombre',
    total_inspecciones: 'total_inspecciones',
    alertas_rojas_total: 'alertas_rojas_total',
    advertencias_total: 'advertencias_total',
    ultima_inspeccion: 'ultima_inspeccion',
    promedio_riesgo: 'promedio_riesgo',
    dias_sin_incidentes: 'dias_sin_incidentes',
    inspeccionId: 'inspeccionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HistorialConductorScalarFieldEnum = (typeof HistorialConductorScalarFieldEnum)[keyof typeof HistorialConductorScalarFieldEnum]


  export const MetricasReporteScalarFieldEnum: {
    id: 'id',
    fecha_reporte: 'fecha_reporte',
    ano: 'ano',
    mes: 'mes',
    total_inspecciones: 'total_inspecciones',
    total_conductores: 'total_conductores',
    total_vehiculos: 'total_vehiculos',
    alertas_rojas: 'alertas_rojas',
    advertencias: 'advertencias',
    inspecciones_exitosas: 'inspecciones_exitosas',
    conductores_medicamentos: 'conductores_medicamentos',
    conductores_poco_sueno: 'conductores_poco_sueno',
    conductores_con_sintomas: 'conductores_con_sintomas',
    conductores_no_aptos: 'conductores_no_aptos',
    metricas_por_contrato: 'metricas_por_contrato',
    metricas_por_campo: 'metricas_por_campo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MetricasReporteScalarFieldEnum = (typeof MetricasReporteScalarFieldEnum)[keyof typeof MetricasReporteScalarFieldEnum]


  export const ArchivosProcesadosScalarFieldEnum: {
    id: 'id',
    nombre_archivo: 'nombre_archivo',
    hash_archivo: 'hash_archivo',
    ano_detectado: 'ano_detectado',
    meses_detectados: 'meses_detectados',
    total_registros: 'total_registros',
    registros_nuevos: 'registros_nuevos',
    registros_duplicados: 'registros_duplicados',
    estado_procesamiento: 'estado_procesamiento',
    tiempo_procesamiento: 'tiempo_procesamiento',
    errores_validacion: 'errores_validacion',
    advertencias: 'advertencias',
    fecha_procesamiento: 'fecha_procesamiento',
    usuario_carga: 'usuario_carga'
  };

  export type ArchivosProcesadosScalarFieldEnum = (typeof ArchivosProcesadosScalarFieldEnum)[keyof typeof ArchivosProcesadosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    
  /**
   * Deep Input Types
   */


  export type InspeccionWhereInput = {
    AND?: InspeccionWhereInput | InspeccionWhereInput[]
    OR?: InspeccionWhereInput[]
    NOT?: InspeccionWhereInput | InspeccionWhereInput[]
    id?: StringFilter<"Inspeccion"> | string
    fecha?: DateTimeFilter<"Inspeccion"> | Date | string
    marca_temporal?: FloatFilter<"Inspeccion"> | number
    nombre_inspector?: StringFilter<"Inspeccion"> | string
    contrato?: StringFilter<"Inspeccion"> | string
    campo_coordinacion?: StringFilter<"Inspeccion"> | string
    placa_vehiculo?: StringFilter<"Inspeccion"> | string
    kilometraje?: IntFilter<"Inspeccion"> | number
    turno?: StringFilter<"Inspeccion"> | string
    altas_bajas?: BoolFilter<"Inspeccion"> | boolean
    direccionales?: BoolFilter<"Inspeccion"> | boolean
    parqueo?: BoolFilter<"Inspeccion"> | boolean
    freno?: BoolFilter<"Inspeccion"> | boolean
    reversa_alarma?: BoolFilter<"Inspeccion"> | boolean
    espejos?: BoolFilter<"Inspeccion"> | boolean
    vidrio_frontal?: BoolFilter<"Inspeccion"> | boolean
    orden_aseo?: BoolFilter<"Inspeccion"> | boolean
    pito?: BoolFilter<"Inspeccion"> | boolean
    gps?: BoolFilter<"Inspeccion"> | boolean
    frenos?: BoolFilter<"Inspeccion"> | boolean
    freno_emergencia?: BoolFilter<"Inspeccion"> | boolean
    cinturones?: BoolFilter<"Inspeccion"> | boolean
    puertas?: BoolFilter<"Inspeccion"> | boolean
    vidrios?: BoolFilter<"Inspeccion"> | boolean
    limpia_brisas?: BoolFilter<"Inspeccion"> | boolean
    extintor_vigente?: BoolFilter<"Inspeccion"> | boolean
    botiquin?: BoolFilter<"Inspeccion"> | boolean
    tapiceria?: BoolFilter<"Inspeccion"> | boolean
    indicadores?: BoolFilter<"Inspeccion"> | boolean
    objetos_sueltos?: BoolFilter<"Inspeccion"> | boolean
    aceite_motor?: BoolFilter<"Inspeccion"> | boolean
    fluido_frenos?: BoolFilter<"Inspeccion"> | boolean
    fluido_direccion?: BoolFilter<"Inspeccion"> | boolean
    fluido_refrigerante?: BoolFilter<"Inspeccion"> | boolean
    fluido_limpia_parabrisas?: BoolFilter<"Inspeccion"> | boolean
    correas?: BoolFilter<"Inspeccion"> | boolean
    baterias?: BoolFilter<"Inspeccion"> | boolean
    llantas_labrado?: BoolFilter<"Inspeccion"> | boolean
    llantas_sin_cortes?: BoolFilter<"Inspeccion"> | boolean
    llanta_repuesto?: BoolFilter<"Inspeccion"> | boolean
    copas_pernos_llantas?: BoolFilter<"Inspeccion"> | boolean
    suspension?: BoolFilter<"Inspeccion"> | boolean
    direccion_terminales?: BoolFilter<"Inspeccion"> | boolean
    tapa_tanque?: BoolFilter<"Inspeccion"> | boolean
    equipo_carretera?: BoolFilter<"Inspeccion"> | boolean
    kit_ambiental?: BoolFilter<"Inspeccion"> | boolean
    documentacion?: BoolFilter<"Inspeccion"> | boolean
    observaciones?: StringNullableFilter<"Inspeccion"> | string | null
    horas_sueno?: BoolFilter<"Inspeccion"> | boolean
    libre_fatiga?: BoolFilter<"Inspeccion"> | boolean
    condiciones_aptas?: BoolFilter<"Inspeccion"> | boolean
    consumo_medicamentos?: BoolFilter<"Inspeccion"> | boolean
    placa_vehiculo_extra?: StringNullableFilter<"Inspeccion"> | string | null
    tiene_alerta_roja?: BoolFilter<"Inspeccion"> | boolean
    tiene_advertencias?: BoolFilter<"Inspeccion"> | boolean
    createdAt?: DateTimeFilter<"Inspeccion"> | Date | string
    updatedAt?: DateTimeFilter<"Inspeccion"> | Date | string
    historial?: HistorialConductorListRelationFilter
  }

  export type InspeccionOrderByWithRelationInput = {
    id?: SortOrder
    fecha?: SortOrder
    marca_temporal?: SortOrder
    nombre_inspector?: SortOrder
    contrato?: SortOrder
    campo_coordinacion?: SortOrder
    placa_vehiculo?: SortOrder
    kilometraje?: SortOrder
    turno?: SortOrder
    altas_bajas?: SortOrder
    direccionales?: SortOrder
    parqueo?: SortOrder
    freno?: SortOrder
    reversa_alarma?: SortOrder
    espejos?: SortOrder
    vidrio_frontal?: SortOrder
    orden_aseo?: SortOrder
    pito?: SortOrder
    gps?: SortOrder
    frenos?: SortOrder
    freno_emergencia?: SortOrder
    cinturones?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    limpia_brisas?: SortOrder
    extintor_vigente?: SortOrder
    botiquin?: SortOrder
    tapiceria?: SortOrder
    indicadores?: SortOrder
    objetos_sueltos?: SortOrder
    aceite_motor?: SortOrder
    fluido_frenos?: SortOrder
    fluido_direccion?: SortOrder
    fluido_refrigerante?: SortOrder
    fluido_limpia_parabrisas?: SortOrder
    correas?: SortOrder
    baterias?: SortOrder
    llantas_labrado?: SortOrder
    llantas_sin_cortes?: SortOrder
    llanta_repuesto?: SortOrder
    copas_pernos_llantas?: SortOrder
    suspension?: SortOrder
    direccion_terminales?: SortOrder
    tapa_tanque?: SortOrder
    equipo_carretera?: SortOrder
    kit_ambiental?: SortOrder
    documentacion?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    horas_sueno?: SortOrder
    libre_fatiga?: SortOrder
    condiciones_aptas?: SortOrder
    consumo_medicamentos?: SortOrder
    placa_vehiculo_extra?: SortOrderInput | SortOrder
    tiene_alerta_roja?: SortOrder
    tiene_advertencias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    historial?: HistorialConductorOrderByRelationAggregateInput
  }

  export type InspeccionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InspeccionWhereInput | InspeccionWhereInput[]
    OR?: InspeccionWhereInput[]
    NOT?: InspeccionWhereInput | InspeccionWhereInput[]
    fecha?: DateTimeFilter<"Inspeccion"> | Date | string
    marca_temporal?: FloatFilter<"Inspeccion"> | number
    nombre_inspector?: StringFilter<"Inspeccion"> | string
    contrato?: StringFilter<"Inspeccion"> | string
    campo_coordinacion?: StringFilter<"Inspeccion"> | string
    placa_vehiculo?: StringFilter<"Inspeccion"> | string
    kilometraje?: IntFilter<"Inspeccion"> | number
    turno?: StringFilter<"Inspeccion"> | string
    altas_bajas?: BoolFilter<"Inspeccion"> | boolean
    direccionales?: BoolFilter<"Inspeccion"> | boolean
    parqueo?: BoolFilter<"Inspeccion"> | boolean
    freno?: BoolFilter<"Inspeccion"> | boolean
    reversa_alarma?: BoolFilter<"Inspeccion"> | boolean
    espejos?: BoolFilter<"Inspeccion"> | boolean
    vidrio_frontal?: BoolFilter<"Inspeccion"> | boolean
    orden_aseo?: BoolFilter<"Inspeccion"> | boolean
    pito?: BoolFilter<"Inspeccion"> | boolean
    gps?: BoolFilter<"Inspeccion"> | boolean
    frenos?: BoolFilter<"Inspeccion"> | boolean
    freno_emergencia?: BoolFilter<"Inspeccion"> | boolean
    cinturones?: BoolFilter<"Inspeccion"> | boolean
    puertas?: BoolFilter<"Inspeccion"> | boolean
    vidrios?: BoolFilter<"Inspeccion"> | boolean
    limpia_brisas?: BoolFilter<"Inspeccion"> | boolean
    extintor_vigente?: BoolFilter<"Inspeccion"> | boolean
    botiquin?: BoolFilter<"Inspeccion"> | boolean
    tapiceria?: BoolFilter<"Inspeccion"> | boolean
    indicadores?: BoolFilter<"Inspeccion"> | boolean
    objetos_sueltos?: BoolFilter<"Inspeccion"> | boolean
    aceite_motor?: BoolFilter<"Inspeccion"> | boolean
    fluido_frenos?: BoolFilter<"Inspeccion"> | boolean
    fluido_direccion?: BoolFilter<"Inspeccion"> | boolean
    fluido_refrigerante?: BoolFilter<"Inspeccion"> | boolean
    fluido_limpia_parabrisas?: BoolFilter<"Inspeccion"> | boolean
    correas?: BoolFilter<"Inspeccion"> | boolean
    baterias?: BoolFilter<"Inspeccion"> | boolean
    llantas_labrado?: BoolFilter<"Inspeccion"> | boolean
    llantas_sin_cortes?: BoolFilter<"Inspeccion"> | boolean
    llanta_repuesto?: BoolFilter<"Inspeccion"> | boolean
    copas_pernos_llantas?: BoolFilter<"Inspeccion"> | boolean
    suspension?: BoolFilter<"Inspeccion"> | boolean
    direccion_terminales?: BoolFilter<"Inspeccion"> | boolean
    tapa_tanque?: BoolFilter<"Inspeccion"> | boolean
    equipo_carretera?: BoolFilter<"Inspeccion"> | boolean
    kit_ambiental?: BoolFilter<"Inspeccion"> | boolean
    documentacion?: BoolFilter<"Inspeccion"> | boolean
    observaciones?: StringNullableFilter<"Inspeccion"> | string | null
    horas_sueno?: BoolFilter<"Inspeccion"> | boolean
    libre_fatiga?: BoolFilter<"Inspeccion"> | boolean
    condiciones_aptas?: BoolFilter<"Inspeccion"> | boolean
    consumo_medicamentos?: BoolFilter<"Inspeccion"> | boolean
    placa_vehiculo_extra?: StringNullableFilter<"Inspeccion"> | string | null
    tiene_alerta_roja?: BoolFilter<"Inspeccion"> | boolean
    tiene_advertencias?: BoolFilter<"Inspeccion"> | boolean
    createdAt?: DateTimeFilter<"Inspeccion"> | Date | string
    updatedAt?: DateTimeFilter<"Inspeccion"> | Date | string
    historial?: HistorialConductorListRelationFilter
  }, "id">

  export type InspeccionOrderByWithAggregationInput = {
    id?: SortOrder
    fecha?: SortOrder
    marca_temporal?: SortOrder
    nombre_inspector?: SortOrder
    contrato?: SortOrder
    campo_coordinacion?: SortOrder
    placa_vehiculo?: SortOrder
    kilometraje?: SortOrder
    turno?: SortOrder
    altas_bajas?: SortOrder
    direccionales?: SortOrder
    parqueo?: SortOrder
    freno?: SortOrder
    reversa_alarma?: SortOrder
    espejos?: SortOrder
    vidrio_frontal?: SortOrder
    orden_aseo?: SortOrder
    pito?: SortOrder
    gps?: SortOrder
    frenos?: SortOrder
    freno_emergencia?: SortOrder
    cinturones?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    limpia_brisas?: SortOrder
    extintor_vigente?: SortOrder
    botiquin?: SortOrder
    tapiceria?: SortOrder
    indicadores?: SortOrder
    objetos_sueltos?: SortOrder
    aceite_motor?: SortOrder
    fluido_frenos?: SortOrder
    fluido_direccion?: SortOrder
    fluido_refrigerante?: SortOrder
    fluido_limpia_parabrisas?: SortOrder
    correas?: SortOrder
    baterias?: SortOrder
    llantas_labrado?: SortOrder
    llantas_sin_cortes?: SortOrder
    llanta_repuesto?: SortOrder
    copas_pernos_llantas?: SortOrder
    suspension?: SortOrder
    direccion_terminales?: SortOrder
    tapa_tanque?: SortOrder
    equipo_carretera?: SortOrder
    kit_ambiental?: SortOrder
    documentacion?: SortOrder
    observaciones?: SortOrderInput | SortOrder
    horas_sueno?: SortOrder
    libre_fatiga?: SortOrder
    condiciones_aptas?: SortOrder
    consumo_medicamentos?: SortOrder
    placa_vehiculo_extra?: SortOrderInput | SortOrder
    tiene_alerta_roja?: SortOrder
    tiene_advertencias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: InspeccionCountOrderByAggregateInput
    _avg?: InspeccionAvgOrderByAggregateInput
    _max?: InspeccionMaxOrderByAggregateInput
    _min?: InspeccionMinOrderByAggregateInput
    _sum?: InspeccionSumOrderByAggregateInput
  }

  export type InspeccionScalarWhereWithAggregatesInput = {
    AND?: InspeccionScalarWhereWithAggregatesInput | InspeccionScalarWhereWithAggregatesInput[]
    OR?: InspeccionScalarWhereWithAggregatesInput[]
    NOT?: InspeccionScalarWhereWithAggregatesInput | InspeccionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Inspeccion"> | string
    fecha?: DateTimeWithAggregatesFilter<"Inspeccion"> | Date | string
    marca_temporal?: FloatWithAggregatesFilter<"Inspeccion"> | number
    nombre_inspector?: StringWithAggregatesFilter<"Inspeccion"> | string
    contrato?: StringWithAggregatesFilter<"Inspeccion"> | string
    campo_coordinacion?: StringWithAggregatesFilter<"Inspeccion"> | string
    placa_vehiculo?: StringWithAggregatesFilter<"Inspeccion"> | string
    kilometraje?: IntWithAggregatesFilter<"Inspeccion"> | number
    turno?: StringWithAggregatesFilter<"Inspeccion"> | string
    altas_bajas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    direccionales?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    parqueo?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    freno?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    reversa_alarma?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    espejos?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    vidrio_frontal?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    orden_aseo?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    pito?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    gps?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    frenos?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    freno_emergencia?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    cinturones?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    puertas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    vidrios?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    limpia_brisas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    extintor_vigente?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    botiquin?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    tapiceria?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    indicadores?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    objetos_sueltos?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    aceite_motor?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    fluido_frenos?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    fluido_direccion?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    fluido_refrigerante?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    fluido_limpia_parabrisas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    correas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    baterias?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    llantas_labrado?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    llantas_sin_cortes?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    llanta_repuesto?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    copas_pernos_llantas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    suspension?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    direccion_terminales?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    tapa_tanque?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    equipo_carretera?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    kit_ambiental?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    documentacion?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    observaciones?: StringNullableWithAggregatesFilter<"Inspeccion"> | string | null
    horas_sueno?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    libre_fatiga?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    condiciones_aptas?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    consumo_medicamentos?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    placa_vehiculo_extra?: StringNullableWithAggregatesFilter<"Inspeccion"> | string | null
    tiene_alerta_roja?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    tiene_advertencias?: BoolWithAggregatesFilter<"Inspeccion"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Inspeccion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Inspeccion"> | Date | string
  }

  export type HistorialConductorWhereInput = {
    AND?: HistorialConductorWhereInput | HistorialConductorWhereInput[]
    OR?: HistorialConductorWhereInput[]
    NOT?: HistorialConductorWhereInput | HistorialConductorWhereInput[]
    id?: StringFilter<"HistorialConductor"> | string
    conductor_nombre?: StringFilter<"HistorialConductor"> | string
    total_inspecciones?: IntFilter<"HistorialConductor"> | number
    alertas_rojas_total?: IntFilter<"HistorialConductor"> | number
    advertencias_total?: IntFilter<"HistorialConductor"> | number
    ultima_inspeccion?: DateTimeNullableFilter<"HistorialConductor"> | Date | string | null
    promedio_riesgo?: FloatFilter<"HistorialConductor"> | number
    dias_sin_incidentes?: IntFilter<"HistorialConductor"> | number
    inspeccionId?: StringFilter<"HistorialConductor"> | string
    createdAt?: DateTimeFilter<"HistorialConductor"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialConductor"> | Date | string
    inspeccion?: XOR<InspeccionRelationFilter, InspeccionWhereInput>
  }

  export type HistorialConductorOrderByWithRelationInput = {
    id?: SortOrder
    conductor_nombre?: SortOrder
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    ultima_inspeccion?: SortOrderInput | SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
    inspeccionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    inspeccion?: InspeccionOrderByWithRelationInput
  }

  export type HistorialConductorWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: HistorialConductorWhereInput | HistorialConductorWhereInput[]
    OR?: HistorialConductorWhereInput[]
    NOT?: HistorialConductorWhereInput | HistorialConductorWhereInput[]
    conductor_nombre?: StringFilter<"HistorialConductor"> | string
    total_inspecciones?: IntFilter<"HistorialConductor"> | number
    alertas_rojas_total?: IntFilter<"HistorialConductor"> | number
    advertencias_total?: IntFilter<"HistorialConductor"> | number
    ultima_inspeccion?: DateTimeNullableFilter<"HistorialConductor"> | Date | string | null
    promedio_riesgo?: FloatFilter<"HistorialConductor"> | number
    dias_sin_incidentes?: IntFilter<"HistorialConductor"> | number
    inspeccionId?: StringFilter<"HistorialConductor"> | string
    createdAt?: DateTimeFilter<"HistorialConductor"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialConductor"> | Date | string
    inspeccion?: XOR<InspeccionRelationFilter, InspeccionWhereInput>
  }, "id">

  export type HistorialConductorOrderByWithAggregationInput = {
    id?: SortOrder
    conductor_nombre?: SortOrder
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    ultima_inspeccion?: SortOrderInput | SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
    inspeccionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HistorialConductorCountOrderByAggregateInput
    _avg?: HistorialConductorAvgOrderByAggregateInput
    _max?: HistorialConductorMaxOrderByAggregateInput
    _min?: HistorialConductorMinOrderByAggregateInput
    _sum?: HistorialConductorSumOrderByAggregateInput
  }

  export type HistorialConductorScalarWhereWithAggregatesInput = {
    AND?: HistorialConductorScalarWhereWithAggregatesInput | HistorialConductorScalarWhereWithAggregatesInput[]
    OR?: HistorialConductorScalarWhereWithAggregatesInput[]
    NOT?: HistorialConductorScalarWhereWithAggregatesInput | HistorialConductorScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"HistorialConductor"> | string
    conductor_nombre?: StringWithAggregatesFilter<"HistorialConductor"> | string
    total_inspecciones?: IntWithAggregatesFilter<"HistorialConductor"> | number
    alertas_rojas_total?: IntWithAggregatesFilter<"HistorialConductor"> | number
    advertencias_total?: IntWithAggregatesFilter<"HistorialConductor"> | number
    ultima_inspeccion?: DateTimeNullableWithAggregatesFilter<"HistorialConductor"> | Date | string | null
    promedio_riesgo?: FloatWithAggregatesFilter<"HistorialConductor"> | number
    dias_sin_incidentes?: IntWithAggregatesFilter<"HistorialConductor"> | number
    inspeccionId?: StringWithAggregatesFilter<"HistorialConductor"> | string
    createdAt?: DateTimeWithAggregatesFilter<"HistorialConductor"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"HistorialConductor"> | Date | string
  }

  export type MetricasReporteWhereInput = {
    AND?: MetricasReporteWhereInput | MetricasReporteWhereInput[]
    OR?: MetricasReporteWhereInput[]
    NOT?: MetricasReporteWhereInput | MetricasReporteWhereInput[]
    id?: StringFilter<"MetricasReporte"> | string
    fecha_reporte?: DateTimeFilter<"MetricasReporte"> | Date | string
    ano?: IntFilter<"MetricasReporte"> | number
    mes?: IntFilter<"MetricasReporte"> | number
    total_inspecciones?: IntFilter<"MetricasReporte"> | number
    total_conductores?: IntFilter<"MetricasReporte"> | number
    total_vehiculos?: IntFilter<"MetricasReporte"> | number
    alertas_rojas?: IntFilter<"MetricasReporte"> | number
    advertencias?: IntFilter<"MetricasReporte"> | number
    inspecciones_exitosas?: IntFilter<"MetricasReporte"> | number
    conductores_medicamentos?: IntFilter<"MetricasReporte"> | number
    conductores_poco_sueno?: IntFilter<"MetricasReporte"> | number
    conductores_con_sintomas?: IntFilter<"MetricasReporte"> | number
    conductores_no_aptos?: IntFilter<"MetricasReporte"> | number
    metricas_por_contrato?: JsonNullableFilter<"MetricasReporte">
    metricas_por_campo?: JsonNullableFilter<"MetricasReporte">
    createdAt?: DateTimeFilter<"MetricasReporte"> | Date | string
    updatedAt?: DateTimeFilter<"MetricasReporte"> | Date | string
  }

  export type MetricasReporteOrderByWithRelationInput = {
    id?: SortOrder
    fecha_reporte?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
    metricas_por_contrato?: SortOrderInput | SortOrder
    metricas_por_campo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MetricasReporteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    fecha_reporte_ano_mes?: MetricasReporteFecha_reporteAnoMesCompoundUniqueInput
    AND?: MetricasReporteWhereInput | MetricasReporteWhereInput[]
    OR?: MetricasReporteWhereInput[]
    NOT?: MetricasReporteWhereInput | MetricasReporteWhereInput[]
    fecha_reporte?: DateTimeFilter<"MetricasReporte"> | Date | string
    ano?: IntFilter<"MetricasReporte"> | number
    mes?: IntFilter<"MetricasReporte"> | number
    total_inspecciones?: IntFilter<"MetricasReporte"> | number
    total_conductores?: IntFilter<"MetricasReporte"> | number
    total_vehiculos?: IntFilter<"MetricasReporte"> | number
    alertas_rojas?: IntFilter<"MetricasReporte"> | number
    advertencias?: IntFilter<"MetricasReporte"> | number
    inspecciones_exitosas?: IntFilter<"MetricasReporte"> | number
    conductores_medicamentos?: IntFilter<"MetricasReporte"> | number
    conductores_poco_sueno?: IntFilter<"MetricasReporte"> | number
    conductores_con_sintomas?: IntFilter<"MetricasReporte"> | number
    conductores_no_aptos?: IntFilter<"MetricasReporte"> | number
    metricas_por_contrato?: JsonNullableFilter<"MetricasReporte">
    metricas_por_campo?: JsonNullableFilter<"MetricasReporte">
    createdAt?: DateTimeFilter<"MetricasReporte"> | Date | string
    updatedAt?: DateTimeFilter<"MetricasReporte"> | Date | string
  }, "id" | "fecha_reporte_ano_mes">

  export type MetricasReporteOrderByWithAggregationInput = {
    id?: SortOrder
    fecha_reporte?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
    metricas_por_contrato?: SortOrderInput | SortOrder
    metricas_por_campo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MetricasReporteCountOrderByAggregateInput
    _avg?: MetricasReporteAvgOrderByAggregateInput
    _max?: MetricasReporteMaxOrderByAggregateInput
    _min?: MetricasReporteMinOrderByAggregateInput
    _sum?: MetricasReporteSumOrderByAggregateInput
  }

  export type MetricasReporteScalarWhereWithAggregatesInput = {
    AND?: MetricasReporteScalarWhereWithAggregatesInput | MetricasReporteScalarWhereWithAggregatesInput[]
    OR?: MetricasReporteScalarWhereWithAggregatesInput[]
    NOT?: MetricasReporteScalarWhereWithAggregatesInput | MetricasReporteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MetricasReporte"> | string
    fecha_reporte?: DateTimeWithAggregatesFilter<"MetricasReporte"> | Date | string
    ano?: IntWithAggregatesFilter<"MetricasReporte"> | number
    mes?: IntWithAggregatesFilter<"MetricasReporte"> | number
    total_inspecciones?: IntWithAggregatesFilter<"MetricasReporte"> | number
    total_conductores?: IntWithAggregatesFilter<"MetricasReporte"> | number
    total_vehiculos?: IntWithAggregatesFilter<"MetricasReporte"> | number
    alertas_rojas?: IntWithAggregatesFilter<"MetricasReporte"> | number
    advertencias?: IntWithAggregatesFilter<"MetricasReporte"> | number
    inspecciones_exitosas?: IntWithAggregatesFilter<"MetricasReporte"> | number
    conductores_medicamentos?: IntWithAggregatesFilter<"MetricasReporte"> | number
    conductores_poco_sueno?: IntWithAggregatesFilter<"MetricasReporte"> | number
    conductores_con_sintomas?: IntWithAggregatesFilter<"MetricasReporte"> | number
    conductores_no_aptos?: IntWithAggregatesFilter<"MetricasReporte"> | number
    metricas_por_contrato?: JsonNullableWithAggregatesFilter<"MetricasReporte">
    metricas_por_campo?: JsonNullableWithAggregatesFilter<"MetricasReporte">
    createdAt?: DateTimeWithAggregatesFilter<"MetricasReporte"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MetricasReporte"> | Date | string
  }

  export type ArchivosProcesadosWhereInput = {
    AND?: ArchivosProcesadosWhereInput | ArchivosProcesadosWhereInput[]
    OR?: ArchivosProcesadosWhereInput[]
    NOT?: ArchivosProcesadosWhereInput | ArchivosProcesadosWhereInput[]
    id?: StringFilter<"ArchivosProcesados"> | string
    nombre_archivo?: StringFilter<"ArchivosProcesados"> | string
    hash_archivo?: StringFilter<"ArchivosProcesados"> | string
    ano_detectado?: IntFilter<"ArchivosProcesados"> | number
    meses_detectados?: IntNullableListFilter<"ArchivosProcesados">
    total_registros?: IntFilter<"ArchivosProcesados"> | number
    registros_nuevos?: IntFilter<"ArchivosProcesados"> | number
    registros_duplicados?: IntFilter<"ArchivosProcesados"> | number
    estado_procesamiento?: StringFilter<"ArchivosProcesados"> | string
    tiempo_procesamiento?: FloatNullableFilter<"ArchivosProcesados"> | number | null
    errores_validacion?: JsonNullableFilter<"ArchivosProcesados">
    advertencias?: JsonNullableFilter<"ArchivosProcesados">
    fecha_procesamiento?: DateTimeFilter<"ArchivosProcesados"> | Date | string
    usuario_carga?: StringNullableFilter<"ArchivosProcesados"> | string | null
  }

  export type ArchivosProcesadosOrderByWithRelationInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    ano_detectado?: SortOrder
    meses_detectados?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    estado_procesamiento?: SortOrder
    tiempo_procesamiento?: SortOrderInput | SortOrder
    errores_validacion?: SortOrderInput | SortOrder
    advertencias?: SortOrderInput | SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrderInput | SortOrder
  }

  export type ArchivosProcesadosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    hash_archivo?: string
    AND?: ArchivosProcesadosWhereInput | ArchivosProcesadosWhereInput[]
    OR?: ArchivosProcesadosWhereInput[]
    NOT?: ArchivosProcesadosWhereInput | ArchivosProcesadosWhereInput[]
    nombre_archivo?: StringFilter<"ArchivosProcesados"> | string
    ano_detectado?: IntFilter<"ArchivosProcesados"> | number
    meses_detectados?: IntNullableListFilter<"ArchivosProcesados">
    total_registros?: IntFilter<"ArchivosProcesados"> | number
    registros_nuevos?: IntFilter<"ArchivosProcesados"> | number
    registros_duplicados?: IntFilter<"ArchivosProcesados"> | number
    estado_procesamiento?: StringFilter<"ArchivosProcesados"> | string
    tiempo_procesamiento?: FloatNullableFilter<"ArchivosProcesados"> | number | null
    errores_validacion?: JsonNullableFilter<"ArchivosProcesados">
    advertencias?: JsonNullableFilter<"ArchivosProcesados">
    fecha_procesamiento?: DateTimeFilter<"ArchivosProcesados"> | Date | string
    usuario_carga?: StringNullableFilter<"ArchivosProcesados"> | string | null
  }, "id" | "hash_archivo">

  export type ArchivosProcesadosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    ano_detectado?: SortOrder
    meses_detectados?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    estado_procesamiento?: SortOrder
    tiempo_procesamiento?: SortOrderInput | SortOrder
    errores_validacion?: SortOrderInput | SortOrder
    advertencias?: SortOrderInput | SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrderInput | SortOrder
    _count?: ArchivosProcesadosCountOrderByAggregateInput
    _avg?: ArchivosProcesadosAvgOrderByAggregateInput
    _max?: ArchivosProcesadosMaxOrderByAggregateInput
    _min?: ArchivosProcesadosMinOrderByAggregateInput
    _sum?: ArchivosProcesadosSumOrderByAggregateInput
  }

  export type ArchivosProcesadosScalarWhereWithAggregatesInput = {
    AND?: ArchivosProcesadosScalarWhereWithAggregatesInput | ArchivosProcesadosScalarWhereWithAggregatesInput[]
    OR?: ArchivosProcesadosScalarWhereWithAggregatesInput[]
    NOT?: ArchivosProcesadosScalarWhereWithAggregatesInput | ArchivosProcesadosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ArchivosProcesados"> | string
    nombre_archivo?: StringWithAggregatesFilter<"ArchivosProcesados"> | string
    hash_archivo?: StringWithAggregatesFilter<"ArchivosProcesados"> | string
    ano_detectado?: IntWithAggregatesFilter<"ArchivosProcesados"> | number
    meses_detectados?: IntNullableListFilter<"ArchivosProcesados">
    total_registros?: IntWithAggregatesFilter<"ArchivosProcesados"> | number
    registros_nuevos?: IntWithAggregatesFilter<"ArchivosProcesados"> | number
    registros_duplicados?: IntWithAggregatesFilter<"ArchivosProcesados"> | number
    estado_procesamiento?: StringWithAggregatesFilter<"ArchivosProcesados"> | string
    tiempo_procesamiento?: FloatNullableWithAggregatesFilter<"ArchivosProcesados"> | number | null
    errores_validacion?: JsonNullableWithAggregatesFilter<"ArchivosProcesados">
    advertencias?: JsonNullableWithAggregatesFilter<"ArchivosProcesados">
    fecha_procesamiento?: DateTimeWithAggregatesFilter<"ArchivosProcesados"> | Date | string
    usuario_carga?: StringNullableWithAggregatesFilter<"ArchivosProcesados"> | string | null
  }

  export type InspeccionCreateInput = {
    id?: string
    fecha: Date | string
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones?: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra?: string | null
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    historial?: HistorialConductorCreateNestedManyWithoutInspeccionInput
  }

  export type InspeccionUncheckedCreateInput = {
    id?: string
    fecha: Date | string
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones?: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra?: string | null
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    historial?: HistorialConductorUncheckedCreateNestedManyWithoutInspeccionInput
  }

  export type InspeccionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historial?: HistorialConductorUpdateManyWithoutInspeccionNestedInput
  }

  export type InspeccionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historial?: HistorialConductorUncheckedUpdateManyWithoutInspeccionNestedInput
  }

  export type InspeccionCreateManyInput = {
    id?: string
    fecha: Date | string
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones?: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra?: string | null
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InspeccionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspeccionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorCreateInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    inspeccion: InspeccionCreateNestedOneWithoutHistorialInput
  }

  export type HistorialConductorUncheckedCreateInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    inspeccionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialConductorUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inspeccion?: InspeccionUpdateOneRequiredWithoutHistorialNestedInput
  }

  export type HistorialConductorUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    inspeccionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorCreateManyInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    inspeccionId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialConductorUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    inspeccionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetricasReporteCreateInput = {
    id?: string
    fecha_reporte: Date | string
    ano: number
    mes: number
    total_inspecciones?: number
    total_conductores?: number
    total_vehiculos?: number
    alertas_rojas?: number
    advertencias?: number
    inspecciones_exitosas?: number
    conductores_medicamentos?: number
    conductores_poco_sueno?: number
    conductores_con_sintomas?: number
    conductores_no_aptos?: number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MetricasReporteUncheckedCreateInput = {
    id?: string
    fecha_reporte: Date | string
    ano: number
    mes: number
    total_inspecciones?: number
    total_conductores?: number
    total_vehiculos?: number
    alertas_rojas?: number
    advertencias?: number
    inspecciones_exitosas?: number
    conductores_medicamentos?: number
    conductores_poco_sueno?: number
    conductores_con_sintomas?: number
    conductores_no_aptos?: number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MetricasReporteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_reporte?: DateTimeFieldUpdateOperationsInput | Date | string
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    total_conductores?: IntFieldUpdateOperationsInput | number
    total_vehiculos?: IntFieldUpdateOperationsInput | number
    alertas_rojas?: IntFieldUpdateOperationsInput | number
    advertencias?: IntFieldUpdateOperationsInput | number
    inspecciones_exitosas?: IntFieldUpdateOperationsInput | number
    conductores_medicamentos?: IntFieldUpdateOperationsInput | number
    conductores_poco_sueno?: IntFieldUpdateOperationsInput | number
    conductores_con_sintomas?: IntFieldUpdateOperationsInput | number
    conductores_no_aptos?: IntFieldUpdateOperationsInput | number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetricasReporteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_reporte?: DateTimeFieldUpdateOperationsInput | Date | string
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    total_conductores?: IntFieldUpdateOperationsInput | number
    total_vehiculos?: IntFieldUpdateOperationsInput | number
    alertas_rojas?: IntFieldUpdateOperationsInput | number
    advertencias?: IntFieldUpdateOperationsInput | number
    inspecciones_exitosas?: IntFieldUpdateOperationsInput | number
    conductores_medicamentos?: IntFieldUpdateOperationsInput | number
    conductores_poco_sueno?: IntFieldUpdateOperationsInput | number
    conductores_con_sintomas?: IntFieldUpdateOperationsInput | number
    conductores_no_aptos?: IntFieldUpdateOperationsInput | number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetricasReporteCreateManyInput = {
    id?: string
    fecha_reporte: Date | string
    ano: number
    mes: number
    total_inspecciones?: number
    total_conductores?: number
    total_vehiculos?: number
    alertas_rojas?: number
    advertencias?: number
    inspecciones_exitosas?: number
    conductores_medicamentos?: number
    conductores_poco_sueno?: number
    conductores_con_sintomas?: number
    conductores_no_aptos?: number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MetricasReporteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_reporte?: DateTimeFieldUpdateOperationsInput | Date | string
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    total_conductores?: IntFieldUpdateOperationsInput | number
    total_vehiculos?: IntFieldUpdateOperationsInput | number
    alertas_rojas?: IntFieldUpdateOperationsInput | number
    advertencias?: IntFieldUpdateOperationsInput | number
    inspecciones_exitosas?: IntFieldUpdateOperationsInput | number
    conductores_medicamentos?: IntFieldUpdateOperationsInput | number
    conductores_poco_sueno?: IntFieldUpdateOperationsInput | number
    conductores_con_sintomas?: IntFieldUpdateOperationsInput | number
    conductores_no_aptos?: IntFieldUpdateOperationsInput | number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MetricasReporteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha_reporte?: DateTimeFieldUpdateOperationsInput | Date | string
    ano?: IntFieldUpdateOperationsInput | number
    mes?: IntFieldUpdateOperationsInput | number
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    total_conductores?: IntFieldUpdateOperationsInput | number
    total_vehiculos?: IntFieldUpdateOperationsInput | number
    alertas_rojas?: IntFieldUpdateOperationsInput | number
    advertencias?: IntFieldUpdateOperationsInput | number
    inspecciones_exitosas?: IntFieldUpdateOperationsInput | number
    conductores_medicamentos?: IntFieldUpdateOperationsInput | number
    conductores_poco_sueno?: IntFieldUpdateOperationsInput | number
    conductores_con_sintomas?: IntFieldUpdateOperationsInput | number
    conductores_no_aptos?: IntFieldUpdateOperationsInput | number
    metricas_por_contrato?: NullableJsonNullValueInput | InputJsonValue
    metricas_por_campo?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ArchivosProcesadosCreateInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    ano_detectado: number
    meses_detectados?: ArchivosProcesadosCreatemeses_detectadosInput | number[]
    total_registros?: number
    registros_nuevos?: number
    registros_duplicados?: number
    estado_procesamiento?: string
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
  }

  export type ArchivosProcesadosUncheckedCreateInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    ano_detectado: number
    meses_detectados?: ArchivosProcesadosCreatemeses_detectadosInput | number[]
    total_registros?: number
    registros_nuevos?: number
    registros_duplicados?: number
    estado_procesamiento?: string
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
  }

  export type ArchivosProcesadosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    ano_detectado?: IntFieldUpdateOperationsInput | number
    meses_detectados?: ArchivosProcesadosUpdatemeses_detectadosInput | number[]
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_nuevos?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    estado_procesamiento?: StringFieldUpdateOperationsInput | string
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivosProcesadosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    ano_detectado?: IntFieldUpdateOperationsInput | number
    meses_detectados?: ArchivosProcesadosUpdatemeses_detectadosInput | number[]
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_nuevos?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    estado_procesamiento?: StringFieldUpdateOperationsInput | string
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivosProcesadosCreateManyInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    ano_detectado: number
    meses_detectados?: ArchivosProcesadosCreatemeses_detectadosInput | number[]
    total_registros?: number
    registros_nuevos?: number
    registros_duplicados?: number
    estado_procesamiento?: string
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
  }

  export type ArchivosProcesadosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    ano_detectado?: IntFieldUpdateOperationsInput | number
    meses_detectados?: ArchivosProcesadosUpdatemeses_detectadosInput | number[]
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_nuevos?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    estado_procesamiento?: StringFieldUpdateOperationsInput | string
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ArchivosProcesadosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    ano_detectado?: IntFieldUpdateOperationsInput | number
    meses_detectados?: ArchivosProcesadosUpdatemeses_detectadosInput | number[]
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_nuevos?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    estado_procesamiento?: StringFieldUpdateOperationsInput | string
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type HistorialConductorListRelationFilter = {
    every?: HistorialConductorWhereInput
    some?: HistorialConductorWhereInput
    none?: HistorialConductorWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type HistorialConductorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InspeccionCountOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    marca_temporal?: SortOrder
    nombre_inspector?: SortOrder
    contrato?: SortOrder
    campo_coordinacion?: SortOrder
    placa_vehiculo?: SortOrder
    kilometraje?: SortOrder
    turno?: SortOrder
    altas_bajas?: SortOrder
    direccionales?: SortOrder
    parqueo?: SortOrder
    freno?: SortOrder
    reversa_alarma?: SortOrder
    espejos?: SortOrder
    vidrio_frontal?: SortOrder
    orden_aseo?: SortOrder
    pito?: SortOrder
    gps?: SortOrder
    frenos?: SortOrder
    freno_emergencia?: SortOrder
    cinturones?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    limpia_brisas?: SortOrder
    extintor_vigente?: SortOrder
    botiquin?: SortOrder
    tapiceria?: SortOrder
    indicadores?: SortOrder
    objetos_sueltos?: SortOrder
    aceite_motor?: SortOrder
    fluido_frenos?: SortOrder
    fluido_direccion?: SortOrder
    fluido_refrigerante?: SortOrder
    fluido_limpia_parabrisas?: SortOrder
    correas?: SortOrder
    baterias?: SortOrder
    llantas_labrado?: SortOrder
    llantas_sin_cortes?: SortOrder
    llanta_repuesto?: SortOrder
    copas_pernos_llantas?: SortOrder
    suspension?: SortOrder
    direccion_terminales?: SortOrder
    tapa_tanque?: SortOrder
    equipo_carretera?: SortOrder
    kit_ambiental?: SortOrder
    documentacion?: SortOrder
    observaciones?: SortOrder
    horas_sueno?: SortOrder
    libre_fatiga?: SortOrder
    condiciones_aptas?: SortOrder
    consumo_medicamentos?: SortOrder
    placa_vehiculo_extra?: SortOrder
    tiene_alerta_roja?: SortOrder
    tiene_advertencias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InspeccionAvgOrderByAggregateInput = {
    marca_temporal?: SortOrder
    kilometraje?: SortOrder
  }

  export type InspeccionMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    marca_temporal?: SortOrder
    nombre_inspector?: SortOrder
    contrato?: SortOrder
    campo_coordinacion?: SortOrder
    placa_vehiculo?: SortOrder
    kilometraje?: SortOrder
    turno?: SortOrder
    altas_bajas?: SortOrder
    direccionales?: SortOrder
    parqueo?: SortOrder
    freno?: SortOrder
    reversa_alarma?: SortOrder
    espejos?: SortOrder
    vidrio_frontal?: SortOrder
    orden_aseo?: SortOrder
    pito?: SortOrder
    gps?: SortOrder
    frenos?: SortOrder
    freno_emergencia?: SortOrder
    cinturones?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    limpia_brisas?: SortOrder
    extintor_vigente?: SortOrder
    botiquin?: SortOrder
    tapiceria?: SortOrder
    indicadores?: SortOrder
    objetos_sueltos?: SortOrder
    aceite_motor?: SortOrder
    fluido_frenos?: SortOrder
    fluido_direccion?: SortOrder
    fluido_refrigerante?: SortOrder
    fluido_limpia_parabrisas?: SortOrder
    correas?: SortOrder
    baterias?: SortOrder
    llantas_labrado?: SortOrder
    llantas_sin_cortes?: SortOrder
    llanta_repuesto?: SortOrder
    copas_pernos_llantas?: SortOrder
    suspension?: SortOrder
    direccion_terminales?: SortOrder
    tapa_tanque?: SortOrder
    equipo_carretera?: SortOrder
    kit_ambiental?: SortOrder
    documentacion?: SortOrder
    observaciones?: SortOrder
    horas_sueno?: SortOrder
    libre_fatiga?: SortOrder
    condiciones_aptas?: SortOrder
    consumo_medicamentos?: SortOrder
    placa_vehiculo_extra?: SortOrder
    tiene_alerta_roja?: SortOrder
    tiene_advertencias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InspeccionMinOrderByAggregateInput = {
    id?: SortOrder
    fecha?: SortOrder
    marca_temporal?: SortOrder
    nombre_inspector?: SortOrder
    contrato?: SortOrder
    campo_coordinacion?: SortOrder
    placa_vehiculo?: SortOrder
    kilometraje?: SortOrder
    turno?: SortOrder
    altas_bajas?: SortOrder
    direccionales?: SortOrder
    parqueo?: SortOrder
    freno?: SortOrder
    reversa_alarma?: SortOrder
    espejos?: SortOrder
    vidrio_frontal?: SortOrder
    orden_aseo?: SortOrder
    pito?: SortOrder
    gps?: SortOrder
    frenos?: SortOrder
    freno_emergencia?: SortOrder
    cinturones?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    limpia_brisas?: SortOrder
    extintor_vigente?: SortOrder
    botiquin?: SortOrder
    tapiceria?: SortOrder
    indicadores?: SortOrder
    objetos_sueltos?: SortOrder
    aceite_motor?: SortOrder
    fluido_frenos?: SortOrder
    fluido_direccion?: SortOrder
    fluido_refrigerante?: SortOrder
    fluido_limpia_parabrisas?: SortOrder
    correas?: SortOrder
    baterias?: SortOrder
    llantas_labrado?: SortOrder
    llantas_sin_cortes?: SortOrder
    llanta_repuesto?: SortOrder
    copas_pernos_llantas?: SortOrder
    suspension?: SortOrder
    direccion_terminales?: SortOrder
    tapa_tanque?: SortOrder
    equipo_carretera?: SortOrder
    kit_ambiental?: SortOrder
    documentacion?: SortOrder
    observaciones?: SortOrder
    horas_sueno?: SortOrder
    libre_fatiga?: SortOrder
    condiciones_aptas?: SortOrder
    consumo_medicamentos?: SortOrder
    placa_vehiculo_extra?: SortOrder
    tiene_alerta_roja?: SortOrder
    tiene_advertencias?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type InspeccionSumOrderByAggregateInput = {
    marca_temporal?: SortOrder
    kilometraje?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type InspeccionRelationFilter = {
    is?: InspeccionWhereInput
    isNot?: InspeccionWhereInput
  }

  export type HistorialConductorCountOrderByAggregateInput = {
    id?: SortOrder
    conductor_nombre?: SortOrder
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    ultima_inspeccion?: SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
    inspeccionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialConductorAvgOrderByAggregateInput = {
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
  }

  export type HistorialConductorMaxOrderByAggregateInput = {
    id?: SortOrder
    conductor_nombre?: SortOrder
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    ultima_inspeccion?: SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
    inspeccionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialConductorMinOrderByAggregateInput = {
    id?: SortOrder
    conductor_nombre?: SortOrder
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    ultima_inspeccion?: SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
    inspeccionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HistorialConductorSumOrderByAggregateInput = {
    total_inspecciones?: SortOrder
    alertas_rojas_total?: SortOrder
    advertencias_total?: SortOrder
    promedio_riesgo?: SortOrder
    dias_sin_incidentes?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type MetricasReporteFecha_reporteAnoMesCompoundUniqueInput = {
    fecha_reporte: Date | string
    ano: number
    mes: number
  }

  export type MetricasReporteCountOrderByAggregateInput = {
    id?: SortOrder
    fecha_reporte?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
    metricas_por_contrato?: SortOrder
    metricas_por_campo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MetricasReporteAvgOrderByAggregateInput = {
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
  }

  export type MetricasReporteMaxOrderByAggregateInput = {
    id?: SortOrder
    fecha_reporte?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MetricasReporteMinOrderByAggregateInput = {
    id?: SortOrder
    fecha_reporte?: SortOrder
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MetricasReporteSumOrderByAggregateInput = {
    ano?: SortOrder
    mes?: SortOrder
    total_inspecciones?: SortOrder
    total_conductores?: SortOrder
    total_vehiculos?: SortOrder
    alertas_rojas?: SortOrder
    advertencias?: SortOrder
    inspecciones_exitosas?: SortOrder
    conductores_medicamentos?: SortOrder
    conductores_poco_sueno?: SortOrder
    conductores_con_sintomas?: SortOrder
    conductores_no_aptos?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableListFilter<$PrismaModel = never> = {
    equals?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    has?: number | IntFieldRefInput<$PrismaModel> | null
    hasEvery?: number[] | ListIntFieldRefInput<$PrismaModel>
    hasSome?: number[] | ListIntFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ArchivosProcesadosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    ano_detectado?: SortOrder
    meses_detectados?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    estado_procesamiento?: SortOrder
    tiempo_procesamiento?: SortOrder
    errores_validacion?: SortOrder
    advertencias?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
  }

  export type ArchivosProcesadosAvgOrderByAggregateInput = {
    ano_detectado?: SortOrder
    meses_detectados?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    tiempo_procesamiento?: SortOrder
  }

  export type ArchivosProcesadosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    ano_detectado?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    estado_procesamiento?: SortOrder
    tiempo_procesamiento?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
  }

  export type ArchivosProcesadosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    ano_detectado?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    estado_procesamiento?: SortOrder
    tiempo_procesamiento?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
  }

  export type ArchivosProcesadosSumOrderByAggregateInput = {
    ano_detectado?: SortOrder
    meses_detectados?: SortOrder
    total_registros?: SortOrder
    registros_nuevos?: SortOrder
    registros_duplicados?: SortOrder
    tiempo_procesamiento?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type HistorialConductorCreateNestedManyWithoutInspeccionInput = {
    create?: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput> | HistorialConductorCreateWithoutInspeccionInput[] | HistorialConductorUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: HistorialConductorCreateOrConnectWithoutInspeccionInput | HistorialConductorCreateOrConnectWithoutInspeccionInput[]
    createMany?: HistorialConductorCreateManyInspeccionInputEnvelope
    connect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
  }

  export type HistorialConductorUncheckedCreateNestedManyWithoutInspeccionInput = {
    create?: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput> | HistorialConductorCreateWithoutInspeccionInput[] | HistorialConductorUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: HistorialConductorCreateOrConnectWithoutInspeccionInput | HistorialConductorCreateOrConnectWithoutInspeccionInput[]
    createMany?: HistorialConductorCreateManyInspeccionInputEnvelope
    connect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type HistorialConductorUpdateManyWithoutInspeccionNestedInput = {
    create?: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput> | HistorialConductorCreateWithoutInspeccionInput[] | HistorialConductorUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: HistorialConductorCreateOrConnectWithoutInspeccionInput | HistorialConductorCreateOrConnectWithoutInspeccionInput[]
    upsert?: HistorialConductorUpsertWithWhereUniqueWithoutInspeccionInput | HistorialConductorUpsertWithWhereUniqueWithoutInspeccionInput[]
    createMany?: HistorialConductorCreateManyInspeccionInputEnvelope
    set?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    disconnect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    delete?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    connect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    update?: HistorialConductorUpdateWithWhereUniqueWithoutInspeccionInput | HistorialConductorUpdateWithWhereUniqueWithoutInspeccionInput[]
    updateMany?: HistorialConductorUpdateManyWithWhereWithoutInspeccionInput | HistorialConductorUpdateManyWithWhereWithoutInspeccionInput[]
    deleteMany?: HistorialConductorScalarWhereInput | HistorialConductorScalarWhereInput[]
  }

  export type HistorialConductorUncheckedUpdateManyWithoutInspeccionNestedInput = {
    create?: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput> | HistorialConductorCreateWithoutInspeccionInput[] | HistorialConductorUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: HistorialConductorCreateOrConnectWithoutInspeccionInput | HistorialConductorCreateOrConnectWithoutInspeccionInput[]
    upsert?: HistorialConductorUpsertWithWhereUniqueWithoutInspeccionInput | HistorialConductorUpsertWithWhereUniqueWithoutInspeccionInput[]
    createMany?: HistorialConductorCreateManyInspeccionInputEnvelope
    set?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    disconnect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    delete?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    connect?: HistorialConductorWhereUniqueInput | HistorialConductorWhereUniqueInput[]
    update?: HistorialConductorUpdateWithWhereUniqueWithoutInspeccionInput | HistorialConductorUpdateWithWhereUniqueWithoutInspeccionInput[]
    updateMany?: HistorialConductorUpdateManyWithWhereWithoutInspeccionInput | HistorialConductorUpdateManyWithWhereWithoutInspeccionInput[]
    deleteMany?: HistorialConductorScalarWhereInput | HistorialConductorScalarWhereInput[]
  }

  export type InspeccionCreateNestedOneWithoutHistorialInput = {
    create?: XOR<InspeccionCreateWithoutHistorialInput, InspeccionUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: InspeccionCreateOrConnectWithoutHistorialInput
    connect?: InspeccionWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type InspeccionUpdateOneRequiredWithoutHistorialNestedInput = {
    create?: XOR<InspeccionCreateWithoutHistorialInput, InspeccionUncheckedCreateWithoutHistorialInput>
    connectOrCreate?: InspeccionCreateOrConnectWithoutHistorialInput
    upsert?: InspeccionUpsertWithoutHistorialInput
    connect?: InspeccionWhereUniqueInput
    update?: XOR<XOR<InspeccionUpdateToOneWithWhereWithoutHistorialInput, InspeccionUpdateWithoutHistorialInput>, InspeccionUncheckedUpdateWithoutHistorialInput>
  }

  export type ArchivosProcesadosCreatemeses_detectadosInput = {
    set: number[]
  }

  export type ArchivosProcesadosUpdatemeses_detectadosInput = {
    set?: number[]
    push?: number | number[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type HistorialConductorCreateWithoutInspeccionInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialConductorUncheckedCreateWithoutInspeccionInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialConductorCreateOrConnectWithoutInspeccionInput = {
    where: HistorialConductorWhereUniqueInput
    create: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput>
  }

  export type HistorialConductorCreateManyInspeccionInputEnvelope = {
    data: HistorialConductorCreateManyInspeccionInput | HistorialConductorCreateManyInspeccionInput[]
    skipDuplicates?: boolean
  }

  export type HistorialConductorUpsertWithWhereUniqueWithoutInspeccionInput = {
    where: HistorialConductorWhereUniqueInput
    update: XOR<HistorialConductorUpdateWithoutInspeccionInput, HistorialConductorUncheckedUpdateWithoutInspeccionInput>
    create: XOR<HistorialConductorCreateWithoutInspeccionInput, HistorialConductorUncheckedCreateWithoutInspeccionInput>
  }

  export type HistorialConductorUpdateWithWhereUniqueWithoutInspeccionInput = {
    where: HistorialConductorWhereUniqueInput
    data: XOR<HistorialConductorUpdateWithoutInspeccionInput, HistorialConductorUncheckedUpdateWithoutInspeccionInput>
  }

  export type HistorialConductorUpdateManyWithWhereWithoutInspeccionInput = {
    where: HistorialConductorScalarWhereInput
    data: XOR<HistorialConductorUpdateManyMutationInput, HistorialConductorUncheckedUpdateManyWithoutInspeccionInput>
  }

  export type HistorialConductorScalarWhereInput = {
    AND?: HistorialConductorScalarWhereInput | HistorialConductorScalarWhereInput[]
    OR?: HistorialConductorScalarWhereInput[]
    NOT?: HistorialConductorScalarWhereInput | HistorialConductorScalarWhereInput[]
    id?: StringFilter<"HistorialConductor"> | string
    conductor_nombre?: StringFilter<"HistorialConductor"> | string
    total_inspecciones?: IntFilter<"HistorialConductor"> | number
    alertas_rojas_total?: IntFilter<"HistorialConductor"> | number
    advertencias_total?: IntFilter<"HistorialConductor"> | number
    ultima_inspeccion?: DateTimeNullableFilter<"HistorialConductor"> | Date | string | null
    promedio_riesgo?: FloatFilter<"HistorialConductor"> | number
    dias_sin_incidentes?: IntFilter<"HistorialConductor"> | number
    inspeccionId?: StringFilter<"HistorialConductor"> | string
    createdAt?: DateTimeFilter<"HistorialConductor"> | Date | string
    updatedAt?: DateTimeFilter<"HistorialConductor"> | Date | string
  }

  export type InspeccionCreateWithoutHistorialInput = {
    id?: string
    fecha: Date | string
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones?: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra?: string | null
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InspeccionUncheckedCreateWithoutHistorialInput = {
    id?: string
    fecha: Date | string
    marca_temporal: number
    nombre_inspector: string
    contrato: string
    campo_coordinacion: string
    placa_vehiculo: string
    kilometraje: number
    turno: string
    altas_bajas: boolean
    direccionales: boolean
    parqueo: boolean
    freno: boolean
    reversa_alarma: boolean
    espejos: boolean
    vidrio_frontal: boolean
    orden_aseo: boolean
    pito: boolean
    gps: boolean
    frenos: boolean
    freno_emergencia: boolean
    cinturones: boolean
    puertas: boolean
    vidrios: boolean
    limpia_brisas: boolean
    extintor_vigente: boolean
    botiquin: boolean
    tapiceria: boolean
    indicadores: boolean
    objetos_sueltos: boolean
    aceite_motor: boolean
    fluido_frenos: boolean
    fluido_direccion: boolean
    fluido_refrigerante: boolean
    fluido_limpia_parabrisas: boolean
    correas: boolean
    baterias: boolean
    llantas_labrado: boolean
    llantas_sin_cortes: boolean
    llanta_repuesto: boolean
    copas_pernos_llantas: boolean
    suspension: boolean
    direccion_terminales: boolean
    tapa_tanque: boolean
    equipo_carretera: boolean
    kit_ambiental: boolean
    documentacion: boolean
    observaciones?: string | null
    horas_sueno: boolean
    libre_fatiga: boolean
    condiciones_aptas: boolean
    consumo_medicamentos: boolean
    placa_vehiculo_extra?: string | null
    tiene_alerta_roja?: boolean
    tiene_advertencias?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type InspeccionCreateOrConnectWithoutHistorialInput = {
    where: InspeccionWhereUniqueInput
    create: XOR<InspeccionCreateWithoutHistorialInput, InspeccionUncheckedCreateWithoutHistorialInput>
  }

  export type InspeccionUpsertWithoutHistorialInput = {
    update: XOR<InspeccionUpdateWithoutHistorialInput, InspeccionUncheckedUpdateWithoutHistorialInput>
    create: XOR<InspeccionCreateWithoutHistorialInput, InspeccionUncheckedCreateWithoutHistorialInput>
    where?: InspeccionWhereInput
  }

  export type InspeccionUpdateToOneWithWhereWithoutHistorialInput = {
    where?: InspeccionWhereInput
    data: XOR<InspeccionUpdateWithoutHistorialInput, InspeccionUncheckedUpdateWithoutHistorialInput>
  }

  export type InspeccionUpdateWithoutHistorialInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InspeccionUncheckedUpdateWithoutHistorialInput = {
    id?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    marca_temporal?: FloatFieldUpdateOperationsInput | number
    nombre_inspector?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    turno?: StringFieldUpdateOperationsInput | string
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    reversa_alarma?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    vidrio_frontal?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    gps?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    freno_emergencia?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    extintor_vigente?: BoolFieldUpdateOperationsInput | boolean
    botiquin?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    objetos_sueltos?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    fluido_direccion?: BoolFieldUpdateOperationsInput | boolean
    fluido_refrigerante?: BoolFieldUpdateOperationsInput | boolean
    fluido_limpia_parabrisas?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    llantas_labrado?: BoolFieldUpdateOperationsInput | boolean
    llantas_sin_cortes?: BoolFieldUpdateOperationsInput | boolean
    llanta_repuesto?: BoolFieldUpdateOperationsInput | boolean
    copas_pernos_llantas?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    direccion_terminales?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    equipo_carretera?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    observaciones?: NullableStringFieldUpdateOperationsInput | string | null
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    condiciones_aptas?: BoolFieldUpdateOperationsInput | boolean
    consumo_medicamentos?: BoolFieldUpdateOperationsInput | boolean
    placa_vehiculo_extra?: NullableStringFieldUpdateOperationsInput | string | null
    tiene_alerta_roja?: BoolFieldUpdateOperationsInput | boolean
    tiene_advertencias?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorCreateManyInspeccionInput = {
    id?: string
    conductor_nombre: string
    total_inspecciones?: number
    alertas_rojas_total?: number
    advertencias_total?: number
    ultima_inspeccion?: Date | string | null
    promedio_riesgo?: number
    dias_sin_incidentes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HistorialConductorUpdateWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorUncheckedUpdateWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HistorialConductorUncheckedUpdateManyWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    total_inspecciones?: IntFieldUpdateOperationsInput | number
    alertas_rojas_total?: IntFieldUpdateOperationsInput | number
    advertencias_total?: IntFieldUpdateOperationsInput | number
    ultima_inspeccion?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promedio_riesgo?: FloatFieldUpdateOperationsInput | number
    dias_sin_incidentes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use InspeccionCountOutputTypeDefaultArgs instead
     */
    export type InspeccionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InspeccionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use InspeccionDefaultArgs instead
     */
    export type InspeccionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InspeccionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use HistorialConductorDefaultArgs instead
     */
    export type HistorialConductorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = HistorialConductorDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MetricasReporteDefaultArgs instead
     */
    export type MetricasReporteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MetricasReporteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ArchivosProcesadosDefaultArgs instead
     */
    export type ArchivosProcesadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ArchivosProcesadosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}