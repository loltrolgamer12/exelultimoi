
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model inspecciones
 * 
 */
export type inspecciones = $Result.DefaultSelection<Prisma.$inspeccionesPayload>
/**
 * Model archivos_procesados
 * 
 */
export type archivos_procesados = $Result.DefaultSelection<Prisma.$archivos_procesadosPayload>
/**
 * Model historial_conductores
 * 
 */
export type historial_conductores = $Result.DefaultSelection<Prisma.$historial_conductoresPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Inspecciones
 * const inspecciones = await prisma.inspecciones.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Inspecciones
   * const inspecciones = await prisma.inspecciones.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.inspecciones`: Exposes CRUD operations for the **inspecciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Inspecciones
    * const inspecciones = await prisma.inspecciones.findMany()
    * ```
    */
  get inspecciones(): Prisma.inspeccionesDelegate<ExtArgs>;

  /**
   * `prisma.archivos_procesados`: Exposes CRUD operations for the **archivos_procesados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Archivos_procesados
    * const archivos_procesados = await prisma.archivos_procesados.findMany()
    * ```
    */
  get archivos_procesados(): Prisma.archivos_procesadosDelegate<ExtArgs>;

  /**
   * `prisma.historial_conductores`: Exposes CRUD operations for the **historial_conductores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Historial_conductores
    * const historial_conductores = await prisma.historial_conductores.findMany()
    * ```
    */
  get historial_conductores(): Prisma.historial_conductoresDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    inspecciones: 'inspecciones',
    archivos_procesados: 'archivos_procesados',
    historial_conductores: 'historial_conductores'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "inspecciones" | "archivos_procesados" | "historial_conductores"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      inspecciones: {
        payload: Prisma.$inspeccionesPayload<ExtArgs>
        fields: Prisma.inspeccionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.inspeccionesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.inspeccionesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          findFirst: {
            args: Prisma.inspeccionesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.inspeccionesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          findMany: {
            args: Prisma.inspeccionesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>[]
          }
          create: {
            args: Prisma.inspeccionesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          createMany: {
            args: Prisma.inspeccionesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.inspeccionesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>[]
          }
          delete: {
            args: Prisma.inspeccionesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          update: {
            args: Prisma.inspeccionesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          deleteMany: {
            args: Prisma.inspeccionesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.inspeccionesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.inspeccionesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$inspeccionesPayload>
          }
          aggregate: {
            args: Prisma.InspeccionesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInspecciones>
          }
          groupBy: {
            args: Prisma.inspeccionesGroupByArgs<ExtArgs>
            result: $Utils.Optional<InspeccionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.inspeccionesCountArgs<ExtArgs>
            result: $Utils.Optional<InspeccionesCountAggregateOutputType> | number
          }
        }
      }
      archivos_procesados: {
        payload: Prisma.$archivos_procesadosPayload<ExtArgs>
        fields: Prisma.archivos_procesadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.archivos_procesadosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.archivos_procesadosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          findFirst: {
            args: Prisma.archivos_procesadosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.archivos_procesadosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          findMany: {
            args: Prisma.archivos_procesadosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>[]
          }
          create: {
            args: Prisma.archivos_procesadosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          createMany: {
            args: Prisma.archivos_procesadosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.archivos_procesadosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>[]
          }
          delete: {
            args: Prisma.archivos_procesadosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          update: {
            args: Prisma.archivos_procesadosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          deleteMany: {
            args: Prisma.archivos_procesadosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.archivos_procesadosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.archivos_procesadosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$archivos_procesadosPayload>
          }
          aggregate: {
            args: Prisma.Archivos_procesadosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArchivos_procesados>
          }
          groupBy: {
            args: Prisma.archivos_procesadosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Archivos_procesadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.archivos_procesadosCountArgs<ExtArgs>
            result: $Utils.Optional<Archivos_procesadosCountAggregateOutputType> | number
          }
        }
      }
      historial_conductores: {
        payload: Prisma.$historial_conductoresPayload<ExtArgs>
        fields: Prisma.historial_conductoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.historial_conductoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.historial_conductoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          findFirst: {
            args: Prisma.historial_conductoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.historial_conductoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          findMany: {
            args: Prisma.historial_conductoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>[]
          }
          create: {
            args: Prisma.historial_conductoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          createMany: {
            args: Prisma.historial_conductoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.historial_conductoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>[]
          }
          delete: {
            args: Prisma.historial_conductoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          update: {
            args: Prisma.historial_conductoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          deleteMany: {
            args: Prisma.historial_conductoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.historial_conductoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.historial_conductoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$historial_conductoresPayload>
          }
          aggregate: {
            args: Prisma.Historial_conductoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHistorial_conductores>
          }
          groupBy: {
            args: Prisma.historial_conductoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<Historial_conductoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.historial_conductoresCountArgs<ExtArgs>
            result: $Utils.Optional<Historial_conductoresCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type InspeccionesCountOutputType
   */

  export type InspeccionesCountOutputType = {
    historial_conductores: number
  }

  export type InspeccionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historial_conductores?: boolean | InspeccionesCountOutputTypeCountHistorial_conductoresArgs
  }

  // Custom InputTypes
  /**
   * InspeccionesCountOutputType without action
   */
  export type InspeccionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InspeccionesCountOutputType
     */
    select?: InspeccionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InspeccionesCountOutputType without action
   */
  export type InspeccionesCountOutputTypeCountHistorial_conductoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_conductoresWhereInput
  }


  /**
   * Models
   */

  /**
   * Model inspecciones
   */

  export type AggregateInspecciones = {
    _count: InspeccionesCountAggregateOutputType | null
    _avg: InspeccionesAvgAggregateOutputType | null
    _sum: InspeccionesSumAggregateOutputType | null
    _min: InspeccionesMinAggregateOutputType | null
    _max: InspeccionesMaxAggregateOutputType | null
  }

  export type InspeccionesAvgAggregateOutputType = {
    kilometraje: number | null
    marca_temporal: number | null
    puntaje_total: number | null
  }

  export type InspeccionesSumAggregateOutputType = {
    kilometraje: number | null
    marca_temporal: bigint | null
    puntaje_total: number | null
  }

  export type InspeccionesMinAggregateOutputType = {
    id: string | null
    placa_vehiculo: string | null
    contrato: string | null
    turno: string | null
    conductor_nombre: string | null
    fecha: Date | null
    campo_coordinacion: string | null
    kilometraje: number | null
    marca_temporal: bigint | null
    nivel_riesgo: string | null
    puntaje_total: number | null
    observaciones: string | null
    gps: boolean | null
    pito: boolean | null
    freno: boolean | null
    frenos: boolean | null
    correas: boolean | null
    espejos: boolean | null
    parqueo: boolean | null
    puertas: boolean | null
    vidrios: boolean | null
    baterias: boolean | null
    tapiceria: boolean | null
    cinturones: boolean | null
    orden_aseo: boolean | null
    suspension: boolean | null
    altas_bajas: boolean | null
    horas_sueno: boolean | null
    indicadores: boolean | null
    tapa_tanque: boolean | null
    aceite_motor: boolean | null
    libre_fatiga: boolean | null
    direccionales: boolean | null
    documentacion: boolean | null
    fluido_frenos: boolean | null
    kit_ambiental: boolean | null
    limpia_brisas: boolean | null
    espejos_estado: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InspeccionesMaxAggregateOutputType = {
    id: string | null
    placa_vehiculo: string | null
    contrato: string | null
    turno: string | null
    conductor_nombre: string | null
    fecha: Date | null
    campo_coordinacion: string | null
    kilometraje: number | null
    marca_temporal: bigint | null
    nivel_riesgo: string | null
    puntaje_total: number | null
    observaciones: string | null
    gps: boolean | null
    pito: boolean | null
    freno: boolean | null
    frenos: boolean | null
    correas: boolean | null
    espejos: boolean | null
    parqueo: boolean | null
    puertas: boolean | null
    vidrios: boolean | null
    baterias: boolean | null
    tapiceria: boolean | null
    cinturones: boolean | null
    orden_aseo: boolean | null
    suspension: boolean | null
    altas_bajas: boolean | null
    horas_sueno: boolean | null
    indicadores: boolean | null
    tapa_tanque: boolean | null
    aceite_motor: boolean | null
    libre_fatiga: boolean | null
    direccionales: boolean | null
    documentacion: boolean | null
    fluido_frenos: boolean | null
    kit_ambiental: boolean | null
    limpia_brisas: boolean | null
    espejos_estado: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type InspeccionesCountAggregateOutputType = {
    id: number
    placa_vehiculo: number
    contrato: number
    turno: number
    conductor_nombre: number
    fecha: number
    campo_coordinacion: number
    kilometraje: number
    marca_temporal: number
    nivel_riesgo: number
    puntaje_total: number
    observaciones: number
    gps: number
    pito: number
    freno: number
    frenos: number
    correas: number
    espejos: number
    parqueo: number
    puertas: number
    vidrios: number
    baterias: number
    tapiceria: number
    cinturones: number
    orden_aseo: number
    suspension: number
    altas_bajas: number
    horas_sueno: number
    indicadores: number
    tapa_tanque: number
    aceite_motor: number
    libre_fatiga: number
    direccionales: number
    documentacion: number
    fluido_frenos: number
    kit_ambiental: number
    limpia_brisas: number
    espejos_estado: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type InspeccionesAvgAggregateInputType = {
    kilometraje?: true
    marca_temporal?: true
    puntaje_total?: true
  }

  export type InspeccionesSumAggregateInputType = {
    kilometraje?: true
    marca_temporal?: true
    puntaje_total?: true
  }

  export type InspeccionesMinAggregateInputType = {
    id?: true
    placa_vehiculo?: true
    contrato?: true
    turno?: true
    conductor_nombre?: true
    fecha?: true
    campo_coordinacion?: true
    kilometraje?: true
    marca_temporal?: true
    nivel_riesgo?: true
    puntaje_total?: true
    observaciones?: true
    gps?: true
    pito?: true
    freno?: true
    frenos?: true
    correas?: true
    espejos?: true
    parqueo?: true
    puertas?: true
    vidrios?: true
    baterias?: true
    tapiceria?: true
    cinturones?: true
    orden_aseo?: true
    suspension?: true
    altas_bajas?: true
    horas_sueno?: true
    indicadores?: true
    tapa_tanque?: true
    aceite_motor?: true
    libre_fatiga?: true
    direccionales?: true
    documentacion?: true
    fluido_frenos?: true
    kit_ambiental?: true
    limpia_brisas?: true
    espejos_estado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InspeccionesMaxAggregateInputType = {
    id?: true
    placa_vehiculo?: true
    contrato?: true
    turno?: true
    conductor_nombre?: true
    fecha?: true
    campo_coordinacion?: true
    kilometraje?: true
    marca_temporal?: true
    nivel_riesgo?: true
    puntaje_total?: true
    observaciones?: true
    gps?: true
    pito?: true
    freno?: true
    frenos?: true
    correas?: true
    espejos?: true
    parqueo?: true
    puertas?: true
    vidrios?: true
    baterias?: true
    tapiceria?: true
    cinturones?: true
    orden_aseo?: true
    suspension?: true
    altas_bajas?: true
    horas_sueno?: true
    indicadores?: true
    tapa_tanque?: true
    aceite_motor?: true
    libre_fatiga?: true
    direccionales?: true
    documentacion?: true
    fluido_frenos?: true
    kit_ambiental?: true
    limpia_brisas?: true
    espejos_estado?: true
    createdAt?: true
    updatedAt?: true
  }

  export type InspeccionesCountAggregateInputType = {
    id?: true
    placa_vehiculo?: true
    contrato?: true
    turno?: true
    conductor_nombre?: true
    fecha?: true
    campo_coordinacion?: true
    kilometraje?: true
    marca_temporal?: true
    nivel_riesgo?: true
    puntaje_total?: true
    observaciones?: true
    gps?: true
    pito?: true
    freno?: true
    frenos?: true
    correas?: true
    espejos?: true
    parqueo?: true
    puertas?: true
    vidrios?: true
    baterias?: true
    tapiceria?: true
    cinturones?: true
    orden_aseo?: true
    suspension?: true
    altas_bajas?: true
    horas_sueno?: true
    indicadores?: true
    tapa_tanque?: true
    aceite_motor?: true
    libre_fatiga?: true
    direccionales?: true
    documentacion?: true
    fluido_frenos?: true
    kit_ambiental?: true
    limpia_brisas?: true
    espejos_estado?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type InspeccionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inspecciones to aggregate.
     */
    where?: inspeccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inspecciones to fetch.
     */
    orderBy?: inspeccionesOrderByWithRelationInput | inspeccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: inspeccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inspecciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inspecciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned inspecciones
    **/
    _count?: true | InspeccionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InspeccionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InspeccionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InspeccionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InspeccionesMaxAggregateInputType
  }

  export type GetInspeccionesAggregateType<T extends InspeccionesAggregateArgs> = {
        [P in keyof T & keyof AggregateInspecciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInspecciones[P]>
      : GetScalarType<T[P], AggregateInspecciones[P]>
  }




  export type inspeccionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: inspeccionesWhereInput
    orderBy?: inspeccionesOrderByWithAggregationInput | inspeccionesOrderByWithAggregationInput[]
    by: InspeccionesScalarFieldEnum[] | InspeccionesScalarFieldEnum
    having?: inspeccionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InspeccionesCountAggregateInputType | true
    _avg?: InspeccionesAvgAggregateInputType
    _sum?: InspeccionesSumAggregateInputType
    _min?: InspeccionesMinAggregateInputType
    _max?: InspeccionesMaxAggregateInputType
  }

  export type InspeccionesGroupByOutputType = {
    id: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre: string
    fecha: Date
    campo_coordinacion: string
    kilometraje: number
    marca_temporal: bigint
    nivel_riesgo: string
    puntaje_total: number
    observaciones: string
    gps: boolean
    pito: boolean
    freno: boolean
    frenos: boolean
    correas: boolean
    espejos: boolean
    parqueo: boolean
    puertas: boolean
    vidrios: boolean
    baterias: boolean
    tapiceria: boolean
    cinturones: boolean
    orden_aseo: boolean
    suspension: boolean
    altas_bajas: boolean
    horas_sueno: boolean
    indicadores: boolean
    tapa_tanque: boolean
    aceite_motor: boolean
    libre_fatiga: boolean
    direccionales: boolean
    documentacion: boolean
    fluido_frenos: boolean
    kit_ambiental: boolean
    limpia_brisas: boolean
    espejos_estado: string
    createdAt: Date
    updatedAt: Date
    _count: InspeccionesCountAggregateOutputType | null
    _avg: InspeccionesAvgAggregateOutputType | null
    _sum: InspeccionesSumAggregateOutputType | null
    _min: InspeccionesMinAggregateOutputType | null
    _max: InspeccionesMaxAggregateOutputType | null
  }

  type GetInspeccionesGroupByPayload<T extends inspeccionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InspeccionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InspeccionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InspeccionesGroupByOutputType[P]>
            : GetScalarType<T[P], InspeccionesGroupByOutputType[P]>
        }
      >
    >


  export type inspeccionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placa_vehiculo?: boolean
    contrato?: boolean
    turno?: boolean
    conductor_nombre?: boolean
    fecha?: boolean
    campo_coordinacion?: boolean
    kilometraje?: boolean
    marca_temporal?: boolean
    nivel_riesgo?: boolean
    puntaje_total?: boolean
    observaciones?: boolean
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    historial_conductores?: boolean | inspecciones$historial_conductoresArgs<ExtArgs>
    _count?: boolean | InspeccionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["inspecciones"]>

  export type inspeccionesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    placa_vehiculo?: boolean
    contrato?: boolean
    turno?: boolean
    conductor_nombre?: boolean
    fecha?: boolean
    campo_coordinacion?: boolean
    kilometraje?: boolean
    marca_temporal?: boolean
    nivel_riesgo?: boolean
    puntaje_total?: boolean
    observaciones?: boolean
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["inspecciones"]>

  export type inspeccionesSelectScalar = {
    id?: boolean
    placa_vehiculo?: boolean
    contrato?: boolean
    turno?: boolean
    conductor_nombre?: boolean
    fecha?: boolean
    campo_coordinacion?: boolean
    kilometraje?: boolean
    marca_temporal?: boolean
    nivel_riesgo?: boolean
    puntaje_total?: boolean
    observaciones?: boolean
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type inspeccionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    historial_conductores?: boolean | inspecciones$historial_conductoresArgs<ExtArgs>
    _count?: boolean | InspeccionesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type inspeccionesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $inspeccionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "inspecciones"
    objects: {
      historial_conductores: Prisma.$historial_conductoresPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      placa_vehiculo: string
      contrato: string
      turno: string
      conductor_nombre: string
      fecha: Date
      campo_coordinacion: string
      kilometraje: number
      marca_temporal: bigint
      nivel_riesgo: string
      puntaje_total: number
      observaciones: string
      gps: boolean
      pito: boolean
      freno: boolean
      frenos: boolean
      correas: boolean
      espejos: boolean
      parqueo: boolean
      puertas: boolean
      vidrios: boolean
      baterias: boolean
      tapiceria: boolean
      cinturones: boolean
      orden_aseo: boolean
      suspension: boolean
      altas_bajas: boolean
      horas_sueno: boolean
      indicadores: boolean
      tapa_tanque: boolean
      aceite_motor: boolean
      libre_fatiga: boolean
      direccionales: boolean
      documentacion: boolean
      fluido_frenos: boolean
      kit_ambiental: boolean
      limpia_brisas: boolean
      espejos_estado: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["inspecciones"]>
    composites: {}
  }

  type inspeccionesGetPayload<S extends boolean | null | undefined | inspeccionesDefaultArgs> = $Result.GetResult<Prisma.$inspeccionesPayload, S>

  type inspeccionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<inspeccionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: InspeccionesCountAggregateInputType | true
    }

  export interface inspeccionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['inspecciones'], meta: { name: 'inspecciones' } }
    /**
     * Find zero or one Inspecciones that matches the filter.
     * @param {inspeccionesFindUniqueArgs} args - Arguments to find a Inspecciones
     * @example
     * // Get one Inspecciones
     * const inspecciones = await prisma.inspecciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends inspeccionesFindUniqueArgs>(args: SelectSubset<T, inspeccionesFindUniqueArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Inspecciones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {inspeccionesFindUniqueOrThrowArgs} args - Arguments to find a Inspecciones
     * @example
     * // Get one Inspecciones
     * const inspecciones = await prisma.inspecciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends inspeccionesFindUniqueOrThrowArgs>(args: SelectSubset<T, inspeccionesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Inspecciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesFindFirstArgs} args - Arguments to find a Inspecciones
     * @example
     * // Get one Inspecciones
     * const inspecciones = await prisma.inspecciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends inspeccionesFindFirstArgs>(args?: SelectSubset<T, inspeccionesFindFirstArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Inspecciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesFindFirstOrThrowArgs} args - Arguments to find a Inspecciones
     * @example
     * // Get one Inspecciones
     * const inspecciones = await prisma.inspecciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends inspeccionesFindFirstOrThrowArgs>(args?: SelectSubset<T, inspeccionesFindFirstOrThrowArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Inspecciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Inspecciones
     * const inspecciones = await prisma.inspecciones.findMany()
     * 
     * // Get first 10 Inspecciones
     * const inspecciones = await prisma.inspecciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const inspeccionesWithIdOnly = await prisma.inspecciones.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends inspeccionesFindManyArgs>(args?: SelectSubset<T, inspeccionesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Inspecciones.
     * @param {inspeccionesCreateArgs} args - Arguments to create a Inspecciones.
     * @example
     * // Create one Inspecciones
     * const Inspecciones = await prisma.inspecciones.create({
     *   data: {
     *     // ... data to create a Inspecciones
     *   }
     * })
     * 
     */
    create<T extends inspeccionesCreateArgs>(args: SelectSubset<T, inspeccionesCreateArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Inspecciones.
     * @param {inspeccionesCreateManyArgs} args - Arguments to create many Inspecciones.
     * @example
     * // Create many Inspecciones
     * const inspecciones = await prisma.inspecciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends inspeccionesCreateManyArgs>(args?: SelectSubset<T, inspeccionesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Inspecciones and returns the data saved in the database.
     * @param {inspeccionesCreateManyAndReturnArgs} args - Arguments to create many Inspecciones.
     * @example
     * // Create many Inspecciones
     * const inspecciones = await prisma.inspecciones.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Inspecciones and only return the `id`
     * const inspeccionesWithIdOnly = await prisma.inspecciones.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends inspeccionesCreateManyAndReturnArgs>(args?: SelectSubset<T, inspeccionesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Inspecciones.
     * @param {inspeccionesDeleteArgs} args - Arguments to delete one Inspecciones.
     * @example
     * // Delete one Inspecciones
     * const Inspecciones = await prisma.inspecciones.delete({
     *   where: {
     *     // ... filter to delete one Inspecciones
     *   }
     * })
     * 
     */
    delete<T extends inspeccionesDeleteArgs>(args: SelectSubset<T, inspeccionesDeleteArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Inspecciones.
     * @param {inspeccionesUpdateArgs} args - Arguments to update one Inspecciones.
     * @example
     * // Update one Inspecciones
     * const inspecciones = await prisma.inspecciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends inspeccionesUpdateArgs>(args: SelectSubset<T, inspeccionesUpdateArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Inspecciones.
     * @param {inspeccionesDeleteManyArgs} args - Arguments to filter Inspecciones to delete.
     * @example
     * // Delete a few Inspecciones
     * const { count } = await prisma.inspecciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends inspeccionesDeleteManyArgs>(args?: SelectSubset<T, inspeccionesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Inspecciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Inspecciones
     * const inspecciones = await prisma.inspecciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends inspeccionesUpdateManyArgs>(args: SelectSubset<T, inspeccionesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Inspecciones.
     * @param {inspeccionesUpsertArgs} args - Arguments to update or create a Inspecciones.
     * @example
     * // Update or create a Inspecciones
     * const inspecciones = await prisma.inspecciones.upsert({
     *   create: {
     *     // ... data to create a Inspecciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Inspecciones we want to update
     *   }
     * })
     */
    upsert<T extends inspeccionesUpsertArgs>(args: SelectSubset<T, inspeccionesUpsertArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Inspecciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesCountArgs} args - Arguments to filter Inspecciones to count.
     * @example
     * // Count the number of Inspecciones
     * const count = await prisma.inspecciones.count({
     *   where: {
     *     // ... the filter for the Inspecciones we want to count
     *   }
     * })
    **/
    count<T extends inspeccionesCountArgs>(
      args?: Subset<T, inspeccionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InspeccionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Inspecciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InspeccionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InspeccionesAggregateArgs>(args: Subset<T, InspeccionesAggregateArgs>): Prisma.PrismaPromise<GetInspeccionesAggregateType<T>>

    /**
     * Group by Inspecciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {inspeccionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends inspeccionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: inspeccionesGroupByArgs['orderBy'] }
        : { orderBy?: inspeccionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, inspeccionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInspeccionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the inspecciones model
   */
  readonly fields: inspeccionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for inspecciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__inspeccionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    historial_conductores<T extends inspecciones$historial_conductoresArgs<ExtArgs> = {}>(args?: Subset<T, inspecciones$historial_conductoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the inspecciones model
   */ 
  interface inspeccionesFieldRefs {
    readonly id: FieldRef<"inspecciones", 'String'>
    readonly placa_vehiculo: FieldRef<"inspecciones", 'String'>
    readonly contrato: FieldRef<"inspecciones", 'String'>
    readonly turno: FieldRef<"inspecciones", 'String'>
    readonly conductor_nombre: FieldRef<"inspecciones", 'String'>
    readonly fecha: FieldRef<"inspecciones", 'DateTime'>
    readonly campo_coordinacion: FieldRef<"inspecciones", 'String'>
    readonly kilometraje: FieldRef<"inspecciones", 'Int'>
    readonly marca_temporal: FieldRef<"inspecciones", 'BigInt'>
    readonly nivel_riesgo: FieldRef<"inspecciones", 'String'>
    readonly puntaje_total: FieldRef<"inspecciones", 'Int'>
    readonly observaciones: FieldRef<"inspecciones", 'String'>
    readonly gps: FieldRef<"inspecciones", 'Boolean'>
    readonly pito: FieldRef<"inspecciones", 'Boolean'>
    readonly freno: FieldRef<"inspecciones", 'Boolean'>
    readonly frenos: FieldRef<"inspecciones", 'Boolean'>
    readonly correas: FieldRef<"inspecciones", 'Boolean'>
    readonly espejos: FieldRef<"inspecciones", 'Boolean'>
    readonly parqueo: FieldRef<"inspecciones", 'Boolean'>
    readonly puertas: FieldRef<"inspecciones", 'Boolean'>
    readonly vidrios: FieldRef<"inspecciones", 'Boolean'>
    readonly baterias: FieldRef<"inspecciones", 'Boolean'>
    readonly tapiceria: FieldRef<"inspecciones", 'Boolean'>
    readonly cinturones: FieldRef<"inspecciones", 'Boolean'>
    readonly orden_aseo: FieldRef<"inspecciones", 'Boolean'>
    readonly suspension: FieldRef<"inspecciones", 'Boolean'>
    readonly altas_bajas: FieldRef<"inspecciones", 'Boolean'>
    readonly horas_sueno: FieldRef<"inspecciones", 'Boolean'>
    readonly indicadores: FieldRef<"inspecciones", 'Boolean'>
    readonly tapa_tanque: FieldRef<"inspecciones", 'Boolean'>
    readonly aceite_motor: FieldRef<"inspecciones", 'Boolean'>
    readonly libre_fatiga: FieldRef<"inspecciones", 'Boolean'>
    readonly direccionales: FieldRef<"inspecciones", 'Boolean'>
    readonly documentacion: FieldRef<"inspecciones", 'Boolean'>
    readonly fluido_frenos: FieldRef<"inspecciones", 'Boolean'>
    readonly kit_ambiental: FieldRef<"inspecciones", 'Boolean'>
    readonly limpia_brisas: FieldRef<"inspecciones", 'Boolean'>
    readonly espejos_estado: FieldRef<"inspecciones", 'String'>
    readonly createdAt: FieldRef<"inspecciones", 'DateTime'>
    readonly updatedAt: FieldRef<"inspecciones", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * inspecciones findUnique
   */
  export type inspeccionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter, which inspecciones to fetch.
     */
    where: inspeccionesWhereUniqueInput
  }

  /**
   * inspecciones findUniqueOrThrow
   */
  export type inspeccionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter, which inspecciones to fetch.
     */
    where: inspeccionesWhereUniqueInput
  }

  /**
   * inspecciones findFirst
   */
  export type inspeccionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter, which inspecciones to fetch.
     */
    where?: inspeccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inspecciones to fetch.
     */
    orderBy?: inspeccionesOrderByWithRelationInput | inspeccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inspecciones.
     */
    cursor?: inspeccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inspecciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inspecciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inspecciones.
     */
    distinct?: InspeccionesScalarFieldEnum | InspeccionesScalarFieldEnum[]
  }

  /**
   * inspecciones findFirstOrThrow
   */
  export type inspeccionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter, which inspecciones to fetch.
     */
    where?: inspeccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inspecciones to fetch.
     */
    orderBy?: inspeccionesOrderByWithRelationInput | inspeccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for inspecciones.
     */
    cursor?: inspeccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inspecciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inspecciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of inspecciones.
     */
    distinct?: InspeccionesScalarFieldEnum | InspeccionesScalarFieldEnum[]
  }

  /**
   * inspecciones findMany
   */
  export type inspeccionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter, which inspecciones to fetch.
     */
    where?: inspeccionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of inspecciones to fetch.
     */
    orderBy?: inspeccionesOrderByWithRelationInput | inspeccionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing inspecciones.
     */
    cursor?: inspeccionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` inspecciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` inspecciones.
     */
    skip?: number
    distinct?: InspeccionesScalarFieldEnum | InspeccionesScalarFieldEnum[]
  }

  /**
   * inspecciones create
   */
  export type inspeccionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * The data needed to create a inspecciones.
     */
    data: XOR<inspeccionesCreateInput, inspeccionesUncheckedCreateInput>
  }

  /**
   * inspecciones createMany
   */
  export type inspeccionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many inspecciones.
     */
    data: inspeccionesCreateManyInput | inspeccionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inspecciones createManyAndReturn
   */
  export type inspeccionesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many inspecciones.
     */
    data: inspeccionesCreateManyInput | inspeccionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * inspecciones update
   */
  export type inspeccionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * The data needed to update a inspecciones.
     */
    data: XOR<inspeccionesUpdateInput, inspeccionesUncheckedUpdateInput>
    /**
     * Choose, which inspecciones to update.
     */
    where: inspeccionesWhereUniqueInput
  }

  /**
   * inspecciones updateMany
   */
  export type inspeccionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update inspecciones.
     */
    data: XOR<inspeccionesUpdateManyMutationInput, inspeccionesUncheckedUpdateManyInput>
    /**
     * Filter which inspecciones to update
     */
    where?: inspeccionesWhereInput
  }

  /**
   * inspecciones upsert
   */
  export type inspeccionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * The filter to search for the inspecciones to update in case it exists.
     */
    where: inspeccionesWhereUniqueInput
    /**
     * In case the inspecciones found by the `where` argument doesn't exist, create a new inspecciones with this data.
     */
    create: XOR<inspeccionesCreateInput, inspeccionesUncheckedCreateInput>
    /**
     * In case the inspecciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<inspeccionesUpdateInput, inspeccionesUncheckedUpdateInput>
  }

  /**
   * inspecciones delete
   */
  export type inspeccionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
    /**
     * Filter which inspecciones to delete.
     */
    where: inspeccionesWhereUniqueInput
  }

  /**
   * inspecciones deleteMany
   */
  export type inspeccionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which inspecciones to delete
     */
    where?: inspeccionesWhereInput
  }

  /**
   * inspecciones.historial_conductores
   */
  export type inspecciones$historial_conductoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    where?: historial_conductoresWhereInput
    orderBy?: historial_conductoresOrderByWithRelationInput | historial_conductoresOrderByWithRelationInput[]
    cursor?: historial_conductoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Historial_conductoresScalarFieldEnum | Historial_conductoresScalarFieldEnum[]
  }

  /**
   * inspecciones without action
   */
  export type inspeccionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the inspecciones
     */
    select?: inspeccionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: inspeccionesInclude<ExtArgs> | null
  }


  /**
   * Model archivos_procesados
   */

  export type AggregateArchivos_procesados = {
    _count: Archivos_procesadosCountAggregateOutputType | null
    _avg: Archivos_procesadosAvgAggregateOutputType | null
    _sum: Archivos_procesadosSumAggregateOutputType | null
    _min: Archivos_procesadosMinAggregateOutputType | null
    _max: Archivos_procesadosMaxAggregateOutputType | null
  }

  export type Archivos_procesadosAvgAggregateOutputType = {
    tamano_archivo: number | null
    total_registros: number | null
    registros_insertados: number | null
    registros_duplicados: number | null
    registros_error: number | null
    ano_detectado: number | null
    tiempo_procesamiento: number | null
  }

  export type Archivos_procesadosSumAggregateOutputType = {
    tamano_archivo: number | null
    total_registros: number | null
    registros_insertados: number | null
    registros_duplicados: number | null
    registros_error: number | null
    ano_detectado: number | null
    tiempo_procesamiento: number | null
  }

  export type Archivos_procesadosMinAggregateOutputType = {
    id: string | null
    nombre_archivo: string | null
    hash_archivo: string | null
    tamano_archivo: number | null
    total_registros: number | null
    registros_insertados: number | null
    registros_duplicados: number | null
    registros_error: number | null
    ano_detectado: number | null
    tiempo_procesamiento: number | null
    fecha_procesamiento: Date | null
    usuario_carga: string | null
    estado: string | null
  }

  export type Archivos_procesadosMaxAggregateOutputType = {
    id: string | null
    nombre_archivo: string | null
    hash_archivo: string | null
    tamano_archivo: number | null
    total_registros: number | null
    registros_insertados: number | null
    registros_duplicados: number | null
    registros_error: number | null
    ano_detectado: number | null
    tiempo_procesamiento: number | null
    fecha_procesamiento: Date | null
    usuario_carga: string | null
    estado: string | null
  }

  export type Archivos_procesadosCountAggregateOutputType = {
    id: number
    nombre_archivo: number
    hash_archivo: number
    tamano_archivo: number
    total_registros: number
    registros_insertados: number
    registros_duplicados: number
    registros_error: number
    ano_detectado: number
    tiempo_procesamiento: number
    errores_validacion: number
    advertencias: number
    fecha_procesamiento: number
    usuario_carga: number
    estado: number
    _all: number
  }


  export type Archivos_procesadosAvgAggregateInputType = {
    tamano_archivo?: true
    total_registros?: true
    registros_insertados?: true
    registros_duplicados?: true
    registros_error?: true
    ano_detectado?: true
    tiempo_procesamiento?: true
  }

  export type Archivos_procesadosSumAggregateInputType = {
    tamano_archivo?: true
    total_registros?: true
    registros_insertados?: true
    registros_duplicados?: true
    registros_error?: true
    ano_detectado?: true
    tiempo_procesamiento?: true
  }

  export type Archivos_procesadosMinAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    tamano_archivo?: true
    total_registros?: true
    registros_insertados?: true
    registros_duplicados?: true
    registros_error?: true
    ano_detectado?: true
    tiempo_procesamiento?: true
    fecha_procesamiento?: true
    usuario_carga?: true
    estado?: true
  }

  export type Archivos_procesadosMaxAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    tamano_archivo?: true
    total_registros?: true
    registros_insertados?: true
    registros_duplicados?: true
    registros_error?: true
    ano_detectado?: true
    tiempo_procesamiento?: true
    fecha_procesamiento?: true
    usuario_carga?: true
    estado?: true
  }

  export type Archivos_procesadosCountAggregateInputType = {
    id?: true
    nombre_archivo?: true
    hash_archivo?: true
    tamano_archivo?: true
    total_registros?: true
    registros_insertados?: true
    registros_duplicados?: true
    registros_error?: true
    ano_detectado?: true
    tiempo_procesamiento?: true
    errores_validacion?: true
    advertencias?: true
    fecha_procesamiento?: true
    usuario_carga?: true
    estado?: true
    _all?: true
  }

  export type Archivos_procesadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which archivos_procesados to aggregate.
     */
    where?: archivos_procesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of archivos_procesados to fetch.
     */
    orderBy?: archivos_procesadosOrderByWithRelationInput | archivos_procesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: archivos_procesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` archivos_procesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` archivos_procesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned archivos_procesados
    **/
    _count?: true | Archivos_procesadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Archivos_procesadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Archivos_procesadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Archivos_procesadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Archivos_procesadosMaxAggregateInputType
  }

  export type GetArchivos_procesadosAggregateType<T extends Archivos_procesadosAggregateArgs> = {
        [P in keyof T & keyof AggregateArchivos_procesados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArchivos_procesados[P]>
      : GetScalarType<T[P], AggregateArchivos_procesados[P]>
  }




  export type archivos_procesadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: archivos_procesadosWhereInput
    orderBy?: archivos_procesadosOrderByWithAggregationInput | archivos_procesadosOrderByWithAggregationInput[]
    by: Archivos_procesadosScalarFieldEnum[] | Archivos_procesadosScalarFieldEnum
    having?: archivos_procesadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Archivos_procesadosCountAggregateInputType | true
    _avg?: Archivos_procesadosAvgAggregateInputType
    _sum?: Archivos_procesadosSumAggregateInputType
    _min?: Archivos_procesadosMinAggregateInputType
    _max?: Archivos_procesadosMaxAggregateInputType
  }

  export type Archivos_procesadosGroupByOutputType = {
    id: string
    nombre_archivo: string
    hash_archivo: string
    tamano_archivo: number | null
    total_registros: number
    registros_insertados: number
    registros_duplicados: number
    registros_error: number
    ano_detectado: number | null
    tiempo_procesamiento: number | null
    errores_validacion: JsonValue | null
    advertencias: JsonValue | null
    fecha_procesamiento: Date
    usuario_carga: string | null
    estado: string
    _count: Archivos_procesadosCountAggregateOutputType | null
    _avg: Archivos_procesadosAvgAggregateOutputType | null
    _sum: Archivos_procesadosSumAggregateOutputType | null
    _min: Archivos_procesadosMinAggregateOutputType | null
    _max: Archivos_procesadosMaxAggregateOutputType | null
  }

  type GetArchivos_procesadosGroupByPayload<T extends archivos_procesadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Archivos_procesadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Archivos_procesadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Archivos_procesadosGroupByOutputType[P]>
            : GetScalarType<T[P], Archivos_procesadosGroupByOutputType[P]>
        }
      >
    >


  export type archivos_procesadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    tamano_archivo?: boolean
    total_registros?: boolean
    registros_insertados?: boolean
    registros_duplicados?: boolean
    registros_error?: boolean
    ano_detectado?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
    estado?: boolean
  }, ExtArgs["result"]["archivos_procesados"]>

  export type archivos_procesadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    tamano_archivo?: boolean
    total_registros?: boolean
    registros_insertados?: boolean
    registros_duplicados?: boolean
    registros_error?: boolean
    ano_detectado?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
    estado?: boolean
  }, ExtArgs["result"]["archivos_procesados"]>

  export type archivos_procesadosSelectScalar = {
    id?: boolean
    nombre_archivo?: boolean
    hash_archivo?: boolean
    tamano_archivo?: boolean
    total_registros?: boolean
    registros_insertados?: boolean
    registros_duplicados?: boolean
    registros_error?: boolean
    ano_detectado?: boolean
    tiempo_procesamiento?: boolean
    errores_validacion?: boolean
    advertencias?: boolean
    fecha_procesamiento?: boolean
    usuario_carga?: boolean
    estado?: boolean
  }


  export type $archivos_procesadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "archivos_procesados"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nombre_archivo: string
      hash_archivo: string
      tamano_archivo: number | null
      total_registros: number
      registros_insertados: number
      registros_duplicados: number
      registros_error: number
      ano_detectado: number | null
      tiempo_procesamiento: number | null
      errores_validacion: Prisma.JsonValue | null
      advertencias: Prisma.JsonValue | null
      fecha_procesamiento: Date
      usuario_carga: string | null
      estado: string
    }, ExtArgs["result"]["archivos_procesados"]>
    composites: {}
  }

  type archivos_procesadosGetPayload<S extends boolean | null | undefined | archivos_procesadosDefaultArgs> = $Result.GetResult<Prisma.$archivos_procesadosPayload, S>

  type archivos_procesadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<archivos_procesadosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Archivos_procesadosCountAggregateInputType | true
    }

  export interface archivos_procesadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['archivos_procesados'], meta: { name: 'archivos_procesados' } }
    /**
     * Find zero or one Archivos_procesados that matches the filter.
     * @param {archivos_procesadosFindUniqueArgs} args - Arguments to find a Archivos_procesados
     * @example
     * // Get one Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends archivos_procesadosFindUniqueArgs>(args: SelectSubset<T, archivos_procesadosFindUniqueArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Archivos_procesados that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {archivos_procesadosFindUniqueOrThrowArgs} args - Arguments to find a Archivos_procesados
     * @example
     * // Get one Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends archivos_procesadosFindUniqueOrThrowArgs>(args: SelectSubset<T, archivos_procesadosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Archivos_procesados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosFindFirstArgs} args - Arguments to find a Archivos_procesados
     * @example
     * // Get one Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends archivos_procesadosFindFirstArgs>(args?: SelectSubset<T, archivos_procesadosFindFirstArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Archivos_procesados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosFindFirstOrThrowArgs} args - Arguments to find a Archivos_procesados
     * @example
     * // Get one Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends archivos_procesadosFindFirstOrThrowArgs>(args?: SelectSubset<T, archivos_procesadosFindFirstOrThrowArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Archivos_procesados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findMany()
     * 
     * // Get first 10 Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const archivos_procesadosWithIdOnly = await prisma.archivos_procesados.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends archivos_procesadosFindManyArgs>(args?: SelectSubset<T, archivos_procesadosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Archivos_procesados.
     * @param {archivos_procesadosCreateArgs} args - Arguments to create a Archivos_procesados.
     * @example
     * // Create one Archivos_procesados
     * const Archivos_procesados = await prisma.archivos_procesados.create({
     *   data: {
     *     // ... data to create a Archivos_procesados
     *   }
     * })
     * 
     */
    create<T extends archivos_procesadosCreateArgs>(args: SelectSubset<T, archivos_procesadosCreateArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Archivos_procesados.
     * @param {archivos_procesadosCreateManyArgs} args - Arguments to create many Archivos_procesados.
     * @example
     * // Create many Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends archivos_procesadosCreateManyArgs>(args?: SelectSubset<T, archivos_procesadosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Archivos_procesados and returns the data saved in the database.
     * @param {archivos_procesadosCreateManyAndReturnArgs} args - Arguments to create many Archivos_procesados.
     * @example
     * // Create many Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Archivos_procesados and only return the `id`
     * const archivos_procesadosWithIdOnly = await prisma.archivos_procesados.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends archivos_procesadosCreateManyAndReturnArgs>(args?: SelectSubset<T, archivos_procesadosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Archivos_procesados.
     * @param {archivos_procesadosDeleteArgs} args - Arguments to delete one Archivos_procesados.
     * @example
     * // Delete one Archivos_procesados
     * const Archivos_procesados = await prisma.archivos_procesados.delete({
     *   where: {
     *     // ... filter to delete one Archivos_procesados
     *   }
     * })
     * 
     */
    delete<T extends archivos_procesadosDeleteArgs>(args: SelectSubset<T, archivos_procesadosDeleteArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Archivos_procesados.
     * @param {archivos_procesadosUpdateArgs} args - Arguments to update one Archivos_procesados.
     * @example
     * // Update one Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends archivos_procesadosUpdateArgs>(args: SelectSubset<T, archivos_procesadosUpdateArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Archivos_procesados.
     * @param {archivos_procesadosDeleteManyArgs} args - Arguments to filter Archivos_procesados to delete.
     * @example
     * // Delete a few Archivos_procesados
     * const { count } = await prisma.archivos_procesados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends archivos_procesadosDeleteManyArgs>(args?: SelectSubset<T, archivos_procesadosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Archivos_procesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends archivos_procesadosUpdateManyArgs>(args: SelectSubset<T, archivos_procesadosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Archivos_procesados.
     * @param {archivos_procesadosUpsertArgs} args - Arguments to update or create a Archivos_procesados.
     * @example
     * // Update or create a Archivos_procesados
     * const archivos_procesados = await prisma.archivos_procesados.upsert({
     *   create: {
     *     // ... data to create a Archivos_procesados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Archivos_procesados we want to update
     *   }
     * })
     */
    upsert<T extends archivos_procesadosUpsertArgs>(args: SelectSubset<T, archivos_procesadosUpsertArgs<ExtArgs>>): Prisma__archivos_procesadosClient<$Result.GetResult<Prisma.$archivos_procesadosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Archivos_procesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosCountArgs} args - Arguments to filter Archivos_procesados to count.
     * @example
     * // Count the number of Archivos_procesados
     * const count = await prisma.archivos_procesados.count({
     *   where: {
     *     // ... the filter for the Archivos_procesados we want to count
     *   }
     * })
    **/
    count<T extends archivos_procesadosCountArgs>(
      args?: Subset<T, archivos_procesadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Archivos_procesadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Archivos_procesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Archivos_procesadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Archivos_procesadosAggregateArgs>(args: Subset<T, Archivos_procesadosAggregateArgs>): Prisma.PrismaPromise<GetArchivos_procesadosAggregateType<T>>

    /**
     * Group by Archivos_procesados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {archivos_procesadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends archivos_procesadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: archivos_procesadosGroupByArgs['orderBy'] }
        : { orderBy?: archivos_procesadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, archivos_procesadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArchivos_procesadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the archivos_procesados model
   */
  readonly fields: archivos_procesadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for archivos_procesados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__archivos_procesadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the archivos_procesados model
   */ 
  interface archivos_procesadosFieldRefs {
    readonly id: FieldRef<"archivos_procesados", 'String'>
    readonly nombre_archivo: FieldRef<"archivos_procesados", 'String'>
    readonly hash_archivo: FieldRef<"archivos_procesados", 'String'>
    readonly tamano_archivo: FieldRef<"archivos_procesados", 'Int'>
    readonly total_registros: FieldRef<"archivos_procesados", 'Int'>
    readonly registros_insertados: FieldRef<"archivos_procesados", 'Int'>
    readonly registros_duplicados: FieldRef<"archivos_procesados", 'Int'>
    readonly registros_error: FieldRef<"archivos_procesados", 'Int'>
    readonly ano_detectado: FieldRef<"archivos_procesados", 'Int'>
    readonly tiempo_procesamiento: FieldRef<"archivos_procesados", 'Float'>
    readonly errores_validacion: FieldRef<"archivos_procesados", 'Json'>
    readonly advertencias: FieldRef<"archivos_procesados", 'Json'>
    readonly fecha_procesamiento: FieldRef<"archivos_procesados", 'DateTime'>
    readonly usuario_carga: FieldRef<"archivos_procesados", 'String'>
    readonly estado: FieldRef<"archivos_procesados", 'String'>
  }
    

  // Custom InputTypes
  /**
   * archivos_procesados findUnique
   */
  export type archivos_procesadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter, which archivos_procesados to fetch.
     */
    where: archivos_procesadosWhereUniqueInput
  }

  /**
   * archivos_procesados findUniqueOrThrow
   */
  export type archivos_procesadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter, which archivos_procesados to fetch.
     */
    where: archivos_procesadosWhereUniqueInput
  }

  /**
   * archivos_procesados findFirst
   */
  export type archivos_procesadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter, which archivos_procesados to fetch.
     */
    where?: archivos_procesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of archivos_procesados to fetch.
     */
    orderBy?: archivos_procesadosOrderByWithRelationInput | archivos_procesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for archivos_procesados.
     */
    cursor?: archivos_procesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` archivos_procesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` archivos_procesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of archivos_procesados.
     */
    distinct?: Archivos_procesadosScalarFieldEnum | Archivos_procesadosScalarFieldEnum[]
  }

  /**
   * archivos_procesados findFirstOrThrow
   */
  export type archivos_procesadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter, which archivos_procesados to fetch.
     */
    where?: archivos_procesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of archivos_procesados to fetch.
     */
    orderBy?: archivos_procesadosOrderByWithRelationInput | archivos_procesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for archivos_procesados.
     */
    cursor?: archivos_procesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` archivos_procesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` archivos_procesados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of archivos_procesados.
     */
    distinct?: Archivos_procesadosScalarFieldEnum | Archivos_procesadosScalarFieldEnum[]
  }

  /**
   * archivos_procesados findMany
   */
  export type archivos_procesadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter, which archivos_procesados to fetch.
     */
    where?: archivos_procesadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of archivos_procesados to fetch.
     */
    orderBy?: archivos_procesadosOrderByWithRelationInput | archivos_procesadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing archivos_procesados.
     */
    cursor?: archivos_procesadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` archivos_procesados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` archivos_procesados.
     */
    skip?: number
    distinct?: Archivos_procesadosScalarFieldEnum | Archivos_procesadosScalarFieldEnum[]
  }

  /**
   * archivos_procesados create
   */
  export type archivos_procesadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * The data needed to create a archivos_procesados.
     */
    data: XOR<archivos_procesadosCreateInput, archivos_procesadosUncheckedCreateInput>
  }

  /**
   * archivos_procesados createMany
   */
  export type archivos_procesadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many archivos_procesados.
     */
    data: archivos_procesadosCreateManyInput | archivos_procesadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * archivos_procesados createManyAndReturn
   */
  export type archivos_procesadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many archivos_procesados.
     */
    data: archivos_procesadosCreateManyInput | archivos_procesadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * archivos_procesados update
   */
  export type archivos_procesadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * The data needed to update a archivos_procesados.
     */
    data: XOR<archivos_procesadosUpdateInput, archivos_procesadosUncheckedUpdateInput>
    /**
     * Choose, which archivos_procesados to update.
     */
    where: archivos_procesadosWhereUniqueInput
  }

  /**
   * archivos_procesados updateMany
   */
  export type archivos_procesadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update archivos_procesados.
     */
    data: XOR<archivos_procesadosUpdateManyMutationInput, archivos_procesadosUncheckedUpdateManyInput>
    /**
     * Filter which archivos_procesados to update
     */
    where?: archivos_procesadosWhereInput
  }

  /**
   * archivos_procesados upsert
   */
  export type archivos_procesadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * The filter to search for the archivos_procesados to update in case it exists.
     */
    where: archivos_procesadosWhereUniqueInput
    /**
     * In case the archivos_procesados found by the `where` argument doesn't exist, create a new archivos_procesados with this data.
     */
    create: XOR<archivos_procesadosCreateInput, archivos_procesadosUncheckedCreateInput>
    /**
     * In case the archivos_procesados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<archivos_procesadosUpdateInput, archivos_procesadosUncheckedUpdateInput>
  }

  /**
   * archivos_procesados delete
   */
  export type archivos_procesadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
    /**
     * Filter which archivos_procesados to delete.
     */
    where: archivos_procesadosWhereUniqueInput
  }

  /**
   * archivos_procesados deleteMany
   */
  export type archivos_procesadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which archivos_procesados to delete
     */
    where?: archivos_procesadosWhereInput
  }

  /**
   * archivos_procesados without action
   */
  export type archivos_procesadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the archivos_procesados
     */
    select?: archivos_procesadosSelect<ExtArgs> | null
  }


  /**
   * Model historial_conductores
   */

  export type AggregateHistorial_conductores = {
    _count: Historial_conductoresCountAggregateOutputType | null
    _min: Historial_conductoresMinAggregateOutputType | null
    _max: Historial_conductoresMaxAggregateOutputType | null
  }

  export type Historial_conductoresMinAggregateOutputType = {
    id: string | null
    inspeccionId: string | null
  }

  export type Historial_conductoresMaxAggregateOutputType = {
    id: string | null
    inspeccionId: string | null
  }

  export type Historial_conductoresCountAggregateOutputType = {
    id: number
    inspeccionId: number
    _all: number
  }


  export type Historial_conductoresMinAggregateInputType = {
    id?: true
    inspeccionId?: true
  }

  export type Historial_conductoresMaxAggregateInputType = {
    id?: true
    inspeccionId?: true
  }

  export type Historial_conductoresCountAggregateInputType = {
    id?: true
    inspeccionId?: true
    _all?: true
  }

  export type Historial_conductoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_conductores to aggregate.
     */
    where?: historial_conductoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_conductores to fetch.
     */
    orderBy?: historial_conductoresOrderByWithRelationInput | historial_conductoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: historial_conductoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_conductores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_conductores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned historial_conductores
    **/
    _count?: true | Historial_conductoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Historial_conductoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Historial_conductoresMaxAggregateInputType
  }

  export type GetHistorial_conductoresAggregateType<T extends Historial_conductoresAggregateArgs> = {
        [P in keyof T & keyof AggregateHistorial_conductores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHistorial_conductores[P]>
      : GetScalarType<T[P], AggregateHistorial_conductores[P]>
  }




  export type historial_conductoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: historial_conductoresWhereInput
    orderBy?: historial_conductoresOrderByWithAggregationInput | historial_conductoresOrderByWithAggregationInput[]
    by: Historial_conductoresScalarFieldEnum[] | Historial_conductoresScalarFieldEnum
    having?: historial_conductoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Historial_conductoresCountAggregateInputType | true
    _min?: Historial_conductoresMinAggregateInputType
    _max?: Historial_conductoresMaxAggregateInputType
  }

  export type Historial_conductoresGroupByOutputType = {
    id: string
    inspeccionId: string
    _count: Historial_conductoresCountAggregateOutputType | null
    _min: Historial_conductoresMinAggregateOutputType | null
    _max: Historial_conductoresMaxAggregateOutputType | null
  }

  type GetHistorial_conductoresGroupByPayload<T extends historial_conductoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Historial_conductoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Historial_conductoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Historial_conductoresGroupByOutputType[P]>
            : GetScalarType<T[P], Historial_conductoresGroupByOutputType[P]>
        }
      >
    >


  export type historial_conductoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inspeccionId?: boolean
    inspeccion?: boolean | inspeccionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_conductores"]>

  export type historial_conductoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    inspeccionId?: boolean
    inspeccion?: boolean | inspeccionesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["historial_conductores"]>

  export type historial_conductoresSelectScalar = {
    id?: boolean
    inspeccionId?: boolean
  }

  export type historial_conductoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inspeccion?: boolean | inspeccionesDefaultArgs<ExtArgs>
  }
  export type historial_conductoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    inspeccion?: boolean | inspeccionesDefaultArgs<ExtArgs>
  }

  export type $historial_conductoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "historial_conductores"
    objects: {
      inspeccion: Prisma.$inspeccionesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      inspeccionId: string
    }, ExtArgs["result"]["historial_conductores"]>
    composites: {}
  }

  type historial_conductoresGetPayload<S extends boolean | null | undefined | historial_conductoresDefaultArgs> = $Result.GetResult<Prisma.$historial_conductoresPayload, S>

  type historial_conductoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<historial_conductoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Historial_conductoresCountAggregateInputType | true
    }

  export interface historial_conductoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['historial_conductores'], meta: { name: 'historial_conductores' } }
    /**
     * Find zero or one Historial_conductores that matches the filter.
     * @param {historial_conductoresFindUniqueArgs} args - Arguments to find a Historial_conductores
     * @example
     * // Get one Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends historial_conductoresFindUniqueArgs>(args: SelectSubset<T, historial_conductoresFindUniqueArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Historial_conductores that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {historial_conductoresFindUniqueOrThrowArgs} args - Arguments to find a Historial_conductores
     * @example
     * // Get one Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends historial_conductoresFindUniqueOrThrowArgs>(args: SelectSubset<T, historial_conductoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Historial_conductores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresFindFirstArgs} args - Arguments to find a Historial_conductores
     * @example
     * // Get one Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends historial_conductoresFindFirstArgs>(args?: SelectSubset<T, historial_conductoresFindFirstArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Historial_conductores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresFindFirstOrThrowArgs} args - Arguments to find a Historial_conductores
     * @example
     * // Get one Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends historial_conductoresFindFirstOrThrowArgs>(args?: SelectSubset<T, historial_conductoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Historial_conductores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findMany()
     * 
     * // Get first 10 Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const historial_conductoresWithIdOnly = await prisma.historial_conductores.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends historial_conductoresFindManyArgs>(args?: SelectSubset<T, historial_conductoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Historial_conductores.
     * @param {historial_conductoresCreateArgs} args - Arguments to create a Historial_conductores.
     * @example
     * // Create one Historial_conductores
     * const Historial_conductores = await prisma.historial_conductores.create({
     *   data: {
     *     // ... data to create a Historial_conductores
     *   }
     * })
     * 
     */
    create<T extends historial_conductoresCreateArgs>(args: SelectSubset<T, historial_conductoresCreateArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Historial_conductores.
     * @param {historial_conductoresCreateManyArgs} args - Arguments to create many Historial_conductores.
     * @example
     * // Create many Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends historial_conductoresCreateManyArgs>(args?: SelectSubset<T, historial_conductoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Historial_conductores and returns the data saved in the database.
     * @param {historial_conductoresCreateManyAndReturnArgs} args - Arguments to create many Historial_conductores.
     * @example
     * // Create many Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Historial_conductores and only return the `id`
     * const historial_conductoresWithIdOnly = await prisma.historial_conductores.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends historial_conductoresCreateManyAndReturnArgs>(args?: SelectSubset<T, historial_conductoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Historial_conductores.
     * @param {historial_conductoresDeleteArgs} args - Arguments to delete one Historial_conductores.
     * @example
     * // Delete one Historial_conductores
     * const Historial_conductores = await prisma.historial_conductores.delete({
     *   where: {
     *     // ... filter to delete one Historial_conductores
     *   }
     * })
     * 
     */
    delete<T extends historial_conductoresDeleteArgs>(args: SelectSubset<T, historial_conductoresDeleteArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Historial_conductores.
     * @param {historial_conductoresUpdateArgs} args - Arguments to update one Historial_conductores.
     * @example
     * // Update one Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends historial_conductoresUpdateArgs>(args: SelectSubset<T, historial_conductoresUpdateArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Historial_conductores.
     * @param {historial_conductoresDeleteManyArgs} args - Arguments to filter Historial_conductores to delete.
     * @example
     * // Delete a few Historial_conductores
     * const { count } = await prisma.historial_conductores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends historial_conductoresDeleteManyArgs>(args?: SelectSubset<T, historial_conductoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Historial_conductores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends historial_conductoresUpdateManyArgs>(args: SelectSubset<T, historial_conductoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Historial_conductores.
     * @param {historial_conductoresUpsertArgs} args - Arguments to update or create a Historial_conductores.
     * @example
     * // Update or create a Historial_conductores
     * const historial_conductores = await prisma.historial_conductores.upsert({
     *   create: {
     *     // ... data to create a Historial_conductores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Historial_conductores we want to update
     *   }
     * })
     */
    upsert<T extends historial_conductoresUpsertArgs>(args: SelectSubset<T, historial_conductoresUpsertArgs<ExtArgs>>): Prisma__historial_conductoresClient<$Result.GetResult<Prisma.$historial_conductoresPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Historial_conductores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresCountArgs} args - Arguments to filter Historial_conductores to count.
     * @example
     * // Count the number of Historial_conductores
     * const count = await prisma.historial_conductores.count({
     *   where: {
     *     // ... the filter for the Historial_conductores we want to count
     *   }
     * })
    **/
    count<T extends historial_conductoresCountArgs>(
      args?: Subset<T, historial_conductoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Historial_conductoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Historial_conductores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Historial_conductoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Historial_conductoresAggregateArgs>(args: Subset<T, Historial_conductoresAggregateArgs>): Prisma.PrismaPromise<GetHistorial_conductoresAggregateType<T>>

    /**
     * Group by Historial_conductores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {historial_conductoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends historial_conductoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: historial_conductoresGroupByArgs['orderBy'] }
        : { orderBy?: historial_conductoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, historial_conductoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHistorial_conductoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the historial_conductores model
   */
  readonly fields: historial_conductoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for historial_conductores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__historial_conductoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    inspeccion<T extends inspeccionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, inspeccionesDefaultArgs<ExtArgs>>): Prisma__inspeccionesClient<$Result.GetResult<Prisma.$inspeccionesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the historial_conductores model
   */ 
  interface historial_conductoresFieldRefs {
    readonly id: FieldRef<"historial_conductores", 'String'>
    readonly inspeccionId: FieldRef<"historial_conductores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * historial_conductores findUnique
   */
  export type historial_conductoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter, which historial_conductores to fetch.
     */
    where: historial_conductoresWhereUniqueInput
  }

  /**
   * historial_conductores findUniqueOrThrow
   */
  export type historial_conductoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter, which historial_conductores to fetch.
     */
    where: historial_conductoresWhereUniqueInput
  }

  /**
   * historial_conductores findFirst
   */
  export type historial_conductoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter, which historial_conductores to fetch.
     */
    where?: historial_conductoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_conductores to fetch.
     */
    orderBy?: historial_conductoresOrderByWithRelationInput | historial_conductoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_conductores.
     */
    cursor?: historial_conductoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_conductores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_conductores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_conductores.
     */
    distinct?: Historial_conductoresScalarFieldEnum | Historial_conductoresScalarFieldEnum[]
  }

  /**
   * historial_conductores findFirstOrThrow
   */
  export type historial_conductoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter, which historial_conductores to fetch.
     */
    where?: historial_conductoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_conductores to fetch.
     */
    orderBy?: historial_conductoresOrderByWithRelationInput | historial_conductoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for historial_conductores.
     */
    cursor?: historial_conductoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_conductores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_conductores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of historial_conductores.
     */
    distinct?: Historial_conductoresScalarFieldEnum | Historial_conductoresScalarFieldEnum[]
  }

  /**
   * historial_conductores findMany
   */
  export type historial_conductoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter, which historial_conductores to fetch.
     */
    where?: historial_conductoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of historial_conductores to fetch.
     */
    orderBy?: historial_conductoresOrderByWithRelationInput | historial_conductoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing historial_conductores.
     */
    cursor?: historial_conductoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` historial_conductores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` historial_conductores.
     */
    skip?: number
    distinct?: Historial_conductoresScalarFieldEnum | Historial_conductoresScalarFieldEnum[]
  }

  /**
   * historial_conductores create
   */
  export type historial_conductoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * The data needed to create a historial_conductores.
     */
    data: XOR<historial_conductoresCreateInput, historial_conductoresUncheckedCreateInput>
  }

  /**
   * historial_conductores createMany
   */
  export type historial_conductoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many historial_conductores.
     */
    data: historial_conductoresCreateManyInput | historial_conductoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * historial_conductores createManyAndReturn
   */
  export type historial_conductoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many historial_conductores.
     */
    data: historial_conductoresCreateManyInput | historial_conductoresCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * historial_conductores update
   */
  export type historial_conductoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * The data needed to update a historial_conductores.
     */
    data: XOR<historial_conductoresUpdateInput, historial_conductoresUncheckedUpdateInput>
    /**
     * Choose, which historial_conductores to update.
     */
    where: historial_conductoresWhereUniqueInput
  }

  /**
   * historial_conductores updateMany
   */
  export type historial_conductoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update historial_conductores.
     */
    data: XOR<historial_conductoresUpdateManyMutationInput, historial_conductoresUncheckedUpdateManyInput>
    /**
     * Filter which historial_conductores to update
     */
    where?: historial_conductoresWhereInput
  }

  /**
   * historial_conductores upsert
   */
  export type historial_conductoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * The filter to search for the historial_conductores to update in case it exists.
     */
    where: historial_conductoresWhereUniqueInput
    /**
     * In case the historial_conductores found by the `where` argument doesn't exist, create a new historial_conductores with this data.
     */
    create: XOR<historial_conductoresCreateInput, historial_conductoresUncheckedCreateInput>
    /**
     * In case the historial_conductores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<historial_conductoresUpdateInput, historial_conductoresUncheckedUpdateInput>
  }

  /**
   * historial_conductores delete
   */
  export type historial_conductoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
    /**
     * Filter which historial_conductores to delete.
     */
    where: historial_conductoresWhereUniqueInput
  }

  /**
   * historial_conductores deleteMany
   */
  export type historial_conductoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which historial_conductores to delete
     */
    where?: historial_conductoresWhereInput
  }

  /**
   * historial_conductores without action
   */
  export type historial_conductoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the historial_conductores
     */
    select?: historial_conductoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: historial_conductoresInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const InspeccionesScalarFieldEnum: {
    id: 'id',
    placa_vehiculo: 'placa_vehiculo',
    contrato: 'contrato',
    turno: 'turno',
    conductor_nombre: 'conductor_nombre',
    fecha: 'fecha',
    campo_coordinacion: 'campo_coordinacion',
    kilometraje: 'kilometraje',
    marca_temporal: 'marca_temporal',
    nivel_riesgo: 'nivel_riesgo',
    puntaje_total: 'puntaje_total',
    observaciones: 'observaciones',
    gps: 'gps',
    pito: 'pito',
    freno: 'freno',
    frenos: 'frenos',
    correas: 'correas',
    espejos: 'espejos',
    parqueo: 'parqueo',
    puertas: 'puertas',
    vidrios: 'vidrios',
    baterias: 'baterias',
    tapiceria: 'tapiceria',
    cinturones: 'cinturones',
    orden_aseo: 'orden_aseo',
    suspension: 'suspension',
    altas_bajas: 'altas_bajas',
    horas_sueno: 'horas_sueno',
    indicadores: 'indicadores',
    tapa_tanque: 'tapa_tanque',
    aceite_motor: 'aceite_motor',
    libre_fatiga: 'libre_fatiga',
    direccionales: 'direccionales',
    documentacion: 'documentacion',
    fluido_frenos: 'fluido_frenos',
    kit_ambiental: 'kit_ambiental',
    limpia_brisas: 'limpia_brisas',
    espejos_estado: 'espejos_estado',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type InspeccionesScalarFieldEnum = (typeof InspeccionesScalarFieldEnum)[keyof typeof InspeccionesScalarFieldEnum]


  export const Archivos_procesadosScalarFieldEnum: {
    id: 'id',
    nombre_archivo: 'nombre_archivo',
    hash_archivo: 'hash_archivo',
    tamano_archivo: 'tamano_archivo',
    total_registros: 'total_registros',
    registros_insertados: 'registros_insertados',
    registros_duplicados: 'registros_duplicados',
    registros_error: 'registros_error',
    ano_detectado: 'ano_detectado',
    tiempo_procesamiento: 'tiempo_procesamiento',
    errores_validacion: 'errores_validacion',
    advertencias: 'advertencias',
    fecha_procesamiento: 'fecha_procesamiento',
    usuario_carga: 'usuario_carga',
    estado: 'estado'
  };

  export type Archivos_procesadosScalarFieldEnum = (typeof Archivos_procesadosScalarFieldEnum)[keyof typeof Archivos_procesadosScalarFieldEnum]


  export const Historial_conductoresScalarFieldEnum: {
    id: 'id',
    inspeccionId: 'inspeccionId'
  };

  export type Historial_conductoresScalarFieldEnum = (typeof Historial_conductoresScalarFieldEnum)[keyof typeof Historial_conductoresScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    
  /**
   * Deep Input Types
   */


  export type inspeccionesWhereInput = {
    AND?: inspeccionesWhereInput | inspeccionesWhereInput[]
    OR?: inspeccionesWhereInput[]
    NOT?: inspeccionesWhereInput | inspeccionesWhereInput[]
    id?: StringFilter<"inspecciones"> | string
    placa_vehiculo?: StringFilter<"inspecciones"> | string
    contrato?: StringFilter<"inspecciones"> | string
    turno?: StringFilter<"inspecciones"> | string
    conductor_nombre?: StringFilter<"inspecciones"> | string
    fecha?: DateTimeFilter<"inspecciones"> | Date | string
    campo_coordinacion?: StringFilter<"inspecciones"> | string
    kilometraje?: IntFilter<"inspecciones"> | number
    marca_temporal?: BigIntFilter<"inspecciones"> | bigint | number
    nivel_riesgo?: StringFilter<"inspecciones"> | string
    puntaje_total?: IntFilter<"inspecciones"> | number
    observaciones?: StringFilter<"inspecciones"> | string
    gps?: BoolFilter<"inspecciones"> | boolean
    pito?: BoolFilter<"inspecciones"> | boolean
    freno?: BoolFilter<"inspecciones"> | boolean
    frenos?: BoolFilter<"inspecciones"> | boolean
    correas?: BoolFilter<"inspecciones"> | boolean
    espejos?: BoolFilter<"inspecciones"> | boolean
    parqueo?: BoolFilter<"inspecciones"> | boolean
    puertas?: BoolFilter<"inspecciones"> | boolean
    vidrios?: BoolFilter<"inspecciones"> | boolean
    baterias?: BoolFilter<"inspecciones"> | boolean
    tapiceria?: BoolFilter<"inspecciones"> | boolean
    cinturones?: BoolFilter<"inspecciones"> | boolean
    orden_aseo?: BoolFilter<"inspecciones"> | boolean
    suspension?: BoolFilter<"inspecciones"> | boolean
    altas_bajas?: BoolFilter<"inspecciones"> | boolean
    horas_sueno?: BoolFilter<"inspecciones"> | boolean
    indicadores?: BoolFilter<"inspecciones"> | boolean
    tapa_tanque?: BoolFilter<"inspecciones"> | boolean
    aceite_motor?: BoolFilter<"inspecciones"> | boolean
    libre_fatiga?: BoolFilter<"inspecciones"> | boolean
    direccionales?: BoolFilter<"inspecciones"> | boolean
    documentacion?: BoolFilter<"inspecciones"> | boolean
    fluido_frenos?: BoolFilter<"inspecciones"> | boolean
    kit_ambiental?: BoolFilter<"inspecciones"> | boolean
    limpia_brisas?: BoolFilter<"inspecciones"> | boolean
    espejos_estado?: StringFilter<"inspecciones"> | string
    createdAt?: DateTimeFilter<"inspecciones"> | Date | string
    updatedAt?: DateTimeFilter<"inspecciones"> | Date | string
    historial_conductores?: Historial_conductoresListRelationFilter
  }

  export type inspeccionesOrderByWithRelationInput = {
    id?: SortOrder
    placa_vehiculo?: SortOrder
    contrato?: SortOrder
    turno?: SortOrder
    conductor_nombre?: SortOrder
    fecha?: SortOrder
    campo_coordinacion?: SortOrder
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    nivel_riesgo?: SortOrder
    puntaje_total?: SortOrder
    observaciones?: SortOrder
    gps?: SortOrder
    pito?: SortOrder
    freno?: SortOrder
    frenos?: SortOrder
    correas?: SortOrder
    espejos?: SortOrder
    parqueo?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    baterias?: SortOrder
    tapiceria?: SortOrder
    cinturones?: SortOrder
    orden_aseo?: SortOrder
    suspension?: SortOrder
    altas_bajas?: SortOrder
    horas_sueno?: SortOrder
    indicadores?: SortOrder
    tapa_tanque?: SortOrder
    aceite_motor?: SortOrder
    libre_fatiga?: SortOrder
    direccionales?: SortOrder
    documentacion?: SortOrder
    fluido_frenos?: SortOrder
    kit_ambiental?: SortOrder
    limpia_brisas?: SortOrder
    espejos_estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    historial_conductores?: historial_conductoresOrderByRelationAggregateInput
  }

  export type inspeccionesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: inspeccionesWhereInput | inspeccionesWhereInput[]
    OR?: inspeccionesWhereInput[]
    NOT?: inspeccionesWhereInput | inspeccionesWhereInput[]
    placa_vehiculo?: StringFilter<"inspecciones"> | string
    contrato?: StringFilter<"inspecciones"> | string
    turno?: StringFilter<"inspecciones"> | string
    conductor_nombre?: StringFilter<"inspecciones"> | string
    fecha?: DateTimeFilter<"inspecciones"> | Date | string
    campo_coordinacion?: StringFilter<"inspecciones"> | string
    kilometraje?: IntFilter<"inspecciones"> | number
    marca_temporal?: BigIntFilter<"inspecciones"> | bigint | number
    nivel_riesgo?: StringFilter<"inspecciones"> | string
    puntaje_total?: IntFilter<"inspecciones"> | number
    observaciones?: StringFilter<"inspecciones"> | string
    gps?: BoolFilter<"inspecciones"> | boolean
    pito?: BoolFilter<"inspecciones"> | boolean
    freno?: BoolFilter<"inspecciones"> | boolean
    frenos?: BoolFilter<"inspecciones"> | boolean
    correas?: BoolFilter<"inspecciones"> | boolean
    espejos?: BoolFilter<"inspecciones"> | boolean
    parqueo?: BoolFilter<"inspecciones"> | boolean
    puertas?: BoolFilter<"inspecciones"> | boolean
    vidrios?: BoolFilter<"inspecciones"> | boolean
    baterias?: BoolFilter<"inspecciones"> | boolean
    tapiceria?: BoolFilter<"inspecciones"> | boolean
    cinturones?: BoolFilter<"inspecciones"> | boolean
    orden_aseo?: BoolFilter<"inspecciones"> | boolean
    suspension?: BoolFilter<"inspecciones"> | boolean
    altas_bajas?: BoolFilter<"inspecciones"> | boolean
    horas_sueno?: BoolFilter<"inspecciones"> | boolean
    indicadores?: BoolFilter<"inspecciones"> | boolean
    tapa_tanque?: BoolFilter<"inspecciones"> | boolean
    aceite_motor?: BoolFilter<"inspecciones"> | boolean
    libre_fatiga?: BoolFilter<"inspecciones"> | boolean
    direccionales?: BoolFilter<"inspecciones"> | boolean
    documentacion?: BoolFilter<"inspecciones"> | boolean
    fluido_frenos?: BoolFilter<"inspecciones"> | boolean
    kit_ambiental?: BoolFilter<"inspecciones"> | boolean
    limpia_brisas?: BoolFilter<"inspecciones"> | boolean
    espejos_estado?: StringFilter<"inspecciones"> | string
    createdAt?: DateTimeFilter<"inspecciones"> | Date | string
    updatedAt?: DateTimeFilter<"inspecciones"> | Date | string
    historial_conductores?: Historial_conductoresListRelationFilter
  }, "id">

  export type inspeccionesOrderByWithAggregationInput = {
    id?: SortOrder
    placa_vehiculo?: SortOrder
    contrato?: SortOrder
    turno?: SortOrder
    conductor_nombre?: SortOrder
    fecha?: SortOrder
    campo_coordinacion?: SortOrder
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    nivel_riesgo?: SortOrder
    puntaje_total?: SortOrder
    observaciones?: SortOrder
    gps?: SortOrder
    pito?: SortOrder
    freno?: SortOrder
    frenos?: SortOrder
    correas?: SortOrder
    espejos?: SortOrder
    parqueo?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    baterias?: SortOrder
    tapiceria?: SortOrder
    cinturones?: SortOrder
    orden_aseo?: SortOrder
    suspension?: SortOrder
    altas_bajas?: SortOrder
    horas_sueno?: SortOrder
    indicadores?: SortOrder
    tapa_tanque?: SortOrder
    aceite_motor?: SortOrder
    libre_fatiga?: SortOrder
    direccionales?: SortOrder
    documentacion?: SortOrder
    fluido_frenos?: SortOrder
    kit_ambiental?: SortOrder
    limpia_brisas?: SortOrder
    espejos_estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: inspeccionesCountOrderByAggregateInput
    _avg?: inspeccionesAvgOrderByAggregateInput
    _max?: inspeccionesMaxOrderByAggregateInput
    _min?: inspeccionesMinOrderByAggregateInput
    _sum?: inspeccionesSumOrderByAggregateInput
  }

  export type inspeccionesScalarWhereWithAggregatesInput = {
    AND?: inspeccionesScalarWhereWithAggregatesInput | inspeccionesScalarWhereWithAggregatesInput[]
    OR?: inspeccionesScalarWhereWithAggregatesInput[]
    NOT?: inspeccionesScalarWhereWithAggregatesInput | inspeccionesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"inspecciones"> | string
    placa_vehiculo?: StringWithAggregatesFilter<"inspecciones"> | string
    contrato?: StringWithAggregatesFilter<"inspecciones"> | string
    turno?: StringWithAggregatesFilter<"inspecciones"> | string
    conductor_nombre?: StringWithAggregatesFilter<"inspecciones"> | string
    fecha?: DateTimeWithAggregatesFilter<"inspecciones"> | Date | string
    campo_coordinacion?: StringWithAggregatesFilter<"inspecciones"> | string
    kilometraje?: IntWithAggregatesFilter<"inspecciones"> | number
    marca_temporal?: BigIntWithAggregatesFilter<"inspecciones"> | bigint | number
    nivel_riesgo?: StringWithAggregatesFilter<"inspecciones"> | string
    puntaje_total?: IntWithAggregatesFilter<"inspecciones"> | number
    observaciones?: StringWithAggregatesFilter<"inspecciones"> | string
    gps?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    pito?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    freno?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    frenos?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    correas?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    espejos?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    parqueo?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    puertas?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    vidrios?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    baterias?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    tapiceria?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    cinturones?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    orden_aseo?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    suspension?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    altas_bajas?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    horas_sueno?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    indicadores?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    tapa_tanque?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    aceite_motor?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    libre_fatiga?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    direccionales?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    documentacion?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    fluido_frenos?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    kit_ambiental?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    limpia_brisas?: BoolWithAggregatesFilter<"inspecciones"> | boolean
    espejos_estado?: StringWithAggregatesFilter<"inspecciones"> | string
    createdAt?: DateTimeWithAggregatesFilter<"inspecciones"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"inspecciones"> | Date | string
  }

  export type archivos_procesadosWhereInput = {
    AND?: archivos_procesadosWhereInput | archivos_procesadosWhereInput[]
    OR?: archivos_procesadosWhereInput[]
    NOT?: archivos_procesadosWhereInput | archivos_procesadosWhereInput[]
    id?: StringFilter<"archivos_procesados"> | string
    nombre_archivo?: StringFilter<"archivos_procesados"> | string
    hash_archivo?: StringFilter<"archivos_procesados"> | string
    tamano_archivo?: IntNullableFilter<"archivos_procesados"> | number | null
    total_registros?: IntFilter<"archivos_procesados"> | number
    registros_insertados?: IntFilter<"archivos_procesados"> | number
    registros_duplicados?: IntFilter<"archivos_procesados"> | number
    registros_error?: IntFilter<"archivos_procesados"> | number
    ano_detectado?: IntNullableFilter<"archivos_procesados"> | number | null
    tiempo_procesamiento?: FloatNullableFilter<"archivos_procesados"> | number | null
    errores_validacion?: JsonNullableFilter<"archivos_procesados">
    advertencias?: JsonNullableFilter<"archivos_procesados">
    fecha_procesamiento?: DateTimeFilter<"archivos_procesados"> | Date | string
    usuario_carga?: StringNullableFilter<"archivos_procesados"> | string | null
    estado?: StringFilter<"archivos_procesados"> | string
  }

  export type archivos_procesadosOrderByWithRelationInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    tamano_archivo?: SortOrderInput | SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrderInput | SortOrder
    tiempo_procesamiento?: SortOrderInput | SortOrder
    errores_validacion?: SortOrderInput | SortOrder
    advertencias?: SortOrderInput | SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrderInput | SortOrder
    estado?: SortOrder
  }

  export type archivos_procesadosWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    hash_archivo?: string
    AND?: archivos_procesadosWhereInput | archivos_procesadosWhereInput[]
    OR?: archivos_procesadosWhereInput[]
    NOT?: archivos_procesadosWhereInput | archivos_procesadosWhereInput[]
    nombre_archivo?: StringFilter<"archivos_procesados"> | string
    tamano_archivo?: IntNullableFilter<"archivos_procesados"> | number | null
    total_registros?: IntFilter<"archivos_procesados"> | number
    registros_insertados?: IntFilter<"archivos_procesados"> | number
    registros_duplicados?: IntFilter<"archivos_procesados"> | number
    registros_error?: IntFilter<"archivos_procesados"> | number
    ano_detectado?: IntNullableFilter<"archivos_procesados"> | number | null
    tiempo_procesamiento?: FloatNullableFilter<"archivos_procesados"> | number | null
    errores_validacion?: JsonNullableFilter<"archivos_procesados">
    advertencias?: JsonNullableFilter<"archivos_procesados">
    fecha_procesamiento?: DateTimeFilter<"archivos_procesados"> | Date | string
    usuario_carga?: StringNullableFilter<"archivos_procesados"> | string | null
    estado?: StringFilter<"archivos_procesados"> | string
  }, "id" | "hash_archivo">

  export type archivos_procesadosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    tamano_archivo?: SortOrderInput | SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrderInput | SortOrder
    tiempo_procesamiento?: SortOrderInput | SortOrder
    errores_validacion?: SortOrderInput | SortOrder
    advertencias?: SortOrderInput | SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrderInput | SortOrder
    estado?: SortOrder
    _count?: archivos_procesadosCountOrderByAggregateInput
    _avg?: archivos_procesadosAvgOrderByAggregateInput
    _max?: archivos_procesadosMaxOrderByAggregateInput
    _min?: archivos_procesadosMinOrderByAggregateInput
    _sum?: archivos_procesadosSumOrderByAggregateInput
  }

  export type archivos_procesadosScalarWhereWithAggregatesInput = {
    AND?: archivos_procesadosScalarWhereWithAggregatesInput | archivos_procesadosScalarWhereWithAggregatesInput[]
    OR?: archivos_procesadosScalarWhereWithAggregatesInput[]
    NOT?: archivos_procesadosScalarWhereWithAggregatesInput | archivos_procesadosScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"archivos_procesados"> | string
    nombre_archivo?: StringWithAggregatesFilter<"archivos_procesados"> | string
    hash_archivo?: StringWithAggregatesFilter<"archivos_procesados"> | string
    tamano_archivo?: IntNullableWithAggregatesFilter<"archivos_procesados"> | number | null
    total_registros?: IntWithAggregatesFilter<"archivos_procesados"> | number
    registros_insertados?: IntWithAggregatesFilter<"archivos_procesados"> | number
    registros_duplicados?: IntWithAggregatesFilter<"archivos_procesados"> | number
    registros_error?: IntWithAggregatesFilter<"archivos_procesados"> | number
    ano_detectado?: IntNullableWithAggregatesFilter<"archivos_procesados"> | number | null
    tiempo_procesamiento?: FloatNullableWithAggregatesFilter<"archivos_procesados"> | number | null
    errores_validacion?: JsonNullableWithAggregatesFilter<"archivos_procesados">
    advertencias?: JsonNullableWithAggregatesFilter<"archivos_procesados">
    fecha_procesamiento?: DateTimeWithAggregatesFilter<"archivos_procesados"> | Date | string
    usuario_carga?: StringNullableWithAggregatesFilter<"archivos_procesados"> | string | null
    estado?: StringWithAggregatesFilter<"archivos_procesados"> | string
  }

  export type historial_conductoresWhereInput = {
    AND?: historial_conductoresWhereInput | historial_conductoresWhereInput[]
    OR?: historial_conductoresWhereInput[]
    NOT?: historial_conductoresWhereInput | historial_conductoresWhereInput[]
    id?: StringFilter<"historial_conductores"> | string
    inspeccionId?: StringFilter<"historial_conductores"> | string
    inspeccion?: XOR<InspeccionesRelationFilter, inspeccionesWhereInput>
  }

  export type historial_conductoresOrderByWithRelationInput = {
    id?: SortOrder
    inspeccionId?: SortOrder
    inspeccion?: inspeccionesOrderByWithRelationInput
  }

  export type historial_conductoresWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: historial_conductoresWhereInput | historial_conductoresWhereInput[]
    OR?: historial_conductoresWhereInput[]
    NOT?: historial_conductoresWhereInput | historial_conductoresWhereInput[]
    inspeccionId?: StringFilter<"historial_conductores"> | string
    inspeccion?: XOR<InspeccionesRelationFilter, inspeccionesWhereInput>
  }, "id">

  export type historial_conductoresOrderByWithAggregationInput = {
    id?: SortOrder
    inspeccionId?: SortOrder
    _count?: historial_conductoresCountOrderByAggregateInput
    _max?: historial_conductoresMaxOrderByAggregateInput
    _min?: historial_conductoresMinOrderByAggregateInput
  }

  export type historial_conductoresScalarWhereWithAggregatesInput = {
    AND?: historial_conductoresScalarWhereWithAggregatesInput | historial_conductoresScalarWhereWithAggregatesInput[]
    OR?: historial_conductoresScalarWhereWithAggregatesInput[]
    NOT?: historial_conductoresScalarWhereWithAggregatesInput | historial_conductoresScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"historial_conductores"> | string
    inspeccionId?: StringWithAggregatesFilter<"historial_conductores"> | string
  }

  export type inspeccionesCreateInput = {
    id?: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre?: string
    fecha?: Date | string
    campo_coordinacion?: string
    kilometraje?: number
    marca_temporal?: bigint | number
    nivel_riesgo?: string
    puntaje_total?: number
    observaciones?: string
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    historial_conductores?: historial_conductoresCreateNestedManyWithoutInspeccionInput
  }

  export type inspeccionesUncheckedCreateInput = {
    id?: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre?: string
    fecha?: Date | string
    campo_coordinacion?: string
    kilometraje?: number
    marca_temporal?: bigint | number
    nivel_riesgo?: string
    puntaje_total?: number
    observaciones?: string
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    historial_conductores?: historial_conductoresUncheckedCreateNestedManyWithoutInspeccionInput
  }

  export type inspeccionesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historial_conductores?: historial_conductoresUpdateManyWithoutInspeccionNestedInput
  }

  export type inspeccionesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    historial_conductores?: historial_conductoresUncheckedUpdateManyWithoutInspeccionNestedInput
  }

  export type inspeccionesCreateManyInput = {
    id?: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre?: string
    fecha?: Date | string
    campo_coordinacion?: string
    kilometraje?: number
    marca_temporal?: bigint | number
    nivel_riesgo?: string
    puntaje_total?: number
    observaciones?: string
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type inspeccionesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type inspeccionesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type archivos_procesadosCreateInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    tamano_archivo?: number | null
    total_registros?: number
    registros_insertados?: number
    registros_duplicados?: number
    registros_error?: number
    ano_detectado?: number | null
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
    estado?: string
  }

  export type archivos_procesadosUncheckedCreateInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    tamano_archivo?: number | null
    total_registros?: number
    registros_insertados?: number
    registros_duplicados?: number
    registros_error?: number
    ano_detectado?: number | null
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
    estado?: string
  }

  export type archivos_procesadosUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    tamano_archivo?: NullableIntFieldUpdateOperationsInput | number | null
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_insertados?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    registros_error?: IntFieldUpdateOperationsInput | number
    ano_detectado?: NullableIntFieldUpdateOperationsInput | number | null
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type archivos_procesadosUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    tamano_archivo?: NullableIntFieldUpdateOperationsInput | number | null
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_insertados?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    registros_error?: IntFieldUpdateOperationsInput | number
    ano_detectado?: NullableIntFieldUpdateOperationsInput | number | null
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type archivos_procesadosCreateManyInput = {
    id?: string
    nombre_archivo: string
    hash_archivo: string
    tamano_archivo?: number | null
    total_registros?: number
    registros_insertados?: number
    registros_duplicados?: number
    registros_error?: number
    ano_detectado?: number | null
    tiempo_procesamiento?: number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: Date | string
    usuario_carga?: string | null
    estado?: string
  }

  export type archivos_procesadosUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    tamano_archivo?: NullableIntFieldUpdateOperationsInput | number | null
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_insertados?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    registros_error?: IntFieldUpdateOperationsInput | number
    ano_detectado?: NullableIntFieldUpdateOperationsInput | number | null
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type archivos_procesadosUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nombre_archivo?: StringFieldUpdateOperationsInput | string
    hash_archivo?: StringFieldUpdateOperationsInput | string
    tamano_archivo?: NullableIntFieldUpdateOperationsInput | number | null
    total_registros?: IntFieldUpdateOperationsInput | number
    registros_insertados?: IntFieldUpdateOperationsInput | number
    registros_duplicados?: IntFieldUpdateOperationsInput | number
    registros_error?: IntFieldUpdateOperationsInput | number
    ano_detectado?: NullableIntFieldUpdateOperationsInput | number | null
    tiempo_procesamiento?: NullableFloatFieldUpdateOperationsInput | number | null
    errores_validacion?: NullableJsonNullValueInput | InputJsonValue
    advertencias?: NullableJsonNullValueInput | InputJsonValue
    fecha_procesamiento?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_carga?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: StringFieldUpdateOperationsInput | string
  }

  export type historial_conductoresCreateInput = {
    id?: string
    inspeccion: inspeccionesCreateNestedOneWithoutHistorial_conductoresInput
  }

  export type historial_conductoresUncheckedCreateInput = {
    id?: string
    inspeccionId: string
  }

  export type historial_conductoresUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inspeccion?: inspeccionesUpdateOneRequiredWithoutHistorial_conductoresNestedInput
  }

  export type historial_conductoresUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    inspeccionId?: StringFieldUpdateOperationsInput | string
  }

  export type historial_conductoresCreateManyInput = {
    id?: string
    inspeccionId: string
  }

  export type historial_conductoresUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_conductoresUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    inspeccionId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Historial_conductoresListRelationFilter = {
    every?: historial_conductoresWhereInput
    some?: historial_conductoresWhereInput
    none?: historial_conductoresWhereInput
  }

  export type historial_conductoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type inspeccionesCountOrderByAggregateInput = {
    id?: SortOrder
    placa_vehiculo?: SortOrder
    contrato?: SortOrder
    turno?: SortOrder
    conductor_nombre?: SortOrder
    fecha?: SortOrder
    campo_coordinacion?: SortOrder
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    nivel_riesgo?: SortOrder
    puntaje_total?: SortOrder
    observaciones?: SortOrder
    gps?: SortOrder
    pito?: SortOrder
    freno?: SortOrder
    frenos?: SortOrder
    correas?: SortOrder
    espejos?: SortOrder
    parqueo?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    baterias?: SortOrder
    tapiceria?: SortOrder
    cinturones?: SortOrder
    orden_aseo?: SortOrder
    suspension?: SortOrder
    altas_bajas?: SortOrder
    horas_sueno?: SortOrder
    indicadores?: SortOrder
    tapa_tanque?: SortOrder
    aceite_motor?: SortOrder
    libre_fatiga?: SortOrder
    direccionales?: SortOrder
    documentacion?: SortOrder
    fluido_frenos?: SortOrder
    kit_ambiental?: SortOrder
    limpia_brisas?: SortOrder
    espejos_estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type inspeccionesAvgOrderByAggregateInput = {
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    puntaje_total?: SortOrder
  }

  export type inspeccionesMaxOrderByAggregateInput = {
    id?: SortOrder
    placa_vehiculo?: SortOrder
    contrato?: SortOrder
    turno?: SortOrder
    conductor_nombre?: SortOrder
    fecha?: SortOrder
    campo_coordinacion?: SortOrder
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    nivel_riesgo?: SortOrder
    puntaje_total?: SortOrder
    observaciones?: SortOrder
    gps?: SortOrder
    pito?: SortOrder
    freno?: SortOrder
    frenos?: SortOrder
    correas?: SortOrder
    espejos?: SortOrder
    parqueo?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    baterias?: SortOrder
    tapiceria?: SortOrder
    cinturones?: SortOrder
    orden_aseo?: SortOrder
    suspension?: SortOrder
    altas_bajas?: SortOrder
    horas_sueno?: SortOrder
    indicadores?: SortOrder
    tapa_tanque?: SortOrder
    aceite_motor?: SortOrder
    libre_fatiga?: SortOrder
    direccionales?: SortOrder
    documentacion?: SortOrder
    fluido_frenos?: SortOrder
    kit_ambiental?: SortOrder
    limpia_brisas?: SortOrder
    espejos_estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type inspeccionesMinOrderByAggregateInput = {
    id?: SortOrder
    placa_vehiculo?: SortOrder
    contrato?: SortOrder
    turno?: SortOrder
    conductor_nombre?: SortOrder
    fecha?: SortOrder
    campo_coordinacion?: SortOrder
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    nivel_riesgo?: SortOrder
    puntaje_total?: SortOrder
    observaciones?: SortOrder
    gps?: SortOrder
    pito?: SortOrder
    freno?: SortOrder
    frenos?: SortOrder
    correas?: SortOrder
    espejos?: SortOrder
    parqueo?: SortOrder
    puertas?: SortOrder
    vidrios?: SortOrder
    baterias?: SortOrder
    tapiceria?: SortOrder
    cinturones?: SortOrder
    orden_aseo?: SortOrder
    suspension?: SortOrder
    altas_bajas?: SortOrder
    horas_sueno?: SortOrder
    indicadores?: SortOrder
    tapa_tanque?: SortOrder
    aceite_motor?: SortOrder
    libre_fatiga?: SortOrder
    direccionales?: SortOrder
    documentacion?: SortOrder
    fluido_frenos?: SortOrder
    kit_ambiental?: SortOrder
    limpia_brisas?: SortOrder
    espejos_estado?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type inspeccionesSumOrderByAggregateInput = {
    kilometraje?: SortOrder
    marca_temporal?: SortOrder
    puntaje_total?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type archivos_procesadosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    tamano_archivo?: SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrder
    tiempo_procesamiento?: SortOrder
    errores_validacion?: SortOrder
    advertencias?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
    estado?: SortOrder
  }

  export type archivos_procesadosAvgOrderByAggregateInput = {
    tamano_archivo?: SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrder
    tiempo_procesamiento?: SortOrder
  }

  export type archivos_procesadosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    tamano_archivo?: SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrder
    tiempo_procesamiento?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
    estado?: SortOrder
  }

  export type archivos_procesadosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre_archivo?: SortOrder
    hash_archivo?: SortOrder
    tamano_archivo?: SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrder
    tiempo_procesamiento?: SortOrder
    fecha_procesamiento?: SortOrder
    usuario_carga?: SortOrder
    estado?: SortOrder
  }

  export type archivos_procesadosSumOrderByAggregateInput = {
    tamano_archivo?: SortOrder
    total_registros?: SortOrder
    registros_insertados?: SortOrder
    registros_duplicados?: SortOrder
    registros_error?: SortOrder
    ano_detectado?: SortOrder
    tiempo_procesamiento?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type InspeccionesRelationFilter = {
    is?: inspeccionesWhereInput
    isNot?: inspeccionesWhereInput
  }

  export type historial_conductoresCountOrderByAggregateInput = {
    id?: SortOrder
    inspeccionId?: SortOrder
  }

  export type historial_conductoresMaxOrderByAggregateInput = {
    id?: SortOrder
    inspeccionId?: SortOrder
  }

  export type historial_conductoresMinOrderByAggregateInput = {
    id?: SortOrder
    inspeccionId?: SortOrder
  }

  export type historial_conductoresCreateNestedManyWithoutInspeccionInput = {
    create?: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput> | historial_conductoresCreateWithoutInspeccionInput[] | historial_conductoresUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: historial_conductoresCreateOrConnectWithoutInspeccionInput | historial_conductoresCreateOrConnectWithoutInspeccionInput[]
    createMany?: historial_conductoresCreateManyInspeccionInputEnvelope
    connect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
  }

  export type historial_conductoresUncheckedCreateNestedManyWithoutInspeccionInput = {
    create?: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput> | historial_conductoresCreateWithoutInspeccionInput[] | historial_conductoresUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: historial_conductoresCreateOrConnectWithoutInspeccionInput | historial_conductoresCreateOrConnectWithoutInspeccionInput[]
    createMany?: historial_conductoresCreateManyInspeccionInputEnvelope
    connect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type historial_conductoresUpdateManyWithoutInspeccionNestedInput = {
    create?: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput> | historial_conductoresCreateWithoutInspeccionInput[] | historial_conductoresUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: historial_conductoresCreateOrConnectWithoutInspeccionInput | historial_conductoresCreateOrConnectWithoutInspeccionInput[]
    upsert?: historial_conductoresUpsertWithWhereUniqueWithoutInspeccionInput | historial_conductoresUpsertWithWhereUniqueWithoutInspeccionInput[]
    createMany?: historial_conductoresCreateManyInspeccionInputEnvelope
    set?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    disconnect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    delete?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    connect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    update?: historial_conductoresUpdateWithWhereUniqueWithoutInspeccionInput | historial_conductoresUpdateWithWhereUniqueWithoutInspeccionInput[]
    updateMany?: historial_conductoresUpdateManyWithWhereWithoutInspeccionInput | historial_conductoresUpdateManyWithWhereWithoutInspeccionInput[]
    deleteMany?: historial_conductoresScalarWhereInput | historial_conductoresScalarWhereInput[]
  }

  export type historial_conductoresUncheckedUpdateManyWithoutInspeccionNestedInput = {
    create?: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput> | historial_conductoresCreateWithoutInspeccionInput[] | historial_conductoresUncheckedCreateWithoutInspeccionInput[]
    connectOrCreate?: historial_conductoresCreateOrConnectWithoutInspeccionInput | historial_conductoresCreateOrConnectWithoutInspeccionInput[]
    upsert?: historial_conductoresUpsertWithWhereUniqueWithoutInspeccionInput | historial_conductoresUpsertWithWhereUniqueWithoutInspeccionInput[]
    createMany?: historial_conductoresCreateManyInspeccionInputEnvelope
    set?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    disconnect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    delete?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    connect?: historial_conductoresWhereUniqueInput | historial_conductoresWhereUniqueInput[]
    update?: historial_conductoresUpdateWithWhereUniqueWithoutInspeccionInput | historial_conductoresUpdateWithWhereUniqueWithoutInspeccionInput[]
    updateMany?: historial_conductoresUpdateManyWithWhereWithoutInspeccionInput | historial_conductoresUpdateManyWithWhereWithoutInspeccionInput[]
    deleteMany?: historial_conductoresScalarWhereInput | historial_conductoresScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type inspeccionesCreateNestedOneWithoutHistorial_conductoresInput = {
    create?: XOR<inspeccionesCreateWithoutHistorial_conductoresInput, inspeccionesUncheckedCreateWithoutHistorial_conductoresInput>
    connectOrCreate?: inspeccionesCreateOrConnectWithoutHistorial_conductoresInput
    connect?: inspeccionesWhereUniqueInput
  }

  export type inspeccionesUpdateOneRequiredWithoutHistorial_conductoresNestedInput = {
    create?: XOR<inspeccionesCreateWithoutHistorial_conductoresInput, inspeccionesUncheckedCreateWithoutHistorial_conductoresInput>
    connectOrCreate?: inspeccionesCreateOrConnectWithoutHistorial_conductoresInput
    upsert?: inspeccionesUpsertWithoutHistorial_conductoresInput
    connect?: inspeccionesWhereUniqueInput
    update?: XOR<XOR<inspeccionesUpdateToOneWithWhereWithoutHistorial_conductoresInput, inspeccionesUpdateWithoutHistorial_conductoresInput>, inspeccionesUncheckedUpdateWithoutHistorial_conductoresInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type historial_conductoresCreateWithoutInspeccionInput = {
    id?: string
  }

  export type historial_conductoresUncheckedCreateWithoutInspeccionInput = {
    id?: string
  }

  export type historial_conductoresCreateOrConnectWithoutInspeccionInput = {
    where: historial_conductoresWhereUniqueInput
    create: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput>
  }

  export type historial_conductoresCreateManyInspeccionInputEnvelope = {
    data: historial_conductoresCreateManyInspeccionInput | historial_conductoresCreateManyInspeccionInput[]
    skipDuplicates?: boolean
  }

  export type historial_conductoresUpsertWithWhereUniqueWithoutInspeccionInput = {
    where: historial_conductoresWhereUniqueInput
    update: XOR<historial_conductoresUpdateWithoutInspeccionInput, historial_conductoresUncheckedUpdateWithoutInspeccionInput>
    create: XOR<historial_conductoresCreateWithoutInspeccionInput, historial_conductoresUncheckedCreateWithoutInspeccionInput>
  }

  export type historial_conductoresUpdateWithWhereUniqueWithoutInspeccionInput = {
    where: historial_conductoresWhereUniqueInput
    data: XOR<historial_conductoresUpdateWithoutInspeccionInput, historial_conductoresUncheckedUpdateWithoutInspeccionInput>
  }

  export type historial_conductoresUpdateManyWithWhereWithoutInspeccionInput = {
    where: historial_conductoresScalarWhereInput
    data: XOR<historial_conductoresUpdateManyMutationInput, historial_conductoresUncheckedUpdateManyWithoutInspeccionInput>
  }

  export type historial_conductoresScalarWhereInput = {
    AND?: historial_conductoresScalarWhereInput | historial_conductoresScalarWhereInput[]
    OR?: historial_conductoresScalarWhereInput[]
    NOT?: historial_conductoresScalarWhereInput | historial_conductoresScalarWhereInput[]
    id?: StringFilter<"historial_conductores"> | string
    inspeccionId?: StringFilter<"historial_conductores"> | string
  }

  export type inspeccionesCreateWithoutHistorial_conductoresInput = {
    id?: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre?: string
    fecha?: Date | string
    campo_coordinacion?: string
    kilometraje?: number
    marca_temporal?: bigint | number
    nivel_riesgo?: string
    puntaje_total?: number
    observaciones?: string
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type inspeccionesUncheckedCreateWithoutHistorial_conductoresInput = {
    id?: string
    placa_vehiculo: string
    contrato: string
    turno: string
    conductor_nombre?: string
    fecha?: Date | string
    campo_coordinacion?: string
    kilometraje?: number
    marca_temporal?: bigint | number
    nivel_riesgo?: string
    puntaje_total?: number
    observaciones?: string
    gps?: boolean
    pito?: boolean
    freno?: boolean
    frenos?: boolean
    correas?: boolean
    espejos?: boolean
    parqueo?: boolean
    puertas?: boolean
    vidrios?: boolean
    baterias?: boolean
    tapiceria?: boolean
    cinturones?: boolean
    orden_aseo?: boolean
    suspension?: boolean
    altas_bajas?: boolean
    horas_sueno?: boolean
    indicadores?: boolean
    tapa_tanque?: boolean
    aceite_motor?: boolean
    libre_fatiga?: boolean
    direccionales?: boolean
    documentacion?: boolean
    fluido_frenos?: boolean
    kit_ambiental?: boolean
    limpia_brisas?: boolean
    espejos_estado?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type inspeccionesCreateOrConnectWithoutHistorial_conductoresInput = {
    where: inspeccionesWhereUniqueInput
    create: XOR<inspeccionesCreateWithoutHistorial_conductoresInput, inspeccionesUncheckedCreateWithoutHistorial_conductoresInput>
  }

  export type inspeccionesUpsertWithoutHistorial_conductoresInput = {
    update: XOR<inspeccionesUpdateWithoutHistorial_conductoresInput, inspeccionesUncheckedUpdateWithoutHistorial_conductoresInput>
    create: XOR<inspeccionesCreateWithoutHistorial_conductoresInput, inspeccionesUncheckedCreateWithoutHistorial_conductoresInput>
    where?: inspeccionesWhereInput
  }

  export type inspeccionesUpdateToOneWithWhereWithoutHistorial_conductoresInput = {
    where?: inspeccionesWhereInput
    data: XOR<inspeccionesUpdateWithoutHistorial_conductoresInput, inspeccionesUncheckedUpdateWithoutHistorial_conductoresInput>
  }

  export type inspeccionesUpdateWithoutHistorial_conductoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type inspeccionesUncheckedUpdateWithoutHistorial_conductoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    placa_vehiculo?: StringFieldUpdateOperationsInput | string
    contrato?: StringFieldUpdateOperationsInput | string
    turno?: StringFieldUpdateOperationsInput | string
    conductor_nombre?: StringFieldUpdateOperationsInput | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    campo_coordinacion?: StringFieldUpdateOperationsInput | string
    kilometraje?: IntFieldUpdateOperationsInput | number
    marca_temporal?: BigIntFieldUpdateOperationsInput | bigint | number
    nivel_riesgo?: StringFieldUpdateOperationsInput | string
    puntaje_total?: IntFieldUpdateOperationsInput | number
    observaciones?: StringFieldUpdateOperationsInput | string
    gps?: BoolFieldUpdateOperationsInput | boolean
    pito?: BoolFieldUpdateOperationsInput | boolean
    freno?: BoolFieldUpdateOperationsInput | boolean
    frenos?: BoolFieldUpdateOperationsInput | boolean
    correas?: BoolFieldUpdateOperationsInput | boolean
    espejos?: BoolFieldUpdateOperationsInput | boolean
    parqueo?: BoolFieldUpdateOperationsInput | boolean
    puertas?: BoolFieldUpdateOperationsInput | boolean
    vidrios?: BoolFieldUpdateOperationsInput | boolean
    baterias?: BoolFieldUpdateOperationsInput | boolean
    tapiceria?: BoolFieldUpdateOperationsInput | boolean
    cinturones?: BoolFieldUpdateOperationsInput | boolean
    orden_aseo?: BoolFieldUpdateOperationsInput | boolean
    suspension?: BoolFieldUpdateOperationsInput | boolean
    altas_bajas?: BoolFieldUpdateOperationsInput | boolean
    horas_sueno?: BoolFieldUpdateOperationsInput | boolean
    indicadores?: BoolFieldUpdateOperationsInput | boolean
    tapa_tanque?: BoolFieldUpdateOperationsInput | boolean
    aceite_motor?: BoolFieldUpdateOperationsInput | boolean
    libre_fatiga?: BoolFieldUpdateOperationsInput | boolean
    direccionales?: BoolFieldUpdateOperationsInput | boolean
    documentacion?: BoolFieldUpdateOperationsInput | boolean
    fluido_frenos?: BoolFieldUpdateOperationsInput | boolean
    kit_ambiental?: BoolFieldUpdateOperationsInput | boolean
    limpia_brisas?: BoolFieldUpdateOperationsInput | boolean
    espejos_estado?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type historial_conductoresCreateManyInspeccionInput = {
    id?: string
  }

  export type historial_conductoresUpdateWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_conductoresUncheckedUpdateWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
  }

  export type historial_conductoresUncheckedUpdateManyWithoutInspeccionInput = {
    id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use InspeccionesCountOutputTypeDefaultArgs instead
     */
    export type InspeccionesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = InspeccionesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use inspeccionesDefaultArgs instead
     */
    export type inspeccionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = inspeccionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use archivos_procesadosDefaultArgs instead
     */
    export type archivos_procesadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = archivos_procesadosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use historial_conductoresDefaultArgs instead
     */
    export type historial_conductoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = historial_conductoresDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}