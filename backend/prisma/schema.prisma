// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// üöó Modelo principal de inspecciones vehiculares
model Inspeccion {
  id                    String    @id @default(cuid())
  
  // üìÖ Informaci√≥n temporal
  fecha                 DateTime  @db.Date
  id                    String    @id @default(cuid())
  marca_temporal        Float     // Marca temporal del Excel
  nombre_inspector      String    @db.VarChar(200)
  contrato              String    @db.VarChar(100)
  campo_coordinacion    String    @db.VarChar(100)
  placa_vehiculo        String    @db.VarChar(20)
  kilometraje           Int
  turno                 String    @db.VarChar(20)
  altas_bajas           Boolean
  direccionales         Boolean
  parqueo               Boolean
  freno                 Boolean
  reversa_alarma        Boolean
  espejos               Boolean
  vidrio_frontal        Boolean
  orden_aseo            Boolean
  pito                  Boolean
  gps                   Boolean
  frenos                Boolean
  freno_emergencia      Boolean
  cinturones            Boolean
  puertas               Boolean
  vidrios               Boolean
  limpia_brisas         Boolean
  extintor_vigente      Boolean
  botiquin              Boolean
  tapiceria             Boolean
  indicadores           Boolean
  objetos_sueltos       Boolean
  aceite_motor          Boolean
  fluido_frenos         Boolean
  fluido_direccion      Boolean
  fluido_refrigerante   Boolean
  fluido_limpia_parabrisas Boolean
  correas               Boolean
  baterias              Boolean
  llantas_labrado       Boolean
  llantas_sin_cortes    Boolean
  llanta_repuesto       Boolean
  copas_pernos_llantas  Boolean
  suspension            Boolean
  direccion_terminales  Boolean
  tapa_tanque           Boolean
  equipo_carretera      Boolean
  kit_ambiental         Boolean
  documentacion         Boolean
  observaciones         String?   @db.Text
  horas_sueno           Boolean
  libre_fatiga          Boolean
  condiciones_aptas     Boolean
  consumo_medicamentos  Boolean
  placa_vehiculo_extra  String?   @db.VarChar(20)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  historial             HistorialConductor[]
  @@index([marca_temporal, turno])
  @@index([placa_vehiculo])
  @@index([contrato, campo_coordinacion])
  @@map("inspecciones")
  historial             HistorialConductor[]
  
  // üîç √çndices para optimizaci√≥n
  @@index([fecha, turno])
  @@index([placa_vehiculo])
  @@index([contrato, campo])
  @@index([ano, mes])
  @@index([tiene_alerta_roja, tiene_advertencias])
  @@map("inspecciones")
}

// üìà Modelo para historial de conductores
model HistorialConductor {
  id                String     @id @default(cuid())
  conductor_nombre  String     @db.VarChar(200)
  
  // Estad√≠sticas acumuladas
  total_inspecciones     Int      @default(0)
  alertas_rojas_total    Int      @default(0)
  advertencias_total     Int      @default(0)
  ultima_inspeccion      DateTime?
  
  // Tendencias de riesgo
  promedio_riesgo        Float    @default(0)
  dias_sin_incidentes    Int      @default(0)
  
  // Relaci√≥n con inspecciones
  inspeccionId      String
  inspeccion        Inspeccion @relation(fields: [inspeccionId], references: [id], onDelete: Cascade)
  
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  
  @@map("historial_conductores")
}

// üìä Modelo para m√©tricas y reportes
model MetricasReporte {
  id                    String   @id @default(cuid())
  fecha_reporte         DateTime @db.Date
  ano                   Int
  mes                   Int
  
  // M√©tricas generales
  total_inspecciones    Int      @default(0)
  total_conductores     Int      @default(0)
  total_vehiculos       Int      @default(0)
  
  // M√©tricas de alertas
  alertas_rojas         Int      @default(0)
  advertencias          Int      @default(0)
  inspecciones_exitosas Int      @default(0)
  
  // M√©tricas de fatiga (NUEVO)
  conductores_medicamentos    Int @default(0) // Consumo medicamentos
  conductores_poco_sueno      Int @default(0) // < 7 horas sue√±o
  conductores_con_sintomas    Int @default(0) // S√≠ntomas de fatiga
  conductores_no_aptos        Int @default(0) // No se sienten aptos
  
  // M√©tricas por contrato/campo
  metricas_por_contrato Json?
  metricas_por_campo    Json?
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@unique([fecha_reporte, ano, mes])
  @@index([ano, mes])
  @@map("metricas_reportes")
}

// üóÇÔ∏è Modelo para archivos procesados (control de duplicados)
model ArchivosProcesados {
  id                String   @id @default(cuid())
  nombre_archivo    String   @db.VarChar(255)
  hash_archivo      String   @unique @db.VarChar(64) // SHA-256 del contenido
  
  // Metadatos del archivo
  ano_detectado     Int
  meses_detectados  Int[]    // Array de meses encontrados
  total_registros   Int      @default(0)
  registros_nuevos  Int      @default(0)
  registros_duplicados Int   @default(0)
  
  // Estado del procesamiento
  estado_procesamiento String @default("PROCESADO") @db.VarChar(50)
  tiempo_procesamiento Float?  // En segundos
  
  // Validaciones
  errores_validacion Json?    // Array de errores encontrados
  advertencias       Json?    // Array de advertencias
  
  fecha_procesamiento DateTime @default(now())
  usuario_carga       String?  @db.VarChar(100)
  
  @@index([ano_detectado])
  @@index([fecha_procesamiento])
  @@map("archivos_procesados")
}

// üè∑Ô∏è Enums para tipado fuerte
enum EstadoInspeccion {
  PENDIENTE
  APROBADO
  RECHAZADO
  EN_REVISION
  ALERTA_ROJA
  ADVERTENCIA
}

enum NivelRiesgo {
  BAJO
  MEDIO
  ALTO
  CRITICO
}